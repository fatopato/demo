/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.supremainc;

public class BS_SDK_V2 implements BS_SDK_V2Constants {
  public static String getBS2_INVAILD_IP_ADDRESS() {
    return BS_SDK_V2JNI.BS2_INVAILD_IP_ADDRESS_get();
  }

  public static BS2AccessGroup new_BS2AccessGroupHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2AccessGroupHandler();
    return (cPtr == 0) ? null : new BS2AccessGroup(cPtr, false);
  }

  public static BS2AccessGroup copy_BS2AccessGroupHandler(BS2AccessGroup value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2AccessGroupHandler(BS2AccessGroup.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2AccessGroup(cPtr, false);
  }

  public static void delete_BS2AccessGroupHandler(BS2AccessGroup obj) {
    BS_SDK_V2JNI.delete_BS2AccessGroupHandler(BS2AccessGroup.getCPtr(obj), obj);
  }

  public static void BS2AccessGroupHandler_assign(BS2AccessGroup obj, BS2AccessGroup value) {
    BS_SDK_V2JNI.BS2AccessGroupHandler_assign(BS2AccessGroup.getCPtr(obj), obj, BS2AccessGroup.getCPtr(value), value);
  }

  public static BS2AccessGroup BS2AccessGroupHandler_value(BS2AccessGroup obj) {
    return new BS2AccessGroup(BS_SDK_V2JNI.BS2AccessGroupHandler_value(BS2AccessGroup.getCPtr(obj), obj), true);
  }

  public static BS2AccessLevel new_BS2AccessLevelHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2AccessLevelHandler();
    return (cPtr == 0) ? null : new BS2AccessLevel(cPtr, false);
  }

  public static BS2AccessLevel copy_BS2AccessLevelHandler(BS2AccessLevel value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2AccessLevelHandler(BS2AccessLevel.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2AccessLevel(cPtr, false);
  }

  public static void delete_BS2AccessLevelHandler(BS2AccessLevel obj) {
    BS_SDK_V2JNI.delete_BS2AccessLevelHandler(BS2AccessLevel.getCPtr(obj), obj);
  }

  public static void BS2AccessLevelHandler_assign(BS2AccessLevel obj, BS2AccessLevel value) {
    BS_SDK_V2JNI.BS2AccessLevelHandler_assign(BS2AccessLevel.getCPtr(obj), obj, BS2AccessLevel.getCPtr(value), value);
  }

  public static BS2AccessLevel BS2AccessLevelHandler_value(BS2AccessLevel obj) {
    return new BS2AccessLevel(BS_SDK_V2JNI.BS2AccessLevelHandler_value(BS2AccessLevel.getCPtr(obj), obj), true);
  }

  public static BS2AntiPassbackZone new_BS2AntiPassbackZoneHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2AntiPassbackZoneHandler();
    return (cPtr == 0) ? null : new BS2AntiPassbackZone(cPtr, false);
  }

  public static BS2AntiPassbackZone copy_BS2AntiPassbackZoneHandler(BS2AntiPassbackZone value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2AntiPassbackZoneHandler(BS2AntiPassbackZone.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2AntiPassbackZone(cPtr, false);
  }

  public static void delete_BS2AntiPassbackZoneHandler(BS2AntiPassbackZone obj) {
    BS_SDK_V2JNI.delete_BS2AntiPassbackZoneHandler(BS2AntiPassbackZone.getCPtr(obj), obj);
  }

  public static void BS2AntiPassbackZoneHandler_assign(BS2AntiPassbackZone obj, BS2AntiPassbackZone value) {
    BS_SDK_V2JNI.BS2AntiPassbackZoneHandler_assign(BS2AntiPassbackZone.getCPtr(obj), obj, BS2AntiPassbackZone.getCPtr(value), value);
  }

  public static BS2AntiPassbackZone BS2AntiPassbackZoneHandler_value(BS2AntiPassbackZone obj) {
    return new BS2AntiPassbackZone(BS_SDK_V2JNI.BS2AntiPassbackZoneHandler_value(BS2AntiPassbackZone.getCPtr(obj), obj), true);
  }

  public static BS2AuthGroup new_BS2AuthGroupHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2AuthGroupHandler();
    return (cPtr == 0) ? null : new BS2AuthGroup(cPtr, false);
  }

  public static BS2AuthGroup copy_BS2AuthGroupHandler(BS2AuthGroup value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2AuthGroupHandler(BS2AuthGroup.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2AuthGroup(cPtr, false);
  }

  public static void delete_BS2AuthGroupHandler(BS2AuthGroup obj) {
    BS_SDK_V2JNI.delete_BS2AuthGroupHandler(BS2AuthGroup.getCPtr(obj), obj);
  }

  public static void BS2AuthGroupHandler_assign(BS2AuthGroup obj, BS2AuthGroup value) {
    BS_SDK_V2JNI.BS2AuthGroupHandler_assign(BS2AuthGroup.getCPtr(obj), obj, BS2AuthGroup.getCPtr(value), value);
  }

  public static BS2AuthGroup BS2AuthGroupHandler_value(BS2AuthGroup obj) {
    return new BS2AuthGroup(BS_SDK_V2JNI.BS2AuthGroupHandler_value(BS2AuthGroup.getCPtr(obj), obj), true);
  }

  public static BS2BlackList new_BS2BlackListHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2BlackListHandler();
    return (cPtr == 0) ? null : new BS2BlackList(cPtr, false);
  }

  public static BS2BlackList copy_BS2BlackListHandler(BS2BlackList value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2BlackListHandler(BS2BlackList.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2BlackList(cPtr, false);
  }

  public static void delete_BS2BlackListHandler(BS2BlackList obj) {
    BS_SDK_V2JNI.delete_BS2BlackListHandler(BS2BlackList.getCPtr(obj), obj);
  }

  public static void BS2BlackListHandler_assign(BS2BlackList obj, BS2BlackList value) {
    BS_SDK_V2JNI.BS2BlackListHandler_assign(BS2BlackList.getCPtr(obj), obj, BS2BlackList.getCPtr(value), value);
  }

  public static BS2BlackList BS2BlackListHandler_value(BS2BlackList obj) {
    return new BS2BlackList(BS_SDK_V2JNI.BS2BlackListHandler_value(BS2BlackList.getCPtr(obj), obj), true);
  }

  public static BS2DeviceNode new_BS2DeviceNodeHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2DeviceNodeHandler();
    return (cPtr == 0) ? null : new BS2DeviceNode(cPtr, false);
  }

  public static BS2DeviceNode copy_BS2DeviceNodeHandler(BS2DeviceNode value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2DeviceNodeHandler(BS2DeviceNode.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2DeviceNode(cPtr, false);
  }

  public static void delete_BS2DeviceNodeHandler(BS2DeviceNode obj) {
    BS_SDK_V2JNI.delete_BS2DeviceNodeHandler(BS2DeviceNode.getCPtr(obj), obj);
  }

  public static void BS2DeviceNodeHandler_assign(BS2DeviceNode obj, BS2DeviceNode value) {
    BS_SDK_V2JNI.BS2DeviceNodeHandler_assign(BS2DeviceNode.getCPtr(obj), obj, BS2DeviceNode.getCPtr(value), value);
  }

  public static BS2DeviceNode BS2DeviceNodeHandler_value(BS2DeviceNode obj) {
    return new BS2DeviceNode(BS_SDK_V2JNI.BS2DeviceNodeHandler_value(BS2DeviceNode.getCPtr(obj), obj), true);
  }

  public static BS2DeviceZone new_BS2DeviceZoneHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2DeviceZoneHandler();
    return (cPtr == 0) ? null : new BS2DeviceZone(cPtr, false);
  }

  public static BS2DeviceZone copy_BS2DeviceZoneHandler(BS2DeviceZone value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2DeviceZoneHandler(BS2DeviceZone.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2DeviceZone(cPtr, false);
  }

  public static void delete_BS2DeviceZoneHandler(BS2DeviceZone obj) {
    BS_SDK_V2JNI.delete_BS2DeviceZoneHandler(BS2DeviceZone.getCPtr(obj), obj);
  }

  public static void BS2DeviceZoneHandler_assign(BS2DeviceZone obj, BS2DeviceZone value) {
    BS_SDK_V2JNI.BS2DeviceZoneHandler_assign(BS2DeviceZone.getCPtr(obj), obj, BS2DeviceZone.getCPtr(value), value);
  }

  public static BS2DeviceZone BS2DeviceZoneHandler_value(BS2DeviceZone obj) {
    return new BS2DeviceZone(BS_SDK_V2JNI.BS2DeviceZoneHandler_value(BS2DeviceZone.getCPtr(obj), obj), true);
  }

  public static BS2DeviceZoneAGEntranceLimit new_BS2DeviceZoneAGEntranceLimitHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2DeviceZoneAGEntranceLimitHandler();
    return (cPtr == 0) ? null : new BS2DeviceZoneAGEntranceLimit(cPtr, false);
  }

  public static BS2DeviceZoneAGEntranceLimit copy_BS2DeviceZoneAGEntranceLimitHandler(BS2DeviceZoneAGEntranceLimit value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2DeviceZoneAGEntranceLimitHandler(BS2DeviceZoneAGEntranceLimit.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2DeviceZoneAGEntranceLimit(cPtr, false);
  }

  public static void delete_BS2DeviceZoneAGEntranceLimitHandler(BS2DeviceZoneAGEntranceLimit obj) {
    BS_SDK_V2JNI.delete_BS2DeviceZoneAGEntranceLimitHandler(BS2DeviceZoneAGEntranceLimit.getCPtr(obj), obj);
  }

  public static void BS2DeviceZoneAGEntranceLimitHandler_assign(BS2DeviceZoneAGEntranceLimit obj, BS2DeviceZoneAGEntranceLimit value) {
    BS_SDK_V2JNI.BS2DeviceZoneAGEntranceLimitHandler_assign(BS2DeviceZoneAGEntranceLimit.getCPtr(obj), obj, BS2DeviceZoneAGEntranceLimit.getCPtr(value), value);
  }

  public static BS2DeviceZoneAGEntranceLimit BS2DeviceZoneAGEntranceLimitHandler_value(BS2DeviceZoneAGEntranceLimit obj) {
    return new BS2DeviceZoneAGEntranceLimit(BS_SDK_V2JNI.BS2DeviceZoneAGEntranceLimitHandler_value(BS2DeviceZoneAGEntranceLimit.getCPtr(obj), obj), true);
  }

  public static BS2Door new_BS2DoorHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2DoorHandler();
    return (cPtr == 0) ? null : new BS2Door(cPtr, false);
  }

  public static BS2Door copy_BS2DoorHandler(BS2Door value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2DoorHandler(BS2Door.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2Door(cPtr, false);
  }

  public static void delete_BS2DoorHandler(BS2Door obj) {
    BS_SDK_V2JNI.delete_BS2DoorHandler(BS2Door.getCPtr(obj), obj);
  }

  public static void BS2DoorHandler_assign(BS2Door obj, BS2Door value) {
    BS_SDK_V2JNI.BS2DoorHandler_assign(BS2Door.getCPtr(obj), obj, BS2Door.getCPtr(value), value);
  }

  public static BS2Door BS2DoorHandler_value(BS2Door obj) {
    return new BS2Door(BS_SDK_V2JNI.BS2DoorHandler_value(BS2Door.getCPtr(obj), obj), true);
  }

  public static BS2DoorStatus new_BS2DoorStatusHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2DoorStatusHandler();
    return (cPtr == 0) ? null : new BS2DoorStatus(cPtr, false);
  }

  public static BS2DoorStatus copy_BS2DoorStatusHandler(BS2DoorStatus value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2DoorStatusHandler(BS2DoorStatus.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2DoorStatus(cPtr, false);
  }

  public static void delete_BS2DoorStatusHandler(BS2DoorStatus obj) {
    BS_SDK_V2JNI.delete_BS2DoorStatusHandler(BS2DoorStatus.getCPtr(obj), obj);
  }

  public static void BS2DoorStatusHandler_assign(BS2DoorStatus obj, BS2DoorStatus value) {
    BS_SDK_V2JNI.BS2DoorStatusHandler_assign(BS2DoorStatus.getCPtr(obj), obj, BS2DoorStatus.getCPtr(value), value);
  }

  public static BS2DoorStatus BS2DoorStatusHandler_value(BS2DoorStatus obj) {
    return new BS2DoorStatus(BS_SDK_V2JNI.BS2DoorStatusHandler_value(BS2DoorStatus.getCPtr(obj), obj), true);
  }

  public static BS2Event new_BS2EventHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2EventHandler();
    return (cPtr == 0) ? null : new BS2Event(cPtr, false);
  }

  public static BS2Event copy_BS2EventHandler(BS2Event value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2EventHandler(BS2Event.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2Event(cPtr, false);
  }

  public static void delete_BS2EventHandler(BS2Event obj) {
    BS_SDK_V2JNI.delete_BS2EventHandler(BS2Event.getCPtr(obj), obj);
  }

  public static void BS2EventHandler_assign(BS2Event obj, BS2Event value) {
    BS_SDK_V2JNI.BS2EventHandler_assign(BS2Event.getCPtr(obj), obj, BS2Event.getCPtr(value), value);
  }

  public static BS2Event BS2EventHandler_value(BS2Event obj) {
    return new BS2Event(BS_SDK_V2JNI.BS2EventHandler_value(BS2Event.getCPtr(obj), obj), true);
  }

  public static BS2EventBlob new_BS2EventBlobHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2EventBlobHandler();
    return (cPtr == 0) ? null : new BS2EventBlob(cPtr, false);
  }

  public static BS2EventBlob copy_BS2EventBlobHandler(BS2EventBlob value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2EventBlobHandler(BS2EventBlob.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2EventBlob(cPtr, false);
  }

  public static void delete_BS2EventBlobHandler(BS2EventBlob obj) {
    BS_SDK_V2JNI.delete_BS2EventBlobHandler(BS2EventBlob.getCPtr(obj), obj);
  }

  public static void BS2EventBlobHandler_assign(BS2EventBlob obj, BS2EventBlob value) {
    BS_SDK_V2JNI.BS2EventBlobHandler_assign(BS2EventBlob.getCPtr(obj), obj, BS2EventBlob.getCPtr(value), value);
  }

  public static BS2EventBlob BS2EventBlobHandler_value(BS2EventBlob obj) {
    return new BS2EventBlob(BS_SDK_V2JNI.BS2EventBlobHandler_value(BS2EventBlob.getCPtr(obj), obj), true);
  }

  public static BS2FireAlarmZone new_BS2FireAlarmZoneHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2FireAlarmZoneHandler();
    return (cPtr == 0) ? null : new BS2FireAlarmZone(cPtr, false);
  }

  public static BS2FireAlarmZone copy_BS2FireAlarmZoneHandler(BS2FireAlarmZone value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2FireAlarmZoneHandler(BS2FireAlarmZone.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2FireAlarmZone(cPtr, false);
  }

  public static void delete_BS2FireAlarmZoneHandler(BS2FireAlarmZone obj) {
    BS_SDK_V2JNI.delete_BS2FireAlarmZoneHandler(BS2FireAlarmZone.getCPtr(obj), obj);
  }

  public static void BS2FireAlarmZoneHandler_assign(BS2FireAlarmZone obj, BS2FireAlarmZone value) {
    BS_SDK_V2JNI.BS2FireAlarmZoneHandler_assign(BS2FireAlarmZone.getCPtr(obj), obj, BS2FireAlarmZone.getCPtr(value), value);
  }

  public static BS2FireAlarmZone BS2FireAlarmZoneHandler_value(BS2FireAlarmZone obj) {
    return new BS2FireAlarmZone(BS_SDK_V2JNI.BS2FireAlarmZoneHandler_value(BS2FireAlarmZone.getCPtr(obj), obj), true);
  }

  public static BS2FloorLevel new_BS2FloorLevelHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2FloorLevelHandler();
    return (cPtr == 0) ? null : new BS2FloorLevel(cPtr, false);
  }

  public static BS2FloorLevel copy_BS2FloorLevelHandler(BS2FloorLevel value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2FloorLevelHandler(BS2FloorLevel.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2FloorLevel(cPtr, false);
  }

  public static void delete_BS2FloorLevelHandler(BS2FloorLevel obj) {
    BS_SDK_V2JNI.delete_BS2FloorLevelHandler(BS2FloorLevel.getCPtr(obj), obj);
  }

  public static void BS2FloorLevelHandler_assign(BS2FloorLevel obj, BS2FloorLevel value) {
    BS_SDK_V2JNI.BS2FloorLevelHandler_assign(BS2FloorLevel.getCPtr(obj), obj, BS2FloorLevel.getCPtr(value), value);
  }

  public static BS2FloorLevel BS2FloorLevelHandler_value(BS2FloorLevel obj) {
    return new BS2FloorLevel(BS_SDK_V2JNI.BS2FloorLevelHandler_value(BS2FloorLevel.getCPtr(obj), obj), true);
  }

  public static BS2HolidayGroup new_BS2HolidayGroupHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2HolidayGroupHandler();
    return (cPtr == 0) ? null : new BS2HolidayGroup(cPtr, false);
  }

  public static BS2HolidayGroup copy_BS2HolidayGroupHandler(BS2HolidayGroup value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2HolidayGroupHandler(BS2HolidayGroup.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2HolidayGroup(cPtr, false);
  }

  public static void delete_BS2HolidayGroupHandler(BS2HolidayGroup obj) {
    BS_SDK_V2JNI.delete_BS2HolidayGroupHandler(BS2HolidayGroup.getCPtr(obj), obj);
  }

  public static void BS2HolidayGroupHandler_assign(BS2HolidayGroup obj, BS2HolidayGroup value) {
    BS_SDK_V2JNI.BS2HolidayGroupHandler_assign(BS2HolidayGroup.getCPtr(obj), obj, BS2HolidayGroup.getCPtr(value), value);
  }

  public static BS2HolidayGroup BS2HolidayGroupHandler_value(BS2HolidayGroup obj) {
    return new BS2HolidayGroup(BS_SDK_V2JNI.BS2HolidayGroupHandler_value(BS2HolidayGroup.getCPtr(obj), obj), true);
  }

  public static BS2Lift new_BS2LiftHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2LiftHandler();
    return (cPtr == 0) ? null : new BS2Lift(cPtr, false);
  }

  public static BS2Lift copy_BS2LiftHandler(BS2Lift value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2LiftHandler(BS2Lift.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2Lift(cPtr, false);
  }

  public static void delete_BS2LiftHandler(BS2Lift obj) {
    BS_SDK_V2JNI.delete_BS2LiftHandler(BS2Lift.getCPtr(obj), obj);
  }

  public static void BS2LiftHandler_assign(BS2Lift obj, BS2Lift value) {
    BS_SDK_V2JNI.BS2LiftHandler_assign(BS2Lift.getCPtr(obj), obj, BS2Lift.getCPtr(value), value);
  }

  public static BS2Lift BS2LiftHandler_value(BS2Lift obj) {
    return new BS2Lift(BS_SDK_V2JNI.BS2LiftHandler_value(BS2Lift.getCPtr(obj), obj), true);
  }

  public static BS2LiftStatus new_BS2LiftStatusHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2LiftStatusHandler();
    return (cPtr == 0) ? null : new BS2LiftStatus(cPtr, false);
  }

  public static BS2LiftStatus copy_BS2LiftStatusHandler(BS2LiftStatus value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2LiftStatusHandler(BS2LiftStatus.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2LiftStatus(cPtr, false);
  }

  public static void delete_BS2LiftStatusHandler(BS2LiftStatus obj) {
    BS_SDK_V2JNI.delete_BS2LiftStatusHandler(BS2LiftStatus.getCPtr(obj), obj);
  }

  public static void BS2LiftStatusHandler_assign(BS2LiftStatus obj, BS2LiftStatus value) {
    BS_SDK_V2JNI.BS2LiftStatusHandler_assign(BS2LiftStatus.getCPtr(obj), obj, BS2LiftStatus.getCPtr(value), value);
  }

  public static BS2LiftStatus BS2LiftStatusHandler_value(BS2LiftStatus obj) {
    return new BS2LiftStatus(BS_SDK_V2JNI.BS2LiftStatusHandler_value(BS2LiftStatus.getCPtr(obj), obj), true);
  }

  public static BS2Rs485SlaveDevice new_BS2Rs485SlaveDeviceHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2Rs485SlaveDeviceHandler();
    return (cPtr == 0) ? null : new BS2Rs485SlaveDevice(cPtr, false);
  }

  public static BS2Rs485SlaveDevice copy_BS2Rs485SlaveDeviceHandler(BS2Rs485SlaveDevice value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2Rs485SlaveDeviceHandler(BS2Rs485SlaveDevice.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2Rs485SlaveDevice(cPtr, false);
  }

  public static void delete_BS2Rs485SlaveDeviceHandler(BS2Rs485SlaveDevice obj) {
    BS_SDK_V2JNI.delete_BS2Rs485SlaveDeviceHandler(BS2Rs485SlaveDevice.getCPtr(obj), obj);
  }

  public static void BS2Rs485SlaveDeviceHandler_assign(BS2Rs485SlaveDevice obj, BS2Rs485SlaveDevice value) {
    BS_SDK_V2JNI.BS2Rs485SlaveDeviceHandler_assign(BS2Rs485SlaveDevice.getCPtr(obj), obj, BS2Rs485SlaveDevice.getCPtr(value), value);
  }

  public static BS2Rs485SlaveDevice BS2Rs485SlaveDeviceHandler_value(BS2Rs485SlaveDevice obj) {
    return new BS2Rs485SlaveDevice(BS_SDK_V2JNI.BS2Rs485SlaveDeviceHandler_value(BS2Rs485SlaveDevice.getCPtr(obj), obj), true);
  }

  public static BS2Rs485SlaveDeviceEX new_BS2Rs485SlaveDeviceEXHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2Rs485SlaveDeviceEXHandler();
    return (cPtr == 0) ? null : new BS2Rs485SlaveDeviceEX(cPtr, false);
  }

  public static BS2Rs485SlaveDeviceEX copy_BS2Rs485SlaveDeviceEXHandler(BS2Rs485SlaveDeviceEX value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2Rs485SlaveDeviceEXHandler(BS2Rs485SlaveDeviceEX.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2Rs485SlaveDeviceEX(cPtr, false);
  }

  public static void delete_BS2Rs485SlaveDeviceEXHandler(BS2Rs485SlaveDeviceEX obj) {
    BS_SDK_V2JNI.delete_BS2Rs485SlaveDeviceEXHandler(BS2Rs485SlaveDeviceEX.getCPtr(obj), obj);
  }

  public static void BS2Rs485SlaveDeviceEXHandler_assign(BS2Rs485SlaveDeviceEX obj, BS2Rs485SlaveDeviceEX value) {
    BS_SDK_V2JNI.BS2Rs485SlaveDeviceEXHandler_assign(BS2Rs485SlaveDeviceEX.getCPtr(obj), obj, BS2Rs485SlaveDeviceEX.getCPtr(value), value);
  }

  public static BS2Rs485SlaveDeviceEX BS2Rs485SlaveDeviceEXHandler_value(BS2Rs485SlaveDeviceEX obj) {
    return new BS2Rs485SlaveDeviceEX(BS_SDK_V2JNI.BS2Rs485SlaveDeviceEXHandler_value(BS2Rs485SlaveDeviceEX.getCPtr(obj), obj), true);
  }

  public static BS2Schedule new_BS2ScheduleHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2ScheduleHandler();
    return (cPtr == 0) ? null : new BS2Schedule(cPtr, false);
  }

  public static BS2Schedule copy_BS2ScheduleHandler(BS2Schedule value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2ScheduleHandler(BS2Schedule.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2Schedule(cPtr, false);
  }

  public static void delete_BS2ScheduleHandler(BS2Schedule obj) {
    BS_SDK_V2JNI.delete_BS2ScheduleHandler(BS2Schedule.getCPtr(obj), obj);
  }

  public static void BS2ScheduleHandler_assign(BS2Schedule obj, BS2Schedule value) {
    BS_SDK_V2JNI.BS2ScheduleHandler_assign(BS2Schedule.getCPtr(obj), obj, BS2Schedule.getCPtr(value), value);
  }

  public static BS2Schedule BS2ScheduleHandler_value(BS2Schedule obj) {
    return new BS2Schedule(BS_SDK_V2JNI.BS2ScheduleHandler_value(BS2Schedule.getCPtr(obj), obj), true);
  }

  public static BS2ScheduledLockUnlockZone new_BS2ScheduledLockUnlockZoneHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2ScheduledLockUnlockZoneHandler();
    return (cPtr == 0) ? null : new BS2ScheduledLockUnlockZone(cPtr, false);
  }

  public static BS2ScheduledLockUnlockZone copy_BS2ScheduledLockUnlockZoneHandler(BS2ScheduledLockUnlockZone value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2ScheduledLockUnlockZoneHandler(BS2ScheduledLockUnlockZone.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2ScheduledLockUnlockZone(cPtr, false);
  }

  public static void delete_BS2ScheduledLockUnlockZoneHandler(BS2ScheduledLockUnlockZone obj) {
    BS_SDK_V2JNI.delete_BS2ScheduledLockUnlockZoneHandler(BS2ScheduledLockUnlockZone.getCPtr(obj), obj);
  }

  public static void BS2ScheduledLockUnlockZoneHandler_assign(BS2ScheduledLockUnlockZone obj, BS2ScheduledLockUnlockZone value) {
    BS_SDK_V2JNI.BS2ScheduledLockUnlockZoneHandler_assign(BS2ScheduledLockUnlockZone.getCPtr(obj), obj, BS2ScheduledLockUnlockZone.getCPtr(value), value);
  }

  public static BS2ScheduledLockUnlockZone BS2ScheduledLockUnlockZoneHandler_value(BS2ScheduledLockUnlockZone obj) {
    return new BS2ScheduledLockUnlockZone(BS_SDK_V2JNI.BS2ScheduledLockUnlockZoneHandler_value(BS2ScheduledLockUnlockZone.getCPtr(obj), obj), true);
  }

  public static BS2TimedAntiPassbackZone new_BS2TimedAntiPassbackZoneHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2TimedAntiPassbackZoneHandler();
    return (cPtr == 0) ? null : new BS2TimedAntiPassbackZone(cPtr, false);
  }

  public static BS2TimedAntiPassbackZone copy_BS2TimedAntiPassbackZoneHandler(BS2TimedAntiPassbackZone value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2TimedAntiPassbackZoneHandler(BS2TimedAntiPassbackZone.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2TimedAntiPassbackZone(cPtr, false);
  }

  public static void delete_BS2TimedAntiPassbackZoneHandler(BS2TimedAntiPassbackZone obj) {
    BS_SDK_V2JNI.delete_BS2TimedAntiPassbackZoneHandler(BS2TimedAntiPassbackZone.getCPtr(obj), obj);
  }

  public static void BS2TimedAntiPassbackZoneHandler_assign(BS2TimedAntiPassbackZone obj, BS2TimedAntiPassbackZone value) {
    BS_SDK_V2JNI.BS2TimedAntiPassbackZoneHandler_assign(BS2TimedAntiPassbackZone.getCPtr(obj), obj, BS2TimedAntiPassbackZone.getCPtr(value), value);
  }

  public static BS2TimedAntiPassbackZone BS2TimedAntiPassbackZoneHandler_value(BS2TimedAntiPassbackZone obj) {
    return new BS2TimedAntiPassbackZone(BS_SDK_V2JNI.BS2TimedAntiPassbackZoneHandler_value(BS2TimedAntiPassbackZone.getCPtr(obj), obj), true);
  }

  public static BS2ZoneStatus new_BS2ZoneStatusHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2ZoneStatusHandler();
    return (cPtr == 0) ? null : new BS2ZoneStatus(cPtr, false);
  }

  public static BS2ZoneStatus copy_BS2ZoneStatusHandler(BS2ZoneStatus value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2ZoneStatusHandler(BS2ZoneStatus.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2ZoneStatus(cPtr, false);
  }

  public static void delete_BS2ZoneStatusHandler(BS2ZoneStatus obj) {
    BS_SDK_V2JNI.delete_BS2ZoneStatusHandler(BS2ZoneStatus.getCPtr(obj), obj);
  }

  public static void BS2ZoneStatusHandler_assign(BS2ZoneStatus obj, BS2ZoneStatus value) {
    BS_SDK_V2JNI.BS2ZoneStatusHandler_assign(BS2ZoneStatus.getCPtr(obj), obj, BS2ZoneStatus.getCPtr(value), value);
  }

  public static BS2ZoneStatus BS2ZoneStatusHandler_value(BS2ZoneStatus obj) {
    return new BS2ZoneStatus(BS_SDK_V2JNI.BS2ZoneStatusHandler_value(BS2ZoneStatus.getCPtr(obj), obj), true);
  }

  public static BS2DeviceZoneConfig new_BS2DeviceZoneConfigHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2DeviceZoneConfigHandler();
    return (cPtr == 0) ? null : new BS2DeviceZoneConfig(cPtr, false);
  }

  public static BS2DeviceZoneConfig copy_BS2DeviceZoneConfigHandler(BS2DeviceZoneConfig value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2DeviceZoneConfigHandler(BS2DeviceZoneConfig.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2DeviceZoneConfig(cPtr, false);
  }

  public static void delete_BS2DeviceZoneConfigHandler(BS2DeviceZoneConfig obj) {
    BS_SDK_V2JNI.delete_BS2DeviceZoneConfigHandler(BS2DeviceZoneConfig.getCPtr(obj), obj);
  }

  public static void BS2DeviceZoneConfigHandler_assign(BS2DeviceZoneConfig obj, BS2DeviceZoneConfig value) {
    BS_SDK_V2JNI.BS2DeviceZoneConfigHandler_assign(BS2DeviceZoneConfig.getCPtr(obj), obj, BS2DeviceZoneConfig.getCPtr(value), value);
  }

  public static BS2DeviceZoneConfig BS2DeviceZoneConfigHandler_value(BS2DeviceZoneConfig obj) {
    return new BS2DeviceZoneConfig(BS_SDK_V2JNI.BS2DeviceZoneConfigHandler_value(BS2DeviceZoneConfig.getCPtr(obj), obj), true);
  }

  public static BS2UserBlob new_BS2UserBlobHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2UserBlobHandler();
    return (cPtr == 0) ? null : new BS2UserBlob(cPtr, false);
  }

  public static BS2UserBlob copy_BS2UserBlobHandler(BS2UserBlob value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2UserBlobHandler(BS2UserBlob.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2UserBlob(cPtr, false);
  }

  public static void delete_BS2UserBlobHandler(BS2UserBlob obj) {
    BS_SDK_V2JNI.delete_BS2UserBlobHandler(BS2UserBlob.getCPtr(obj), obj);
  }

  public static void BS2UserBlobHandler_assign(BS2UserBlob obj, BS2UserBlob value) {
    BS_SDK_V2JNI.BS2UserBlobHandler_assign(BS2UserBlob.getCPtr(obj), obj, BS2UserBlob.getCPtr(value), value);
  }

  public static BS2UserBlob BS2UserBlobHandler_value(BS2UserBlob obj) {
    return new BS2UserBlob(BS_SDK_V2JNI.BS2UserBlobHandler_value(BS2UserBlob.getCPtr(obj), obj), true);
  }

  public static BS2User new_BS2UserHandler() {
    long cPtr = BS_SDK_V2JNI.new_BS2UserHandler();
    return (cPtr == 0) ? null : new BS2User(cPtr, false);
  }

  public static BS2User copy_BS2UserHandler(BS2User value) {
    long cPtr = BS_SDK_V2JNI.copy_BS2UserHandler(BS2User.getCPtr(value), value);
    return (cPtr == 0) ? null : new BS2User(cPtr, false);
  }

  public static void delete_BS2UserHandler(BS2User obj) {
    BS_SDK_V2JNI.delete_BS2UserHandler(BS2User.getCPtr(obj), obj);
  }

  public static void BS2UserHandler_assign(BS2User obj, BS2User value) {
    BS_SDK_V2JNI.BS2UserHandler_assign(BS2User.getCPtr(obj), obj, BS2User.getCPtr(value), value);
  }

  public static BS2User BS2UserHandler_value(BS2User obj) {
    return new BS2User(BS_SDK_V2JNI.BS2UserHandler_value(BS2User.getCPtr(obj), obj), true);
  }

  public static int BS2_SetDebugLevel(SWIGTYPE_p_f_p_char__void ptrCBDebugPrint, long debugLevel) {
    return BS_SDK_V2JNI.BS2_SetDebugLevel(SWIGTYPE_p_f_p_char__void.getCPtr(ptrCBDebugPrint), debugLevel);
  }

  public static int BS2_SetDebugExCallback(SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void ptrCBDebugExPrint, long level, long module) {
    return BS_SDK_V2JNI.BS2_SetDebugExCallback(SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void.getCPtr(ptrCBDebugExPrint), level, module);
  }

  public static String BS2_Version() {
    return BS_SDK_V2JNI.BS2_Version();
  }

  public static SWIGTYPE_p_void BS2_AllocateContext() {
    long cPtr = BS_SDK_V2JNI.BS2_AllocateContext();
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void BS2_ReleaseContext(SWIGTYPE_p_void context) {
    BS_SDK_V2JNI.BS2_ReleaseContext(SWIGTYPE_p_void.getCPtr(context));
  }

  public static int BS2_Initialize(SWIGTYPE_p_void context) {
    return BS_SDK_V2JNI.BS2_Initialize(SWIGTYPE_p_void.getCPtr(context));
  }

  public static void BS2_ReleaseObject(SWIGTYPE_p_void object) {
    BS_SDK_V2JNI.BS2_ReleaseObject(SWIGTYPE_p_void.getCPtr(object));
  }

  public static int BS2_SetDeviceSearchingTimeout(SWIGTYPE_p_void context, long second) {
    return BS_SDK_V2JNI.BS2_SetDeviceSearchingTimeout(SWIGTYPE_p_void.getCPtr(context), second);
  }

  public static int BS2_SetMaxThreadCount(SWIGTYPE_p_void context, long maxThreadCount) {
    return BS_SDK_V2JNI.BS2_SetMaxThreadCount(SWIGTYPE_p_void.getCPtr(context), maxThreadCount);
  }

  public static int BS2_SetMaxConnectThreadCount(SWIGTYPE_p_void context, long maxThreadCount) {
    return BS_SDK_V2JNI.BS2_SetMaxConnectThreadCount(SWIGTYPE_p_void.getCPtr(context), maxThreadCount);
  }

  public static int BS2_IsAutoConnection(SWIGTYPE_p_void context, SWIGTYPE_p_int enable) {
    return BS_SDK_V2JNI.BS2_IsAutoConnection(SWIGTYPE_p_void.getCPtr(context), SWIGTYPE_p_int.getCPtr(enable));
  }

  public static int BS2_SetAutoConnection(SWIGTYPE_p_void context, int enable) {
    return BS_SDK_V2JNI.BS2_SetAutoConnection(SWIGTYPE_p_void.getCPtr(context), enable);
  }

  public static int BS2_SetDeviceEventListener(SWIGTYPE_p_void context, Callback ptrDeviceFound, Callback ptrDeviceAccepted, Callback ptrDeviceConnected, Callback ptrDeviceDisconnected) {
    return BS_SDK_V2JNI.BS2_SetDeviceEventListener(SWIGTYPE_p_void.getCPtr(context), ptrDeviceFound, ptrDeviceAccepted, ptrDeviceConnected, ptrDeviceDisconnected);
  }

  public static int BS2_SetNotificationListener(SWIGTYPE_p_void context, Callback ptrAlarmFired, Callback ptrInputDetected, Callback ptrConfigChanged) {
    return BS_SDK_V2JNI.BS2_SetNotificationListener(SWIGTYPE_p_void.getCPtr(context), ptrAlarmFired, ptrInputDetected, ptrConfigChanged);
  }

  public static int BS2_SetServerPort(SWIGTYPE_p_void context, int serverPort) {
    return BS_SDK_V2JNI.BS2_SetServerPort(SWIGTYPE_p_void.getCPtr(context), serverPort);
  }

  public static int BS2_SearchDevices(SWIGTYPE_p_void context) {
    return BS_SDK_V2JNI.BS2_SearchDevices(SWIGTYPE_p_void.getCPtr(context));
  }

  public static int BS2_SearchDevicesEx(SWIGTYPE_p_void context, String hostipAddr) {
    return BS_SDK_V2JNI.BS2_SearchDevicesEx(SWIGTYPE_p_void.getCPtr(context), hostipAddr);
  }

  public static int BS2_GetDevices(SWIGTYPE_p_void context, long[] deviceListObj) {
    return BS_SDK_V2JNI.BS2_GetDevices(SWIGTYPE_p_void.getCPtr(context), deviceListObj);
  }

  public static int BS2_GetDeviceInfo(SWIGTYPE_p_void context, long deviceId, BS2SimpleDeviceInfo deviceInfo) {
    return BS_SDK_V2JNI.BS2_GetDeviceInfo(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2SimpleDeviceInfo.getCPtr(deviceInfo), deviceInfo);
  }

  public static int BS2_GetDeviceInfoEx(SWIGTYPE_p_void context, long deviceId, BS2SimpleDeviceInfo deviceInfo, BS2SimpleDeviceInfoEx deviceInfoEx) {
    return BS_SDK_V2JNI.BS2_GetDeviceInfoEx(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2SimpleDeviceInfo.getCPtr(deviceInfo), deviceInfo, BS2SimpleDeviceInfoEx.getCPtr(deviceInfoEx), deviceInfoEx);
  }

  public static int BS2_ConnectDevice(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_ConnectDevice(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_ConnectDeviceViaIP(SWIGTYPE_p_void context, String deviceAddress, int defaultDevicePort, SWIGTYPE_p_unsigned_int deviceId) {
    return BS_SDK_V2JNI.BS2_ConnectDeviceViaIP(SWIGTYPE_p_void.getCPtr(context), deviceAddress, defaultDevicePort, SWIGTYPE_p_unsigned_int.getCPtr(deviceId));
  }

  public static int BS2_DisconnectDevice(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_DisconnectDevice(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetDeviceTopology(SWIGTYPE_p_void context, long deviceId, BS2DeviceNode[] networkNodeObj) {
    return BS_SDK_V2JNI.BS2_GetDeviceTopology(SWIGTYPE_p_void.getCPtr(context), deviceId, networkNodeObj);
  }

  public static int BS2_SetDeviceTopology(SWIGTYPE_p_void context, long deviceId, BS2DeviceNode networkNode, long numNetworkNode) {
    return BS_SDK_V2JNI.BS2_SetDeviceTopology(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DeviceNode.getCPtr(networkNode), networkNode, numNetworkNode);
  }

  public static int BS2_IsConnected(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_int connected) {
    return BS_SDK_V2JNI.BS2_IsConnected(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_int.getCPtr(connected));
  }

  public static int BS2_SetSSLServerPort(SWIGTYPE_p_void context, int sslServerPort) {
    return BS_SDK_V2JNI.BS2_SetSSLServerPort(SWIGTYPE_p_void.getCPtr(context), sslServerPort);
  }

  public static int BS2_SetSSLHandler(SWIGTYPE_p_void context, Callback ptrPreferMethod, Callback ptrGetRootCaFilePath, Callback ptrGetServerCaFilePath, Callback ptrGetServerPrivateKeyFilePath, Callback ptrGetPassword, Callback ptrOnErrorOccured) {
    return BS_SDK_V2JNI.BS2_SetSSLHandler(SWIGTYPE_p_void.getCPtr(context), ptrPreferMethod, ptrGetRootCaFilePath, ptrGetServerCaFilePath, ptrGetServerPrivateKeyFilePath, ptrGetPassword, ptrOnErrorOccured);
  }

  public static int BS2_SetDeviceSSLEventListener(SWIGTYPE_p_void context, Callback ptrSendRootCA) {
    return BS_SDK_V2JNI.BS2_SetDeviceSSLEventListener(SWIGTYPE_p_void.getCPtr(context), ptrSendRootCA);
  }

  public static int BS2_DisableSSL(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_DisableSSL(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetAccessGroup(SWIGTYPE_p_void context, long deviceId, long[] accessGroupIds, BS2AccessGroup[] accessGroupObj) {
    return BS_SDK_V2JNI.BS2_GetAccessGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, accessGroupIds, accessGroupObj);
  }

  public static int BS2_GetAllAccessGroup(SWIGTYPE_p_void context, long deviceId, BS2AccessGroup[] accessGroupObj) {
    return BS_SDK_V2JNI.BS2_GetAllAccessGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, accessGroupObj);
  }

  public static int BS2_SetAccessGroup(SWIGTYPE_p_void context, long deviceId, BS2AccessGroup accessGroups, long accessGroupCount) {
    return BS_SDK_V2JNI.BS2_SetAccessGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2AccessGroup.getCPtr(accessGroups), accessGroups, accessGroupCount);
  }

  public static int BS2_RemoveAccessGroup(SWIGTYPE_p_void context, long deviceId, long[] accessGroupIds) {
    return BS_SDK_V2JNI.BS2_RemoveAccessGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, accessGroupIds);
  }

  public static int BS2_RemoveAllAccessGroup(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllAccessGroup(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetAccessLevel(SWIGTYPE_p_void context, long deviceId, long[] accessLevelIds, BS2AccessLevel[] accessLevelObj) {
    return BS_SDK_V2JNI.BS2_GetAccessLevel(SWIGTYPE_p_void.getCPtr(context), deviceId, accessLevelIds, accessLevelObj);
  }

  public static int BS2_GetAllAccessLevel(SWIGTYPE_p_void context, long deviceId, BS2AccessLevel[] accessLevelObj) {
    return BS_SDK_V2JNI.BS2_GetAllAccessLevel(SWIGTYPE_p_void.getCPtr(context), deviceId, accessLevelObj);
  }

  public static int BS2_SetAccessLevel(SWIGTYPE_p_void context, long deviceId, BS2AccessLevel accessLevels, long accessLevelCount) {
    return BS_SDK_V2JNI.BS2_SetAccessLevel(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2AccessLevel.getCPtr(accessLevels), accessLevels, accessLevelCount);
  }

  public static int BS2_RemoveAccessLevel(SWIGTYPE_p_void context, long deviceId, long[] accessLevelIds) {
    return BS_SDK_V2JNI.BS2_RemoveAccessLevel(SWIGTYPE_p_void.getCPtr(context), deviceId, accessLevelIds);
  }

  public static int BS2_RemoveAllAccessLevel(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllAccessLevel(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetAccessSchedule(SWIGTYPE_p_void context, long deviceId, long[] accessSheduleIds, BS2Schedule[] accessScheduleObj) {
    return BS_SDK_V2JNI.BS2_GetAccessSchedule(SWIGTYPE_p_void.getCPtr(context), deviceId, accessSheduleIds, accessScheduleObj);
  }

  public static int BS2_GetAllAccessSchedule(SWIGTYPE_p_void context, long deviceId, BS2Schedule[] accessScheduleObj) {
    return BS_SDK_V2JNI.BS2_GetAllAccessSchedule(SWIGTYPE_p_void.getCPtr(context), deviceId, accessScheduleObj);
  }

  public static int BS2_SetAccessSchedule(SWIGTYPE_p_void context, long deviceId, BS2Schedule accessShedules, long accessSheduleCount) {
    return BS_SDK_V2JNI.BS2_SetAccessSchedule(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Schedule.getCPtr(accessShedules), accessShedules, accessSheduleCount);
  }

  public static int BS2_RemoveAccessSchedule(SWIGTYPE_p_void context, long deviceId, long[] accessSheduleIds) {
    return BS_SDK_V2JNI.BS2_RemoveAccessSchedule(SWIGTYPE_p_void.getCPtr(context), deviceId, accessSheduleIds);
  }

  public static int BS2_RemoveAllAccessSchedule(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllAccessSchedule(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetHolidayGroup(SWIGTYPE_p_void context, long deviceId, long[] holidayGroupIds, BS2HolidayGroup[] holidayGroupObj) {
    return BS_SDK_V2JNI.BS2_GetHolidayGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, holidayGroupIds, holidayGroupObj);
  }

  public static int BS2_GetAllHolidayGroup(SWIGTYPE_p_void context, long deviceId, BS2HolidayGroup[] holidayGroupObj) {
    return BS_SDK_V2JNI.BS2_GetAllHolidayGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, holidayGroupObj);
  }

  public static int BS2_SetHolidayGroup(SWIGTYPE_p_void context, long deviceId, BS2HolidayGroup holidayGroups, long holidayGroupCount) {
    return BS_SDK_V2JNI.BS2_SetHolidayGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2HolidayGroup.getCPtr(holidayGroups), holidayGroups, holidayGroupCount);
  }

  public static int BS2_RemoveHolidayGroup(SWIGTYPE_p_void context, long deviceId, long[] holidayGroupIds) {
    return BS_SDK_V2JNI.BS2_RemoveHolidayGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, holidayGroupIds);
  }

  public static int BS2_RemoveAllHolidayGroup(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllHolidayGroup(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetBlackList(SWIGTYPE_p_void context, long deviceId, BS2BlackList blacklists, long blacklistCount, BS2BlackList[] blacklistObj) {
    return BS_SDK_V2JNI.BS2_GetBlackList(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2BlackList.getCPtr(blacklists), blacklists, blacklistCount, blacklistObj);
  }

  public static int BS2_GetAllBlackList(SWIGTYPE_p_void context, long deviceId, BS2BlackList[] blacklistObj) {
    return BS_SDK_V2JNI.BS2_GetAllBlackList(SWIGTYPE_p_void.getCPtr(context), deviceId, blacklistObj);
  }

  public static int BS2_SetBlackList(SWIGTYPE_p_void context, long deviceId, BS2BlackList blacklists, long blacklistCount) {
    return BS_SDK_V2JNI.BS2_SetBlackList(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2BlackList.getCPtr(blacklists), blacklists, blacklistCount);
  }

  public static int BS2_RemoveBlackList(SWIGTYPE_p_void context, long deviceId, BS2BlackList blacklists, long blacklistCount) {
    return BS_SDK_V2JNI.BS2_RemoveBlackList(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2BlackList.getCPtr(blacklists), blacklists, blacklistCount);
  }

  public static int BS2_RemoveAllBlackList(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllBlackList(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_ScanCard(SWIGTYPE_p_void context, long deviceId, BS2Card card, SWIGTYPE_p_f_unsigned_int_unsigned_int__void ptrReadyToScan) {
    return BS_SDK_V2JNI.BS2_ScanCard(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Card.getCPtr(card), card, SWIGTYPE_p_f_unsigned_int_unsigned_int__void.getCPtr(ptrReadyToScan));
  }

  public static int BS2_WriteCard(SWIGTYPE_p_void context, long deviceId, BS2SmartCardData smartCard) {
    return BS_SDK_V2JNI.BS2_WriteCard(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2SmartCardData.getCPtr(smartCard), smartCard);
  }

  public static int BS2_EraseCard(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_EraseCard(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_ClearDatabase(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_ClearDatabase(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_ResetConfig(SWIGTYPE_p_void context, long deviceId, short includingDB) {
    return BS_SDK_V2JNI.BS2_ResetConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, includingDB);
  }

  public static int BS2_ResetConfigExceptNetInfo(SWIGTYPE_p_void context, long deviceId, short includingDB) {
    return BS_SDK_V2JNI.BS2_ResetConfigExceptNetInfo(SWIGTYPE_p_void.getCPtr(context), deviceId, includingDB);
  }

  public static int BS2_GetConfig(SWIGTYPE_p_void context, long deviceId, BS2Configs configs) {
    return BS_SDK_V2JNI.BS2_GetConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Configs.getCPtr(configs), configs);
  }

  public static int BS2_SetConfig(SWIGTYPE_p_void context, long deviceId, BS2Configs configs) {
    return BS_SDK_V2JNI.BS2_SetConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Configs.getCPtr(configs), configs);
  }

  public static int BS2_GetFactoryConfig(SWIGTYPE_p_void context, long deviceId, BS2FactoryConfig config) {
    return BS_SDK_V2JNI.BS2_GetFactoryConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2FactoryConfig.getCPtr(config), config);
  }

  public static int BS2_GetSystemConfig(SWIGTYPE_p_void context, long deviceId, BS2SystemConfig config) {
    return BS_SDK_V2JNI.BS2_GetSystemConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2SystemConfig.getCPtr(config), config);
  }

  public static int BS2_SetSystemConfig(SWIGTYPE_p_void context, long deviceId, BS2SystemConfig config) {
    return BS_SDK_V2JNI.BS2_SetSystemConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2SystemConfig.getCPtr(config), config);
  }

  public static int BS2_GetAuthConfig(SWIGTYPE_p_void context, long deviceId, BS2AuthConfig config) {
    return BS_SDK_V2JNI.BS2_GetAuthConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2AuthConfig.getCPtr(config), config);
  }

  public static int BS2_SetAuthConfig(SWIGTYPE_p_void context, long deviceId, BS2AuthConfig config) {
    return BS_SDK_V2JNI.BS2_SetAuthConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2AuthConfig.getCPtr(config), config);
  }

  public static int BS2_GetStatusConfig(SWIGTYPE_p_void context, long deviceId, BS2StatusConfig config) {
    return BS_SDK_V2JNI.BS2_GetStatusConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2StatusConfig.getCPtr(config), config);
  }

  public static int BS2_SetStatusConfig(SWIGTYPE_p_void context, long deviceId, BS2StatusConfig config) {
    return BS_SDK_V2JNI.BS2_SetStatusConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2StatusConfig.getCPtr(config), config);
  }

  public static int BS2_GetDisplayConfig(SWIGTYPE_p_void context, long deviceId, BS2DisplayConfig config) {
    return BS_SDK_V2JNI.BS2_GetDisplayConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DisplayConfig.getCPtr(config), config);
  }

  public static int BS2_SetDisplayConfig(SWIGTYPE_p_void context, long deviceId, BS2DisplayConfig config) {
    return BS_SDK_V2JNI.BS2_SetDisplayConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DisplayConfig.getCPtr(config), config);
  }

  public static int BS2_GetIPConfig(SWIGTYPE_p_void context, long deviceId, BS2IpConfig config) {
    return BS_SDK_V2JNI.BS2_GetIPConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2IpConfig.getCPtr(config), config);
  }

  public static int BS2_GetIPConfigExt(SWIGTYPE_p_void context, long deviceId, BS2IpConfigExt config) {
    return BS_SDK_V2JNI.BS2_GetIPConfigExt(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2IpConfigExt.getCPtr(config), config);
  }

  public static int BS2_GetIPConfigViaUDP(SWIGTYPE_p_void context, long deviceId, BS2IpConfig config) {
    return BS_SDK_V2JNI.BS2_GetIPConfigViaUDP(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2IpConfig.getCPtr(config), config);
  }

  public static int BS2_SetIPConfig(SWIGTYPE_p_void context, long deviceId, BS2IpConfig config) {
    return BS_SDK_V2JNI.BS2_SetIPConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2IpConfig.getCPtr(config), config);
  }

  public static int BS2_SetIPConfigExt(SWIGTYPE_p_void context, long deviceId, BS2IpConfigExt config) {
    return BS_SDK_V2JNI.BS2_SetIPConfigExt(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2IpConfigExt.getCPtr(config), config);
  }

  public static int BS2_SetIPConfigViaUDP(SWIGTYPE_p_void context, long deviceId, BS2IpConfig config) {
    return BS_SDK_V2JNI.BS2_SetIPConfigViaUDP(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2IpConfig.getCPtr(config), config);
  }

  public static int BS2_GetTNAConfig(SWIGTYPE_p_void context, long deviceId, BS2TNAConfig config) {
    return BS_SDK_V2JNI.BS2_GetTNAConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2TNAConfig.getCPtr(config), config);
  }

  public static int BS2_SetTNAConfig(SWIGTYPE_p_void context, long deviceId, BS2TNAConfig config) {
    return BS_SDK_V2JNI.BS2_SetTNAConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2TNAConfig.getCPtr(config), config);
  }

  public static int BS2_GetCardConfig(SWIGTYPE_p_void context, long deviceId, BS2CardConfig config) {
    return BS_SDK_V2JNI.BS2_GetCardConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2CardConfig.getCPtr(config), config);
  }

  public static int BS2_SetCardConfig(SWIGTYPE_p_void context, long deviceId, BS2CardConfig config) {
    return BS_SDK_V2JNI.BS2_SetCardConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2CardConfig.getCPtr(config), config);
  }

  public static int BS2_GetFingerprintConfig(SWIGTYPE_p_void context, long deviceId, BS2FingerprintConfig config) {
    return BS_SDK_V2JNI.BS2_GetFingerprintConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2FingerprintConfig.getCPtr(config), config);
  }

  public static int BS2_SetFingerprintConfig(SWIGTYPE_p_void context, long deviceId, BS2FingerprintConfig config) {
    return BS_SDK_V2JNI.BS2_SetFingerprintConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2FingerprintConfig.getCPtr(config), config);
  }

  public static int BS2_GetRS485Config(SWIGTYPE_p_void context, long deviceId, BS2Rs485Config config) {
    return BS_SDK_V2JNI.BS2_GetRS485Config(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Rs485Config.getCPtr(config), config);
  }

  public static int BS2_SetRS485Config(SWIGTYPE_p_void context, long deviceId, BS2Rs485Config config) {
    return BS_SDK_V2JNI.BS2_SetRS485Config(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Rs485Config.getCPtr(config), config);
  }

  public static int BS2_GetWiegandConfig(SWIGTYPE_p_void context, long deviceId, BS2WiegandConfig config) {
    return BS_SDK_V2JNI.BS2_GetWiegandConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2WiegandConfig.getCPtr(config), config);
  }

  public static int BS2_SetWiegandConfig(SWIGTYPE_p_void context, long deviceId, BS2WiegandConfig config) {
    return BS_SDK_V2JNI.BS2_SetWiegandConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2WiegandConfig.getCPtr(config), config);
  }

  public static int BS2_GetWiegandDeviceConfig(SWIGTYPE_p_void context, long deviceId, BS2WiegandDeviceConfig config) {
    return BS_SDK_V2JNI.BS2_GetWiegandDeviceConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2WiegandDeviceConfig.getCPtr(config), config);
  }

  public static int BS2_SetWiegandDeviceConfig(SWIGTYPE_p_void context, long deviceId, BS2WiegandDeviceConfig config) {
    return BS_SDK_V2JNI.BS2_SetWiegandDeviceConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2WiegandDeviceConfig.getCPtr(config), config);
  }

  public static int BS2_GetInputConfig(SWIGTYPE_p_void context, long deviceId, BS2InputConfig config) {
    return BS_SDK_V2JNI.BS2_GetInputConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2InputConfig.getCPtr(config), config);
  }

  public static int BS2_SetInputConfig(SWIGTYPE_p_void context, long deviceId, BS2InputConfig config) {
    return BS_SDK_V2JNI.BS2_SetInputConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2InputConfig.getCPtr(config), config);
  }

  public static int BS2_GetWlanConfig(SWIGTYPE_p_void context, long deviceId, BS2WlanConfig config) {
    return BS_SDK_V2JNI.BS2_GetWlanConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2WlanConfig.getCPtr(config), config);
  }

  public static int BS2_SetWlanConfig(SWIGTYPE_p_void context, long deviceId, BS2WlanConfig config) {
    return BS_SDK_V2JNI.BS2_SetWlanConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2WlanConfig.getCPtr(config), config);
  }

  public static int BS2_GetTriggerActionConfig(SWIGTYPE_p_void context, long deviceId, BS2TriggerActionConfig config) {
    return BS_SDK_V2JNI.BS2_GetTriggerActionConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2TriggerActionConfig.getCPtr(config), config);
  }

  public static int BS2_SetTriggerActionConfig(SWIGTYPE_p_void context, long deviceId, BS2TriggerActionConfig config) {
    return BS_SDK_V2JNI.BS2_SetTriggerActionConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2TriggerActionConfig.getCPtr(config), config);
  }

  public static int BS2_GetEventConfig(SWIGTYPE_p_void context, long deviceId, BS2EventConfig config) {
    return BS_SDK_V2JNI.BS2_GetEventConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2EventConfig.getCPtr(config), config);
  }

  public static int BS2_SetEventConfig(SWIGTYPE_p_void context, long deviceId, BS2EventConfig config) {
    return BS_SDK_V2JNI.BS2_SetEventConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2EventConfig.getCPtr(config), config);
  }

  public static int BS2_GetWiegandMultiConfig(SWIGTYPE_p_void context, long deviceId, BS2WiegandMultiConfig config) {
    return BS_SDK_V2JNI.BS2_GetWiegandMultiConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2WiegandMultiConfig.getCPtr(config), config);
  }

  public static int BS2_SetWiegandMultiConfig(SWIGTYPE_p_void context, long deviceId, BS2WiegandMultiConfig config) {
    return BS_SDK_V2JNI.BS2_SetWiegandMultiConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2WiegandMultiConfig.getCPtr(config), config);
  }

  public static int BS2_GetCard1xConfig(SWIGTYPE_p_void context, long deviceId, BS1CardConfig config) {
    return BS_SDK_V2JNI.BS2_GetCard1xConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS1CardConfig.getCPtr(config), config);
  }

  public static int BS2_SetCard1xConfig(SWIGTYPE_p_void context, long deviceId, BS1CardConfig config) {
    return BS_SDK_V2JNI.BS2_SetCard1xConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS1CardConfig.getCPtr(config), config);
  }

  public static int BS2_GetSystemExtConfig(SWIGTYPE_p_void context, long deviceId, BS2SystemConfigExt config) {
    return BS_SDK_V2JNI.BS2_GetSystemExtConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2SystemConfigExt.getCPtr(config), config);
  }

  public static int BS2_SetSystemExtConfig(SWIGTYPE_p_void context, long deviceId, BS2SystemConfigExt config) {
    return BS_SDK_V2JNI.BS2_SetSystemExtConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2SystemConfigExt.getCPtr(config), config);
  }

  public static int BS2_GetVoipConfig(SWIGTYPE_p_void context, long deviceId, BS2VoipConfig config) {
    return BS_SDK_V2JNI.BS2_GetVoipConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2VoipConfig.getCPtr(config), config);
  }

  public static int BS2_SetVoipConfig(SWIGTYPE_p_void context, long deviceId, BS2VoipConfig config) {
    return BS_SDK_V2JNI.BS2_SetVoipConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2VoipConfig.getCPtr(config), config);
  }

  public static int BS2_GetFaceConfig(SWIGTYPE_p_void context, long deviceId, BS2FaceConfig config) {
    return BS_SDK_V2JNI.BS2_GetFaceConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2FaceConfig.getCPtr(config), config);
  }

  public static int BS2_SetFaceConfig(SWIGTYPE_p_void context, long deviceId, BS2FaceConfig config) {
    return BS_SDK_V2JNI.BS2_SetFaceConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2FaceConfig.getCPtr(config), config);
  }

  public static int BS2_GetCardConfigEx(SWIGTYPE_p_void context, long deviceId, BS2CardConfigEx config) {
    return BS_SDK_V2JNI.BS2_GetCardConfigEx(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2CardConfigEx.getCPtr(config), config);
  }

  public static int BS2_SetCardConfigEx(SWIGTYPE_p_void context, long deviceId, BS2CardConfigEx config) {
    return BS_SDK_V2JNI.BS2_SetCardConfigEx(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2CardConfigEx.getCPtr(config), config);
  }

  public static int BS2_GetRS485ConfigEx(SWIGTYPE_p_void context, long deviceId, BS2Rs485ConfigEX config) {
    return BS_SDK_V2JNI.BS2_GetRS485ConfigEx(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Rs485ConfigEX.getCPtr(config), config);
  }

  public static int BS2_SetRS485ConfigEx(SWIGTYPE_p_void context, long deviceId, BS2Rs485ConfigEX config) {
    return BS_SDK_V2JNI.BS2_SetRS485ConfigEx(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Rs485ConfigEX.getCPtr(config), config);
  }

  public static int BS2_GetSupportedConfigMask(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_int configMask) {
    return BS_SDK_V2JNI.BS2_GetSupportedConfigMask(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_int.getCPtr(configMask));
  }

  public static int BS2_GetDstConfig(SWIGTYPE_p_void context, long deviceId, BS2DstConfig config) {
    return BS_SDK_V2JNI.BS2_GetDstConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DstConfig.getCPtr(config), config);
  }

  public static int BS2_SetDstConfig(SWIGTYPE_p_void context, long deviceId, BS2DstConfig config) {
    return BS_SDK_V2JNI.BS2_SetDstConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DstConfig.getCPtr(config), config);
  }

  public static int BS2_GetDoor(SWIGTYPE_p_void context, long deviceId, long[] doorIds, BS2Door[] doorObj) {
    return BS_SDK_V2JNI.BS2_GetDoor(SWIGTYPE_p_void.getCPtr(context), deviceId, doorIds, doorObj);
  }

  public static int BS2_GetAllDoor(SWIGTYPE_p_void context, long deviceId, BS2Door[] doorObj) {
    return BS_SDK_V2JNI.BS2_GetAllDoor(SWIGTYPE_p_void.getCPtr(context), deviceId, doorObj);
  }

  public static int BS2_GetDoorStatus(SWIGTYPE_p_void context, long deviceId, long[] doorIds, BS2DoorStatus[] doorStatusObj) {
    return BS_SDK_V2JNI.BS2_GetDoorStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, doorIds, doorStatusObj);
  }

  public static int BS2_GetAllDoorStatus(SWIGTYPE_p_void context, long deviceId, BS2DoorStatus[] doorStatusObj) {
    return BS_SDK_V2JNI.BS2_GetAllDoorStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, doorStatusObj);
  }

  public static int BS2_SetDoor(SWIGTYPE_p_void context, long deviceId, BS2Door doors, long doorCount) {
    return BS_SDK_V2JNI.BS2_SetDoor(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Door.getCPtr(doors), doors, doorCount);
  }

  public static int BS2_SetDoorAlarm(SWIGTYPE_p_void context, long deviceId, short flag, long[] doorIds) {
    return BS_SDK_V2JNI.BS2_SetDoorAlarm(SWIGTYPE_p_void.getCPtr(context), deviceId, flag, doorIds);
  }

  public static int BS2_RemoveDoor(SWIGTYPE_p_void context, long deviceId, long[] doorIds) {
    return BS_SDK_V2JNI.BS2_RemoveDoor(SWIGTYPE_p_void.getCPtr(context), deviceId, doorIds);
  }

  public static int BS2_RemoveAllDoor(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllDoor(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_ReleaseDoor(SWIGTYPE_p_void context, long deviceId, short flag, long[] doorIds) {
    return BS_SDK_V2JNI.BS2_ReleaseDoor(SWIGTYPE_p_void.getCPtr(context), deviceId, flag, doorIds);
  }

  public static int BS2_LockDoor(SWIGTYPE_p_void context, long deviceId, short flag, long[] doorIds) {
    return BS_SDK_V2JNI.BS2_LockDoor(SWIGTYPE_p_void.getCPtr(context), deviceId, flag, doorIds);
  }

  public static int BS2_UnlockDoor(SWIGTYPE_p_void context, long deviceId, short flag, long[] doorIds) {
    return BS_SDK_V2JNI.BS2_UnlockDoor(SWIGTYPE_p_void.getCPtr(context), deviceId, flag, doorIds);
  }

  public static int BS2_GetLift(SWIGTYPE_p_void context, long deviceId, long[] liftIds, BS2Lift[] liftObj) {
    return BS_SDK_V2JNI.BS2_GetLift(SWIGTYPE_p_void.getCPtr(context), deviceId, liftIds, liftObj);
  }

  public static int BS2_GetAllLift(SWIGTYPE_p_void context, long deviceId, BS2Lift[] liftObj) {
    return BS_SDK_V2JNI.BS2_GetAllLift(SWIGTYPE_p_void.getCPtr(context), deviceId, liftObj);
  }

  public static int BS2_GetLiftStatus(SWIGTYPE_p_void context, long deviceId, long[] liftIds, BS2LiftStatus[] liftStatusObj) {
    return BS_SDK_V2JNI.BS2_GetLiftStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, liftIds, liftStatusObj);
  }

  public static int BS2_GetAllLiftStatus(SWIGTYPE_p_void context, long deviceId, BS2LiftStatus[] liftStatusObj) {
    return BS_SDK_V2JNI.BS2_GetAllLiftStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, liftStatusObj);
  }

  public static int BS2_SetLift(SWIGTYPE_p_void context, long deviceId, BS2Lift lifts, long liftCount) {
    return BS_SDK_V2JNI.BS2_SetLift(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Lift.getCPtr(lifts), lifts, liftCount);
  }

  public static int BS2_SetLiftAlarm(SWIGTYPE_p_void context, long deviceId, short flag, long[] liftIds) {
    return BS_SDK_V2JNI.BS2_SetLiftAlarm(SWIGTYPE_p_void.getCPtr(context), deviceId, flag, liftIds);
  }

  public static int BS2_RemoveLift(SWIGTYPE_p_void context, long deviceId, long[] liftIds) {
    return BS_SDK_V2JNI.BS2_RemoveLift(SWIGTYPE_p_void.getCPtr(context), deviceId, liftIds);
  }

  public static int BS2_RemoveAllLift(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllLift(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_ReleaseFloor(SWIGTYPE_p_void context, long deviceId, short flag, long liftID, SWIGTYPE_p_unsigned_short floorIndexs, short floorIndexCount) {
    return BS_SDK_V2JNI.BS2_ReleaseFloor(SWIGTYPE_p_void.getCPtr(context), deviceId, flag, liftID, SWIGTYPE_p_unsigned_short.getCPtr(floorIndexs), floorIndexCount);
  }

  public static int BS2_ActivateFloor(SWIGTYPE_p_void context, long deviceId, short flag, long liftID, SWIGTYPE_p_unsigned_short floorIndexs, short floorIndexCount) {
    return BS_SDK_V2JNI.BS2_ActivateFloor(SWIGTYPE_p_void.getCPtr(context), deviceId, flag, liftID, SWIGTYPE_p_unsigned_short.getCPtr(floorIndexs), floorIndexCount);
  }

  public static int BS2_DeActivateFloor(SWIGTYPE_p_void context, long deviceId, short flag, long liftID, SWIGTYPE_p_unsigned_short floorIndexs, short floorIndexCount) {
    return BS_SDK_V2JNI.BS2_DeActivateFloor(SWIGTYPE_p_void.getCPtr(context), deviceId, flag, liftID, SWIGTYPE_p_unsigned_short.getCPtr(floorIndexs), floorIndexCount);
  }

  public static int BS2_GetLastFingerprintImage(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_p_unsigned_char imageObj, SWIGTYPE_p_unsigned_int imageWidth, SWIGTYPE_p_unsigned_int imageHeight) {
    return BS_SDK_V2JNI.BS2_GetLastFingerprintImage(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_p_unsigned_char.getCPtr(imageObj), SWIGTYPE_p_unsigned_int.getCPtr(imageWidth), SWIGTYPE_p_unsigned_int.getCPtr(imageHeight));
  }

  public static int BS2_ScanFingerprint(SWIGTYPE_p_void context, long deviceId, BS2Fingerprint finger, long templateIndex, long quality, short templateFormat, SWIGTYPE_p_f_unsigned_int_unsigned_int__void ptrReadyToScan) {
    return BS_SDK_V2JNI.BS2_ScanFingerprint(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Fingerprint.getCPtr(finger), finger, templateIndex, quality, templateFormat, SWIGTYPE_p_f_unsigned_int_unsigned_int__void.getCPtr(ptrReadyToScan));
  }

  public static int BS2_ScanFingerprintEx(SWIGTYPE_p_void context, long deviceId, BS2Fingerprint finger, long templateIndex, long quality, short templateFormat, SWIGTYPE_p_unsigned_int outquality, SWIGTYPE_p_f_unsigned_int_unsigned_int__void ptrReadyToScan) {
    return BS_SDK_V2JNI.BS2_ScanFingerprintEx(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Fingerprint.getCPtr(finger), finger, templateIndex, quality, templateFormat, SWIGTYPE_p_unsigned_int.getCPtr(outquality), SWIGTYPE_p_f_unsigned_int_unsigned_int__void.getCPtr(ptrReadyToScan));
  }

  public static int BS2_ScanFingerprintImage(SWIGTYPE_p_void context, long deviceId, long templateIndex, long quality, short templateFormat, SWIGTYPE_p_unsigned_char imageData, SWIGTYPE_p_f_unsigned_int_unsigned_int__void ptrReadyToScan) {
    return BS_SDK_V2JNI.BS2_ScanFingerprintImage(SWIGTYPE_p_void.getCPtr(context), deviceId, templateIndex, quality, templateFormat, SWIGTYPE_p_unsigned_char.getCPtr(imageData), SWIGTYPE_p_f_unsigned_int_unsigned_int__void.getCPtr(ptrReadyToScan));
  }

  public static int BS2_VerifyFingerprint(SWIGTYPE_p_void context, long deviceId, BS2Fingerprint finger) {
    return BS_SDK_V2JNI.BS2_VerifyFingerprint(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Fingerprint.getCPtr(finger), finger);
  }

  public static int BS2_GetLog(SWIGTYPE_p_void context, long deviceId, long eventId, long amount, BS2Event[] logsObj) {
    return BS_SDK_V2JNI.BS2_GetLog(SWIGTYPE_p_void.getCPtr(context), deviceId, eventId, amount, logsObj);
  }

  public static int BS2_GetLogBlob(SWIGTYPE_p_void context, long deviceId, int eventMask, long eventId, long amount, BS2EventBlob[] logsObj) {
    return BS_SDK_V2JNI.BS2_GetLogBlob(SWIGTYPE_p_void.getCPtr(context), deviceId, eventMask, eventId, amount, logsObj);
  }

  public static int BS2_GetFilteredLog(SWIGTYPE_p_void context, long deviceId, String uid, int eventCode, long start, long end, short tnakey, BS2Event[] logsObj) {
    return BS_SDK_V2JNI.BS2_GetFilteredLog(SWIGTYPE_p_void.getCPtr(context), deviceId, uid, eventCode, start, end, tnakey, logsObj);
  }

  public static int BS2_GetFilteredLogSinceEventId(SWIGTYPE_p_void context, long deviceId, String uid, int eventCode, long start, long end, short tnakey, long lastEventId, long amount, BS2Event[] logsObj) {
    return BS_SDK_V2JNI.BS2_GetFilteredLogSinceEventId(SWIGTYPE_p_void.getCPtr(context), deviceId, uid, eventCode, start, end, tnakey, lastEventId, amount, logsObj);
  }

  public static int BS2_GetImageLog(SWIGTYPE_p_void context, long deviceId, long eventId, byte[] imageObj) {
    return BS_SDK_V2JNI.BS2_GetImageLog(SWIGTYPE_p_void.getCPtr(context), deviceId, eventId, imageObj);
  }

  public static int BS2_ClearLog(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_ClearLog(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_StartMonitoringLog(SWIGTYPE_p_void context, long deviceId, Callback ptrLogReceived) {
    return BS_SDK_V2JNI.BS2_StartMonitoringLog(SWIGTYPE_p_void.getCPtr(context), deviceId, ptrLogReceived);
  }

  public static int BS2_StopMonitoringLog(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_StopMonitoringLog(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_FactoryReset(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_FactoryReset(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_RebootDevice(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RebootDevice(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_LockDevice(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_LockDevice(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_UnlockDevice(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_UnlockDevice(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetDeviceTime(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_int gmtTime) {
    return BS_SDK_V2JNI.BS2_GetDeviceTime(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_int.getCPtr(gmtTime));
  }

  public static int BS2_SetDeviceTime(SWIGTYPE_p_void context, long deviceId, long gmtTime) {
    return BS_SDK_V2JNI.BS2_SetDeviceTime(SWIGTYPE_p_void.getCPtr(context), deviceId, gmtTime);
  }

  public static int BS2_UpgradeFirmware(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_char firmwareData, long firmwareDataLen, short keepVerifyingSlaveDevice, Callback ptrProgressChanged) {
    return BS_SDK_V2JNI.BS2_UpgradeFirmware(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_char.getCPtr(firmwareData), firmwareDataLen, keepVerifyingSlaveDevice, ptrProgressChanged);
  }

  public static int BS2_UpdateResource(SWIGTYPE_p_void context, long deviceId, BS2ResourceElement resourceElement, short keepVerifyingSlaveDevice, Callback ptrProgressChanged) {
    return BS_SDK_V2JNI.BS2_UpdateResource(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2ResourceElement.getCPtr(resourceElement), resourceElement, keepVerifyingSlaveDevice, ptrProgressChanged);
  }

  public static int BS2_SetKeepAliveTimeout(SWIGTYPE_p_void context, int ms) {
    return BS_SDK_V2JNI.BS2_SetKeepAliveTimeout(SWIGTYPE_p_void.getCPtr(context), ms);
  }

  public static int BS2_MakePinCode(SWIGTYPE_p_void context, String plaintext, SWIGTYPE_p_unsigned_char ciphertext) {
    return BS_SDK_V2JNI.BS2_MakePinCode(SWIGTYPE_p_void.getCPtr(context), plaintext, SWIGTYPE_p_unsigned_char.getCPtr(ciphertext));
  }

  public static int BS2_ComputeCRC16CCITT(SWIGTYPE_p_unsigned_char data, long dataLen, SWIGTYPE_p_unsigned_short crc) {
    return BS_SDK_V2JNI.BS2_ComputeCRC16CCITT(SWIGTYPE_p_unsigned_char.getCPtr(data), dataLen, SWIGTYPE_p_unsigned_short.getCPtr(crc));
  }

  public static int BS2_GetCardModel(String modelName, SWIGTYPE_p_unsigned_short cardModel) {
    return BS_SDK_V2JNI.BS2_GetCardModel(modelName, SWIGTYPE_p_unsigned_short.getCPtr(cardModel));
  }

  public static int BS2_GetSlaveDevice(SWIGTYPE_p_void context, long deviceId, BS2Rs485SlaveDevice[] slaveDeviceObj) {
    return BS_SDK_V2JNI.BS2_GetSlaveDevice(SWIGTYPE_p_void.getCPtr(context), deviceId, slaveDeviceObj);
  }

  public static int BS2_SetSlaveDevice(SWIGTYPE_p_void context, long deviceId, BS2Rs485SlaveDevice slaveDevices, long slaveDeviceCount) {
    return BS_SDK_V2JNI.BS2_SetSlaveDevice(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Rs485SlaveDevice.getCPtr(slaveDevices), slaveDevices, slaveDeviceCount);
  }

  public static int BS2_RemoveSlaveDevice(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveSlaveDevice(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_SetServerMatchingHandler(SWIGTYPE_p_void context, Callback ptrVerifyUser, Callback ptrIdentifyUser) {
    return BS_SDK_V2JNI.BS2_SetServerMatchingHandler(SWIGTYPE_p_void.getCPtr(context), ptrVerifyUser, ptrIdentifyUser);
  }

  public static int BS2_VerifyUser(SWIGTYPE_p_void context, long deviceId, int seq, int handleResult, BS2UserBlob userBlob) {
    return BS_SDK_V2JNI.BS2_VerifyUser(SWIGTYPE_p_void.getCPtr(context), deviceId, seq, handleResult, BS2UserBlob.getCPtr(userBlob), userBlob);
  }

  public static int BS2_IdentifyUser(SWIGTYPE_p_void context, long deviceId, int seq, int handleResult, BS2UserBlob userBlob) {
    return BS_SDK_V2JNI.BS2_IdentifyUser(SWIGTYPE_p_void.getCPtr(context), deviceId, seq, handleResult, BS2UserBlob.getCPtr(userBlob), userBlob);
  }

  public static int BS2_GetUserDatabaseInfo(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_int numUsers, SWIGTYPE_p_unsigned_int numCards, SWIGTYPE_p_unsigned_int numFingers, SWIGTYPE_p_unsigned_int numFaces, Callback ptrIsAcceptableUserID) {
    return BS_SDK_V2JNI.BS2_GetUserDatabaseInfo(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_int.getCPtr(numUsers), SWIGTYPE_p_unsigned_int.getCPtr(numCards), SWIGTYPE_p_unsigned_int.getCPtr(numFingers), SWIGTYPE_p_unsigned_int.getCPtr(numFaces), ptrIsAcceptableUserID);
  }

  public static int BS2_GetUserList(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_p_char uidsObj, SWIGTYPE_p_unsigned_int numUid, Callback ptrIsAcceptableUserID) {
    return BS_SDK_V2JNI.BS2_GetUserList(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_p_char.getCPtr(uidsObj), SWIGTYPE_p_unsigned_int.getCPtr(numUid), ptrIsAcceptableUserID);
  }

  public static int BS2_GetUserInfos(SWIGTYPE_p_void context, long deviceId, String[] uids, BS2UserBlob userBlob) {
    return BS_SDK_V2JNI.BS2_GetUserInfos(SWIGTYPE_p_void.getCPtr(context), deviceId, uids, BS2UserBlob.getCPtr(userBlob), userBlob);
  }

  public static int BS2_GetUserDatas(SWIGTYPE_p_void context, long deviceId, String[] uids, BS2UserBlob userBlob, long userMask) {
    return BS_SDK_V2JNI.BS2_GetUserDatas(SWIGTYPE_p_void.getCPtr(context), deviceId, uids, BS2UserBlob.getCPtr(userBlob), userBlob, userMask);
  }

  public static int BS2_EnrolUser(SWIGTYPE_p_void context, long deviceId, BS2UserBlob[] userBlob, short overwrite) {
    return BS_SDK_V2JNI.BS2_EnrolUser(SWIGTYPE_p_void.getCPtr(context), deviceId, userBlob, overwrite);
  }

  public static int BS2_RemoveUser(SWIGTYPE_p_void context, long deviceId, String[] uids) {
    return BS_SDK_V2JNI.BS2_RemoveUser(SWIGTYPE_p_void.getCPtr(context), deviceId, uids);
  }

  public static int BS2_RemoveAllUser(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllUser(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetSupportedUserMask(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_int userMask) {
    return BS_SDK_V2JNI.BS2_GetSupportedUserMask(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_int.getCPtr(userMask));
  }

  public static int BS2_SearchWiegandDevices(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_p_unsigned_int wiegandDeviceObj, SWIGTYPE_p_unsigned_int numWiegandDevice) {
    return BS_SDK_V2JNI.BS2_SearchWiegandDevices(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_p_unsigned_int.getCPtr(wiegandDeviceObj), SWIGTYPE_p_unsigned_int.getCPtr(numWiegandDevice));
  }

  public static int BS2_GetWiegandDevices(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_p_unsigned_int wiegandDeviceObj, SWIGTYPE_p_unsigned_int numWiegandDevice) {
    return BS_SDK_V2JNI.BS2_GetWiegandDevices(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_p_unsigned_int.getCPtr(wiegandDeviceObj), SWIGTYPE_p_unsigned_int.getCPtr(numWiegandDevice));
  }

  public static int BS2_AddWiegandDevices(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_int wiegandDevice, long numWiegandDevice) {
    return BS_SDK_V2JNI.BS2_AddWiegandDevices(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_int.getCPtr(wiegandDevice), numWiegandDevice);
  }

  public static int BS2_RemoveWiegandDevices(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_int wiegandDevice, long numWiegandDevice) {
    return BS_SDK_V2JNI.BS2_RemoveWiegandDevices(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_int.getCPtr(wiegandDevice), numWiegandDevice);
  }

  public static int BS2_GetAntiPassbackZone(SWIGTYPE_p_void context, long deviceId, long[] zoneIds, BS2AntiPassbackZone[] zoneObj) {
    return BS_SDK_V2JNI.BS2_GetAntiPassbackZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds, zoneObj);
  }

  public static int BS2_GetAllAntiPassbackZone(SWIGTYPE_p_void context, long deviceId, BS2AntiPassbackZone[] zoneObj) {
    return BS_SDK_V2JNI.BS2_GetAllAntiPassbackZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneObj);
  }

  public static int BS2_GetAntiPassbackZoneStatus(SWIGTYPE_p_void context, long deviceId, long[] zoneIds, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetAntiPassbackZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds, zoneStatusObj);
  }

  public static int BS2_GetAllAntiPassbackZoneStatus(SWIGTYPE_p_void context, long deviceId, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetAllAntiPassbackZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneStatusObj);
  }

  public static int BS2_SetAntiPassbackZone(SWIGTYPE_p_void context, long deviceId, BS2AntiPassbackZone zones, long zoneCount) {
    return BS_SDK_V2JNI.BS2_SetAntiPassbackZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2AntiPassbackZone.getCPtr(zones), zones, zoneCount);
  }

  public static int BS2_SetAntiPassbackZoneAlarm(SWIGTYPE_p_void context, long deviceId, short alarmed, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_SetAntiPassbackZoneAlarm(SWIGTYPE_p_void.getCPtr(context), deviceId, alarmed, zoneIds);
  }

  public static int BS2_RemoveAntiPassbackZone(SWIGTYPE_p_void context, long deviceId, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_RemoveAntiPassbackZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds);
  }

  public static int BS2_RemoveAllAntiPassbackZone(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllAntiPassbackZone(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_ClearAntiPassbackZoneStatus(SWIGTYPE_p_void context, long deviceId, long zoneID, String[] uids) {
    return BS_SDK_V2JNI.BS2_ClearAntiPassbackZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneID, uids);
  }

  public static int BS2_ClearAllAntiPassbackZoneStatus(SWIGTYPE_p_void context, long deviceId, long zoneID) {
    return BS_SDK_V2JNI.BS2_ClearAllAntiPassbackZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneID);
  }

  public static int BS2_GetTimedAntiPassbackZone(SWIGTYPE_p_void context, long deviceId, long[] zoneIds, BS2TimedAntiPassbackZone[] zoneObj) {
    return BS_SDK_V2JNI.BS2_GetTimedAntiPassbackZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds, zoneObj);
  }

  public static int BS2_GetAllTimedAntiPassbackZone(SWIGTYPE_p_void context, long deviceId, BS2TimedAntiPassbackZone[] zoneObj) {
    return BS_SDK_V2JNI.BS2_GetAllTimedAntiPassbackZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneObj);
  }

  public static int BS2_GetTimedAntiPassbackZoneStatus(SWIGTYPE_p_void context, long deviceId, long[] zoneIds, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetTimedAntiPassbackZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds, zoneStatusObj);
  }

  public static int BS2_GetAllTimedAntiPassbackZoneStatus(SWIGTYPE_p_void context, long deviceId, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetAllTimedAntiPassbackZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneStatusObj);
  }

  public static int BS2_SetTimedAntiPassbackZone(SWIGTYPE_p_void context, long deviceId, BS2TimedAntiPassbackZone zones, long zoneCount) {
    return BS_SDK_V2JNI.BS2_SetTimedAntiPassbackZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2TimedAntiPassbackZone.getCPtr(zones), zones, zoneCount);
  }

  public static int BS2_SetTimedAntiPassbackZoneAlarm(SWIGTYPE_p_void context, long deviceId, short alarmed, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_SetTimedAntiPassbackZoneAlarm(SWIGTYPE_p_void.getCPtr(context), deviceId, alarmed, zoneIds);
  }

  public static int BS2_RemoveTimedAntiPassbackZone(SWIGTYPE_p_void context, long deviceId, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_RemoveTimedAntiPassbackZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds);
  }

  public static int BS2_RemoveAllTimedAntiPassbackZone(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllTimedAntiPassbackZone(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_ClearTimedAntiPassbackZoneStatus(SWIGTYPE_p_void context, long deviceId, long zoneID, String[] uids) {
    return BS_SDK_V2JNI.BS2_ClearTimedAntiPassbackZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneID, uids);
  }

  public static int BS2_ClearAllTimedAntiPassbackZoneStatus(SWIGTYPE_p_void context, long deviceId, long zoneID) {
    return BS_SDK_V2JNI.BS2_ClearAllTimedAntiPassbackZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneID);
  }

  public static int BS2_GetFireAlarmZone(SWIGTYPE_p_void context, long deviceId, long[] zoneIds, BS2FireAlarmZone[] zoneObj) {
    return BS_SDK_V2JNI.BS2_GetFireAlarmZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds, zoneObj);
  }

  public static int BS2_GetAllFireAlarmZone(SWIGTYPE_p_void context, long deviceId, BS2FireAlarmZone[] zoneObj) {
    return BS_SDK_V2JNI.BS2_GetAllFireAlarmZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneObj);
  }

  public static int BS2_GetFireAlarmZoneStatus(SWIGTYPE_p_void context, long deviceId, long[] zoneIds, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetFireAlarmZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds, zoneStatusObj);
  }

  public static int BS2_GetAllFireAlarmZoneStatus(SWIGTYPE_p_void context, long deviceId, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetAllFireAlarmZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneStatusObj);
  }

  public static int BS2_SetFireAlarmZone(SWIGTYPE_p_void context, long deviceId, BS2FireAlarmZone zones, long zoneCount) {
    return BS_SDK_V2JNI.BS2_SetFireAlarmZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2FireAlarmZone.getCPtr(zones), zones, zoneCount);
  }

  public static int BS2_SetFireAlarmZoneAlarm(SWIGTYPE_p_void context, long deviceId, short alarmed, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_SetFireAlarmZoneAlarm(SWIGTYPE_p_void.getCPtr(context), deviceId, alarmed, zoneIds);
  }

  public static int BS2_RemoveFireAlarmZone(SWIGTYPE_p_void context, long deviceId, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_RemoveFireAlarmZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds);
  }

  public static int BS2_RemoveAllFireAlarmZone(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllFireAlarmZone(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetScheduledLockUnlockZone(SWIGTYPE_p_void context, long deviceId, long[] zoneIds, BS2ScheduledLockUnlockZone[] zoneObj) {
    return BS_SDK_V2JNI.BS2_GetScheduledLockUnlockZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds, zoneObj);
  }

  public static int BS2_GetAllScheduledLockUnlockZone(SWIGTYPE_p_void context, long deviceId, BS2ScheduledLockUnlockZone[] zoneObj) {
    return BS_SDK_V2JNI.BS2_GetAllScheduledLockUnlockZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneObj);
  }

  public static int BS2_GetScheduledLockUnlockZoneStatus(SWIGTYPE_p_void context, long deviceId, long[] zoneIds, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetScheduledLockUnlockZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds, zoneStatusObj);
  }

  public static int BS2_GetAllScheduledLockUnlockZoneStatus(SWIGTYPE_p_void context, long deviceId, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetAllScheduledLockUnlockZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneStatusObj);
  }

  public static int BS2_SetScheduledLockUnlockZone(SWIGTYPE_p_void context, long deviceId, BS2ScheduledLockUnlockZone zones, long zoneCount) {
    return BS_SDK_V2JNI.BS2_SetScheduledLockUnlockZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2ScheduledLockUnlockZone.getCPtr(zones), zones, zoneCount);
  }

  public static int BS2_SetScheduledLockUnlockZoneAlarm(SWIGTYPE_p_void context, long deviceId, short alarmed, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_SetScheduledLockUnlockZoneAlarm(SWIGTYPE_p_void.getCPtr(context), deviceId, alarmed, zoneIds);
  }

  public static int BS2_RemoveScheduledLockUnlockZone(SWIGTYPE_p_void context, long deviceId, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_RemoveScheduledLockUnlockZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds);
  }

  public static int BS2_RemoveAllScheduledLockUnlockZone(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllScheduledLockUnlockZone(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetFloorLevel(SWIGTYPE_p_void context, long deviceId, long[] floorLevelIds, BS2FloorLevel[] floorLevelObj) {
    return BS_SDK_V2JNI.BS2_GetFloorLevel(SWIGTYPE_p_void.getCPtr(context), deviceId, floorLevelIds, floorLevelObj);
  }

  public static int BS2_GetAllFloorLevel(SWIGTYPE_p_void context, long deviceId, BS2FloorLevel[] floorLevelObj) {
    return BS_SDK_V2JNI.BS2_GetAllFloorLevel(SWIGTYPE_p_void.getCPtr(context), deviceId, floorLevelObj);
  }

  public static int BS2_SetFloorLevel(SWIGTYPE_p_void context, long deviceId, BS2FloorLevel floorLevels, long floorLevelCount) {
    return BS_SDK_V2JNI.BS2_SetFloorLevel(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2FloorLevel.getCPtr(floorLevels), floorLevels, floorLevelCount);
  }

  public static int BS2_RemoveFloorLevel(SWIGTYPE_p_void context, long deviceId, long[] floorLevelIds) {
    return BS_SDK_V2JNI.BS2_RemoveFloorLevel(SWIGTYPE_p_void.getCPtr(context), deviceId, floorLevelIds);
  }

  public static int BS2_RemoveAllFloorLevel(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllFloorLevel(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_ScanFace(SWIGTYPE_p_void context, long deviceId, BS2Face face, short erollmentThreshold, SWIGTYPE_p_f_unsigned_int_unsigned_int__void ptrReadyToScan) {
    return BS_SDK_V2JNI.BS2_ScanFace(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2Face.getCPtr(face), face, erollmentThreshold, SWIGTYPE_p_f_unsigned_int_unsigned_int__void.getCPtr(ptrReadyToScan));
  }

  public static int BS2_GetAuthGroup(SWIGTYPE_p_void context, long deviceId, long[] authGroupIds, BS2AuthGroup[] authGroupObj) {
    return BS_SDK_V2JNI.BS2_GetAuthGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, authGroupIds, authGroupObj);
  }

  public static int BS2_GetAllAuthGroup(SWIGTYPE_p_void context, long deviceId, BS2AuthGroup[] authGroupObj) {
    return BS_SDK_V2JNI.BS2_GetAllAuthGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, authGroupObj);
  }

  public static int BS2_SetAuthGroup(SWIGTYPE_p_void context, long deviceId, BS2AuthGroup authGroups, long authGroupCount) {
    return BS_SDK_V2JNI.BS2_SetAuthGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2AuthGroup.getCPtr(authGroups), authGroups, authGroupCount);
  }

  public static int BS2_RemoveAuthGroup(SWIGTYPE_p_void context, long deviceId, long[] authGroupIds) {
    return BS_SDK_V2JNI.BS2_RemoveAuthGroup(SWIGTYPE_p_void.getCPtr(context), deviceId, authGroupIds);
  }

  public static int BS2_RemoveAllAuthGroup(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllAuthGroup(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_VerifyUserEx(SWIGTYPE_p_void context, long deviceId, int seq, int handleResult, BS2UserBlobEx userBlob) {
    return BS_SDK_V2JNI.BS2_VerifyUserEx(SWIGTYPE_p_void.getCPtr(context), deviceId, seq, handleResult, BS2UserBlobEx.getCPtr(userBlob), userBlob);
  }

  public static int BS2_IdentifyUserEx(SWIGTYPE_p_void context, long deviceId, int seq, int handleResult, BS2UserBlobEx userBlob) {
    return BS_SDK_V2JNI.BS2_IdentifyUserEx(SWIGTYPE_p_void.getCPtr(context), deviceId, seq, handleResult, BS2UserBlobEx.getCPtr(userBlob), userBlob);
  }

  public static int BS2_GetUserInfosEx(SWIGTYPE_p_void context, long deviceId, String[] uids, BS2UserBlobEx userBlob) {
    return BS_SDK_V2JNI.BS2_GetUserInfosEx(SWIGTYPE_p_void.getCPtr(context), deviceId, uids, BS2UserBlobEx.getCPtr(userBlob), userBlob);
  }

  public static int BS2_GetUserDatasEx(SWIGTYPE_p_void context, long deviceId, String[] uids, BS2UserBlobEx userBlob, long userMask) {
    return BS_SDK_V2JNI.BS2_GetUserDatasEx(SWIGTYPE_p_void.getCPtr(context), deviceId, uids, BS2UserBlobEx.getCPtr(userBlob), userBlob, userMask);
  }

  public static int BS2_EnrolUserEx(SWIGTYPE_p_void context, long deviceId, BS2UserBlobEx userBlob, long userCount, short overwrite) {
    return BS_SDK_V2JNI.BS2_EnrolUserEx(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2UserBlobEx.getCPtr(userBlob), userBlob, userCount, overwrite);
  }

  public static SWIGTYPE_p_void BS2_AllocateUsbContext(String szDir) {
    long cPtr = BS_SDK_V2JNI.BS2_AllocateUsbContext(szDir);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void BS2_ReleaseUsbContext(SWIGTYPE_p_void context) {
    BS_SDK_V2JNI.BS2_ReleaseUsbContext(SWIGTYPE_p_void.getCPtr(context));
  }

  public static int BS2_GetUserDatabaseInfoFromDir(SWIGTYPE_p_void context, String szDir, SWIGTYPE_p_unsigned_int numUsers, SWIGTYPE_p_unsigned_int numCards, SWIGTYPE_p_unsigned_int numFingers, SWIGTYPE_p_unsigned_int numFaces, Callback ptrIsAcceptableUserID) {
    return BS_SDK_V2JNI.BS2_GetUserDatabaseInfoFromDir(SWIGTYPE_p_void.getCPtr(context), szDir, SWIGTYPE_p_unsigned_int.getCPtr(numUsers), SWIGTYPE_p_unsigned_int.getCPtr(numCards), SWIGTYPE_p_unsigned_int.getCPtr(numFingers), SWIGTYPE_p_unsigned_int.getCPtr(numFaces), ptrIsAcceptableUserID);
  }

  public static int BS2_GetUserListFromDir(SWIGTYPE_p_void context, String szDir, SWIGTYPE_p_p_char uidsObj, SWIGTYPE_p_unsigned_int numUid, Callback ptrIsAcceptableUserID) {
    return BS_SDK_V2JNI.BS2_GetUserListFromDir(SWIGTYPE_p_void.getCPtr(context), szDir, SWIGTYPE_p_p_char.getCPtr(uidsObj), SWIGTYPE_p_unsigned_int.getCPtr(numUid), ptrIsAcceptableUserID);
  }

  public static int BS2_GetUserInfosFromDir(SWIGTYPE_p_void context, String szDir, String[] uids, BS2UserBlob userBlob) {
    return BS_SDK_V2JNI.BS2_GetUserInfosFromDir(SWIGTYPE_p_void.getCPtr(context), szDir, uids, BS2UserBlob.getCPtr(userBlob), userBlob);
  }

  public static int BS2_GetUserDatasFromDir(SWIGTYPE_p_void context, String szDir, String[] uids, BS2UserBlob userBlob, long userMask) {
    return BS_SDK_V2JNI.BS2_GetUserDatasFromDir(SWIGTYPE_p_void.getCPtr(context), szDir, uids, BS2UserBlob.getCPtr(userBlob), userBlob, userMask);
  }

  public static int BS2_GetUserInfosExFromDir(SWIGTYPE_p_void context, String szDir, String[] uids, BS2UserBlobEx userBlob) {
    return BS_SDK_V2JNI.BS2_GetUserInfosExFromDir(SWIGTYPE_p_void.getCPtr(context), szDir, uids, BS2UserBlobEx.getCPtr(userBlob), userBlob);
  }

  public static int BS2_GetUserDatasExFromDir(SWIGTYPE_p_void context, String szDir, String[] uids, BS2UserBlobEx userBlob, long userMask) {
    return BS_SDK_V2JNI.BS2_GetUserDatasExFromDir(SWIGTYPE_p_void.getCPtr(context), szDir, uids, BS2UserBlobEx.getCPtr(userBlob), userBlob, userMask);
  }

  public static int BS2_GetLogFromDir(SWIGTYPE_p_void context, String szDir, long eventId, long amount, BS2Event[] logsObj) {
    return BS_SDK_V2JNI.BS2_GetLogFromDir(SWIGTYPE_p_void.getCPtr(context), szDir, eventId, amount, logsObj);
  }

  public static int BS2_GetLogBlobFromDir(SWIGTYPE_p_void context, String szDir, int eventMask, long eventId, long amount, BS2EventBlob[] logsObj) {
    return BS_SDK_V2JNI.BS2_GetLogBlobFromDir(SWIGTYPE_p_void.getCPtr(context), szDir, eventMask, eventId, amount, logsObj);
  }

  public static int BS2_GetFilteredLogFromDir(SWIGTYPE_p_void context, String szDir, String uid, int eventCode, long start, long end, short tnakey, BS2Event[] logsObj) {
    return BS_SDK_V2JNI.BS2_GetFilteredLogFromDir(SWIGTYPE_p_void.getCPtr(context), szDir, uid, eventCode, start, end, tnakey, logsObj);
  }

  public static int BS2_GetSlaveExDevice(SWIGTYPE_p_void context, long deviceId, long channelPort, BS2Rs485SlaveDeviceEX[] slaveDevices) {
    return BS_SDK_V2JNI.BS2_GetSlaveExDevice(SWIGTYPE_p_void.getCPtr(context), deviceId, channelPort, slaveDevices);
  }

  public static int BS2_SetSlaveExDevice(SWIGTYPE_p_void context, long deviceId, long channelPort, BS2Rs485SlaveDeviceEX slaveDevices, long slaveDeviceCount) {
    return BS_SDK_V2JNI.BS2_SetSlaveExDevice(SWIGTYPE_p_void.getCPtr(context), deviceId, channelPort, BS2Rs485SlaveDeviceEX.getCPtr(slaveDevices), slaveDevices, slaveDeviceCount);
  }

  public static int BS2_SearchDevicesCoreStation(SWIGTYPE_p_void context) {
    return BS_SDK_V2JNI.BS2_SearchDevicesCoreStation(SWIGTYPE_p_void.getCPtr(context));
  }

  public static int BS2_GetDevicesCoreStation(SWIGTYPE_p_void context, long[] device_list) {
    return BS_SDK_V2JNI.BS2_GetDevicesCoreStation(SWIGTYPE_p_void.getCPtr(context), device_list);
  }

  public static int BS2_GetIntrusionAlarmZone(SWIGTYPE_p_void context, long deviceId, BS2IntrusionAlarmZoneBlob zoneBlob, SWIGTYPE_p_unsigned_int numZone) {
    return BS_SDK_V2JNI.BS2_GetIntrusionAlarmZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2IntrusionAlarmZoneBlob.getCPtr(zoneBlob), zoneBlob, SWIGTYPE_p_unsigned_int.getCPtr(numZone));
  }

  public static int BS2_GetIntrusionAlarmZoneStatus(SWIGTYPE_p_void context, long deviceId, long[] zoneIds, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetIntrusionAlarmZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds, zoneStatusObj);
  }

  public static int BS2_GetAllIntrusionAlarmZoneStatus(SWIGTYPE_p_void context, long deviceId, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetAllIntrusionAlarmZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneStatusObj);
  }

  public static int BS2_SetIntrusionAlarmZone(SWIGTYPE_p_void context, long deviceId, BS2IntrusionAlarmZoneBlob zoneBlob, long zoneCount) {
    return BS_SDK_V2JNI.BS2_SetIntrusionAlarmZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2IntrusionAlarmZoneBlob.getCPtr(zoneBlob), zoneBlob, zoneCount);
  }

  public static int BS2_SetIntrusionAlarmZoneAlarm(SWIGTYPE_p_void context, long deviceId, short alarmed, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_SetIntrusionAlarmZoneAlarm(SWIGTYPE_p_void.getCPtr(context), deviceId, alarmed, zoneIds);
  }

  public static int BS2_RemoveIntrusionAlarmZone(SWIGTYPE_p_void context, long deviceId, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_RemoveIntrusionAlarmZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds);
  }

  public static int BS2_RemoveAllIntrusionAlarmZone(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllIntrusionAlarmZone(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_SetIntrusionAlarmZoneArm(SWIGTYPE_p_void context, long deviceId, short armed, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_SetIntrusionAlarmZoneArm(SWIGTYPE_p_void.getCPtr(context), deviceId, armed, zoneIds);
  }

  public static int BS2_GetInterlockZone(SWIGTYPE_p_void context, long deviceId, BS2InterlockZoneBlob zoneBlob, SWIGTYPE_p_unsigned_int numZone) {
    return BS_SDK_V2JNI.BS2_GetInterlockZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2InterlockZoneBlob.getCPtr(zoneBlob), zoneBlob, SWIGTYPE_p_unsigned_int.getCPtr(numZone));
  }

  public static int BS2_GetInterlockZoneStatus(SWIGTYPE_p_void context, long deviceId, long[] zoneIds, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetInterlockZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds, zoneStatusObj);
  }

  public static int BS2_GetAllInterlockZoneStatus(SWIGTYPE_p_void context, long deviceId, BS2ZoneStatus[] zoneStatusObj) {
    return BS_SDK_V2JNI.BS2_GetAllInterlockZoneStatus(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneStatusObj);
  }

  public static int BS2_SetInterlockZone(SWIGTYPE_p_void context, long deviceId, BS2InterlockZoneBlob zoneBlob, long zoneCount) {
    return BS_SDK_V2JNI.BS2_SetInterlockZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2InterlockZoneBlob.getCPtr(zoneBlob), zoneBlob, zoneCount);
  }

  public static int BS2_SetInterlockZoneAlarm(SWIGTYPE_p_void context, long deviceId, short alarmed, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_SetInterlockZoneAlarm(SWIGTYPE_p_void.getCPtr(context), deviceId, alarmed, zoneIds);
  }

  public static int BS2_RemoveInterlockZone(SWIGTYPE_p_void context, long deviceId, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_RemoveInterlockZone(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneIds);
  }

  public static int BS2_RemoveAllInterlockZone(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllInterlockZone(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetDeviceZoneMasterConfig(SWIGTYPE_p_void context, long deviceId, BS2DeviceZoneMasterConfig config) {
    return BS_SDK_V2JNI.BS2_GetDeviceZoneMasterConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DeviceZoneMasterConfig.getCPtr(config), config);
  }

  public static int BS2_SetDeviceZoneMasterConfig(SWIGTYPE_p_void context, long deviceId, BS2DeviceZoneMasterConfig config) {
    return BS_SDK_V2JNI.BS2_SetDeviceZoneMasterConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DeviceZoneMasterConfig.getCPtr(config), config);
  }

  public static int BS2_RemoveDeviceZoneMasterConfig(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveDeviceZoneMasterConfig(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetDeviceZone(SWIGTYPE_p_void context, long deviceId, BS2_DEVICE_ZONE_TABLE_ID Ids, long IdCount, BS2DeviceZone[] deviceZoneObj) {
    return BS_SDK_V2JNI.BS2_GetDeviceZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2_DEVICE_ZONE_TABLE_ID.getCPtr(Ids), Ids, IdCount, deviceZoneObj);
  }

  public static int BS2_GetAllDeviceZone(SWIGTYPE_p_void context, long deviceId, BS2DeviceZone[] deviceZoneObj) {
    return BS_SDK_V2JNI.BS2_GetAllDeviceZone(SWIGTYPE_p_void.getCPtr(context), deviceId, deviceZoneObj);
  }

  public static int BS2_SetDeviceZone(SWIGTYPE_p_void context, long deviceId, BS2DeviceZone deviceZones, long deviceZoneCount) {
    return BS_SDK_V2JNI.BS2_SetDeviceZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DeviceZone.getCPtr(deviceZones), deviceZones, deviceZoneCount);
  }

  public static int BS2_RemoveDeviceZone(SWIGTYPE_p_void context, long deviceId, BS2_DEVICE_ZONE_TABLE_ID Ids, long IdCount) {
    return BS_SDK_V2JNI.BS2_RemoveDeviceZone(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2_DEVICE_ZONE_TABLE_ID.getCPtr(Ids), Ids, IdCount);
  }

  public static int BS2_RemoveAllDeviceZone(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllDeviceZone(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetDeviceZoneConfig(SWIGTYPE_p_void context, long deviceId, BS2DeviceZoneConfig config) {
    return BS_SDK_V2JNI.BS2_GetDeviceZoneConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DeviceZoneConfig.getCPtr(config), config);
  }

  public static int BS2_SetDeviceZoneConfig(SWIGTYPE_p_void context, long deviceId, BS2DeviceZoneConfig config) {
    return BS_SDK_V2JNI.BS2_SetDeviceZoneConfig(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DeviceZoneConfig.getCPtr(config), config);
  }

  public static int BS2_SetDeviceZoneAlarm(SWIGTYPE_p_void context, long deviceId, short alarmed, long[] zoneIds) {
    return BS_SDK_V2JNI.BS2_SetDeviceZoneAlarm(SWIGTYPE_p_void.getCPtr(context), deviceId, alarmed, zoneIds);
  }

  public static int BS2_ClearDeviceZoneAccessRecord(SWIGTYPE_p_void context, long deviceId, long zoneID, String[] uids) {
    return BS_SDK_V2JNI.BS2_ClearDeviceZoneAccessRecord(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneID, uids);
  }

  public static int BS2_ClearAllDeviceZoneAccessRecord(SWIGTYPE_p_void context, long deviceId, long zoneID) {
    return BS_SDK_V2JNI.BS2_ClearAllDeviceZoneAccessRecord(SWIGTYPE_p_void.getCPtr(context), deviceId, zoneID);
  }

  public static int BS2_GetAccessGroupEntranceLimit(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_int Ids, long IdCount, BS2DeviceZoneAGEntranceLimit[] agEntranceLimitObj) {
    return BS_SDK_V2JNI.BS2_GetAccessGroupEntranceLimit(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_int.getCPtr(Ids), IdCount, agEntranceLimitObj);
  }

  public static int BS2_GetAllAccessGroupEntranceLimit(SWIGTYPE_p_void context, long deviceId, BS2DeviceZoneAGEntranceLimit[] agEntranceLimitObj) {
    return BS_SDK_V2JNI.BS2_GetAllAccessGroupEntranceLimit(SWIGTYPE_p_void.getCPtr(context), deviceId, agEntranceLimitObj);
  }

  public static int BS2_SetAccessGroupEntranceLimit(SWIGTYPE_p_void context, long deviceId, BS2DeviceZoneAGEntranceLimit agEntranceLimits, long agEntranceLimitCount) {
    return BS_SDK_V2JNI.BS2_SetAccessGroupEntranceLimit(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DeviceZoneAGEntranceLimit.getCPtr(agEntranceLimits), agEntranceLimits, agEntranceLimitCount);
  }

  public static int BS2_RemoveAccessGroupEntranceLimit(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_int Ids, long IdCount) {
    return BS_SDK_V2JNI.BS2_RemoveAccessGroupEntranceLimit(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_int.getCPtr(Ids), IdCount);
  }

  public static int BS2_RemoveAllAccessGroupEntranceLimit(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllAccessGroupEntranceLimit(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_GetDeviceZoneAGEntranceLimit(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_int Ids, long IdCount, SWIGTYPE_p_p_BS2DeviceZoneAGEntranceLimit deviceZoneAGEntranceLimitObj, SWIGTYPE_p_unsigned_int numDeviceZoneAGEntranceLimit) {
    return BS_SDK_V2JNI.BS2_GetDeviceZoneAGEntranceLimit(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_int.getCPtr(Ids), IdCount, SWIGTYPE_p_p_BS2DeviceZoneAGEntranceLimit.getCPtr(deviceZoneAGEntranceLimitObj), SWIGTYPE_p_unsigned_int.getCPtr(numDeviceZoneAGEntranceLimit));
  }

  public static int BS2_GetAllDeviceZoneAGEntranceLimit(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_p_BS2DeviceZoneAGEntranceLimit deviceZoneAGEntranceLimitObj, SWIGTYPE_p_unsigned_int numDeviceZoneAGEntranceLimit) {
    return BS_SDK_V2JNI.BS2_GetAllDeviceZoneAGEntranceLimit(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_p_BS2DeviceZoneAGEntranceLimit.getCPtr(deviceZoneAGEntranceLimitObj), SWIGTYPE_p_unsigned_int.getCPtr(numDeviceZoneAGEntranceLimit));
  }

  public static int BS2_SetDeviceZoneAGEntranceLimit(SWIGTYPE_p_void context, long deviceId, BS2DeviceZoneAGEntranceLimit deviceZoneAGEntranceLimits, long deviceZoneAGEntranceLimitCount) {
    return BS_SDK_V2JNI.BS2_SetDeviceZoneAGEntranceLimit(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2DeviceZoneAGEntranceLimit.getCPtr(deviceZoneAGEntranceLimits), deviceZoneAGEntranceLimits, deviceZoneAGEntranceLimitCount);
  }

  public static int BS2_RemoveDeviceZoneAGEntranceLimit(SWIGTYPE_p_void context, long deviceId, SWIGTYPE_p_unsigned_int Ids, long IdCount) {
    return BS_SDK_V2JNI.BS2_RemoveDeviceZoneAGEntranceLimit(SWIGTYPE_p_void.getCPtr(context), deviceId, SWIGTYPE_p_unsigned_int.getCPtr(Ids), IdCount);
  }

  public static int BS2_RemoveAllDeviceZoneAGEntranceLimit(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveAllDeviceZoneAGEntranceLimit(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static int BS2_SetCheckGlobalAPBViolationHandler(SWIGTYPE_p_void context, Callback ptrCheckGlobalAPBViolation) {
    return BS_SDK_V2JNI.BS2_SetCheckGlobalAPBViolationHandler(SWIGTYPE_p_void.getCPtr(context), ptrCheckGlobalAPBViolation);
  }

  public static int BS2_CheckGlobalAPBViolation(SWIGTYPE_p_void context, long deviceId, int seq, int handleResult, long zoneID) {
    return BS_SDK_V2JNI.BS2_CheckGlobalAPBViolation(SWIGTYPE_p_void.getCPtr(context), deviceId, seq, handleResult, zoneID);
  }

  public static int BS2_GetDataEncryptKey(SWIGTYPE_p_void context, long deviceId, BS2EncryptKey keyInfo) {
    return BS_SDK_V2JNI.BS2_GetDataEncryptKey(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2EncryptKey.getCPtr(keyInfo), keyInfo);
  }

  public static int BS2_SetDataEncryptKey(SWIGTYPE_p_void context, long deviceId, BS2EncryptKey keyInfo) {
    return BS_SDK_V2JNI.BS2_SetDataEncryptKey(SWIGTYPE_p_void.getCPtr(context), deviceId, BS2EncryptKey.getCPtr(keyInfo), keyInfo);
  }

  public static int BS2_RemoveDataEncryptKey(SWIGTYPE_p_void context, long deviceId) {
    return BS_SDK_V2JNI.BS2_RemoveDataEncryptKey(SWIGTYPE_p_void.getCPtr(context), deviceId);
  }

  public static void foo(long[] deviceListObj) {
    BS_SDK_V2JNI.foo(deviceListObj);
  }

  public static void foo1(SWIGTYPE_p_void con, long[] deviceListObj) {
    BS_SDK_V2JNI.foo1(SWIGTYPE_p_void.getCPtr(con), deviceListObj);
  }

  public static void bar(long[] accessLevelIds) {
    BS_SDK_V2JNI.bar(accessLevelIds);
  }

}
