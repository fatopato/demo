/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.supremainc;

public class BS2Lift {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected BS2Lift(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BS2Lift obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        BS_SDK_V2JNI.delete_BS2Lift(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setLiftID(long value) {
    BS_SDK_V2JNI.BS2Lift_liftID_set(swigCPtr, this, value);
  }

  public long getLiftID() {
    return BS_SDK_V2JNI.BS2Lift_liftID_get(swigCPtr, this);
  }

  public void setName(String value) {
    BS_SDK_V2JNI.BS2Lift_name_set(swigCPtr, this, value);
  }

  public String getName() {
    return BS_SDK_V2JNI.BS2Lift_name_get(swigCPtr, this);
  }

  public void setDeviceID(SWIGTYPE_p_unsigned_int value) {
    BS_SDK_V2JNI.BS2Lift_deviceID_set(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_int getDeviceID() {
    long cPtr = BS_SDK_V2JNI.BS2Lift_deviceID_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
  }

  public void setActivateTimeout(long value) {
    BS_SDK_V2JNI.BS2Lift_activateTimeout_set(swigCPtr, this, value);
  }

  public long getActivateTimeout() {
    return BS_SDK_V2JNI.BS2Lift_activateTimeout_get(swigCPtr, this);
  }

  public void setDualAuthTimeout(long value) {
    BS_SDK_V2JNI.BS2Lift_dualAuthTimeout_set(swigCPtr, this, value);
  }

  public long getDualAuthTimeout() {
    return BS_SDK_V2JNI.BS2Lift_dualAuthTimeout_get(swigCPtr, this);
  }

  public void setNumFloors(short value) {
    BS_SDK_V2JNI.BS2Lift_numFloors_set(swigCPtr, this, value);
  }

  public short getNumFloors() {
    return BS_SDK_V2JNI.BS2Lift_numFloors_get(swigCPtr, this);
  }

  public void setNumDualAuthApprovalGroups(short value) {
    BS_SDK_V2JNI.BS2Lift_numDualAuthApprovalGroups_set(swigCPtr, this, value);
  }

  public short getNumDualAuthApprovalGroups() {
    return BS_SDK_V2JNI.BS2Lift_numDualAuthApprovalGroups_get(swigCPtr, this);
  }

  public void setDualAuthApprovalType(short value) {
    BS_SDK_V2JNI.BS2Lift_dualAuthApprovalType_set(swigCPtr, this, value);
  }

  public short getDualAuthApprovalType() {
    return BS_SDK_V2JNI.BS2Lift_dualAuthApprovalType_get(swigCPtr, this);
  }

  public void setTamperOn(boolean value) {
    BS_SDK_V2JNI.BS2Lift_tamperOn_set(swigCPtr, this, value);
  }

  public boolean getTamperOn() {
    return BS_SDK_V2JNI.BS2Lift_tamperOn_get(swigCPtr, this);
  }

  public void setDualAuthRequired(SWIGTYPE_p_bool value) {
    BS_SDK_V2JNI.BS2Lift_dualAuthRequired_set(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(value));
  }

  public SWIGTYPE_p_bool getDualAuthRequired() {
    long cPtr = BS_SDK_V2JNI.BS2Lift_dualAuthRequired_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_bool(cPtr, false);
  }

  public void setDualAuthScheduleID(long value) {
    BS_SDK_V2JNI.BS2Lift_dualAuthScheduleID_set(swigCPtr, this, value);
  }

  public long getDualAuthScheduleID() {
    return BS_SDK_V2JNI.BS2Lift_dualAuthScheduleID_get(swigCPtr, this);
  }

  public void setFloor(BS2LiftFloor value) {
    BS_SDK_V2JNI.BS2Lift_floor_set(swigCPtr, this, BS2LiftFloor.getCPtr(value), value);
  }

  public BS2LiftFloor getFloor() {
    long cPtr = BS_SDK_V2JNI.BS2Lift_floor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BS2LiftFloor(cPtr, false);
  }

  public void setDualAuthApprovalGroupID(SWIGTYPE_p_unsigned_int value) {
    BS_SDK_V2JNI.BS2Lift_dualAuthApprovalGroupID_set(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_int getDualAuthApprovalGroupID() {
    long cPtr = BS_SDK_V2JNI.BS2Lift_dualAuthApprovalGroupID_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
  }

  public void setAlarm(BS2LiftAlarm value) {
    BS_SDK_V2JNI.BS2Lift_alarm_set(swigCPtr, this, BS2LiftAlarm.getCPtr(value), value);
  }

  public BS2LiftAlarm getAlarm() {
    long cPtr = BS_SDK_V2JNI.BS2Lift_alarm_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BS2LiftAlarm(cPtr, false);
  }

  public void setTamper(BS2LiftAlarm value) {
    BS_SDK_V2JNI.BS2Lift_tamper_set(swigCPtr, this, BS2LiftAlarm.getCPtr(value), value);
  }

  public BS2LiftAlarm getTamper() {
    long cPtr = BS_SDK_V2JNI.BS2Lift_tamper_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BS2LiftAlarm(cPtr, false);
  }

  public void setAlarmFlags(short value) {
    BS_SDK_V2JNI.BS2Lift_alarmFlags_set(swigCPtr, this, value);
  }

  public short getAlarmFlags() {
    return BS_SDK_V2JNI.BS2Lift_alarmFlags_get(swigCPtr, this);
  }

  public void setReserved(SWIGTYPE_p_unsigned_char value) {
    BS_SDK_V2JNI.BS2Lift_reserved_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_char getReserved() {
    long cPtr = BS_SDK_V2JNI.BS2Lift_reserved_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public BS2Lift() {
    this(BS_SDK_V2JNI.new_BS2Lift(), true);
  }

}
