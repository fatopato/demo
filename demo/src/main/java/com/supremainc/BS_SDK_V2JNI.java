/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.supremainc;

public class BS_SDK_V2JNI {
  public final static native int BS_SDK_SUCCESS_get();
  public final static native int BS_SDK_DURESS_SUCCESS_get();
  public final static native int BS_SDK_FIRST_AUTH_SUCCESS_get();
  public final static native int BS_SDK_SECOND_AUTH_SUCCESS_get();
  public final static native int BS_SDK_DUAL_AUTH_SUCCESS_get();
  public final static native int BS_SDK_WIEGAND_BYPASS_SUCCESS_get();
  public final static native int BS_SDK_ERROR_FROM_DEVICE_DRIVER_get();
  public final static native int BS_SDK_ERROR_CANNOT_OPEN_SOCKET_get();
  public final static native int BS_SDK_ERROR_CANNOT_CONNECT_SOCKET_get();
  public final static native int BS_SDK_ERROR_CANNOT_LISTEN_SOCKET_get();
  public final static native int BS_SDK_ERROR_CANNOT_ACCEPT_SOCKET_get();
  public final static native int BS_SDK_ERROR_CANNOT_READ_SOCKET_get();
  public final static native int BS_SDK_ERROR_CANNOT_WRITE_SOCKET_get();
  public final static native int BS_SDK_ERROR_SOCKET_IS_NOT_CONNECTED_get();
  public final static native int BS_SDK_ERROR_SOCKET_IS_NOT_OPEN_get();
  public final static native int BS_SDK_ERROR_SOCKET_IS_NOT_LISTENED_get();
  public final static native int BS_SDK_ERROR_SOCKET_IN_PROGRESS_get();
  public final static native int BS_SDK_ERROR_INVALID_PARAM_get();
  public final static native int BS_SDK_ERROR_INVALID_PACKET_get();
  public final static native int BS_SDK_ERROR_INVALID_DEVICE_ID_get();
  public final static native int BS_SDK_ERROR_INVALID_DEVICE_TYPE_get();
  public final static native int BS_SDK_ERROR_PACKET_CHECKSUM_get();
  public final static native int BS_SDK_ERROR_PACKET_INDEX_get();
  public final static native int BS_SDK_ERROR_PACKET_COMMAND_get();
  public final static native int BS_SDK_ERROR_PACKET_SEQUENCE_get();
  public final static native int BS_SDK_ERROR_NO_PACKET_get();
  public final static native int BS_SDK_ERROR_EXTRACTION_FAIL_get();
  public final static native int BS_SDK_ERROR_VERIFY_FAIL_get();
  public final static native int BS_SDK_ERROR_IDENTIFY_FAIL_get();
  public final static native int BS_SDK_ERROR_IDENTIFY_TIMEOUT_get();
  public final static native int BS_SDK_ERROR_FINGERPRINT_CAPTURE_FAIL_get();
  public final static native int BS_SDK_ERROR_FINGERPRINT_SCAN_TIMEOUT_get();
  public final static native int BS_SDK_ERROR_FINGERPRINT_SCAN_CANCELLED_get();
  public final static native int BS_SDK_ERROR_NOT_SAME_FINGERPRINT_get();
  public final static native int BS_SDK_ERROR_EXTRACTION_LOW_QUALITY_get();
  public final static native int BS_SDK_ERROR_CAPTURE_LOW_QUALITY_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_FINGERPRINT_get();
  public final static native int BS_SDK_ERROR_FAKE_FINGER_DETECTED_get();
  public final static native int BS_SDK_ERROR_FAKE_FINGER_TRY_AGAIN_get();
  public final static native int BS_SDK_ERROR_FAKE_FINGER_SENSOR_ERROR_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_FACE_get();
  public final static native int BS_SDK_ERROR_FACE_CAPTURE_FAIL_get();
  public final static native int BS_SDK_ERROR_FACE_SCAN_TIMEOUT_get();
  public final static native int BS_SDK_ERROR_FACE_SCAN_CANCELLED_get();
  public final static native int BS_SDK_ERROR_CANNOT_OPEN_DIR_get();
  public final static native int BS_SDK_ERROR_CANNOT_OPEN_FILE_get();
  public final static native int BS_SDK_ERROR_CANNOT_WRITE_FILE_get();
  public final static native int BS_SDK_ERROR_CANNOT_SEEK_FILE_get();
  public final static native int BS_SDK_ERROR_CANNOT_READ_FILE_get();
  public final static native int BS_SDK_ERROR_CANNOT_GET_STAT_get();
  public final static native int BS_SDK_ERROR_CANNOT_GET_SYSINFO_get();
  public final static native int BS_SDK_ERROR_DATA_MISMATCH_get();
  public final static native int BS_SDK_ERROR_ALREADY_OPEN_DIR_get();
  public final static native int BS_SDK_ERROR_INVALID_RELAY_get();
  public final static native int BS_SDK_ERROR_CANNOT_WRITE_IO_PACKET_get();
  public final static native int BS_SDK_ERROR_CANNOT_READ_IO_PACKET_get();
  public final static native int BS_SDK_ERROR_CANNOT_READ_INPUT_get();
  public final static native int BS_SDK_ERROR_READ_INPUT_TIMEOUT_get();
  public final static native int BS_SDK_ERROR_CANNOT_ENABLE_INPUT_get();
  public final static native int BS_SDK_ERROR_CANNOT_SET_INPUT_DURATION_get();
  public final static native int BS_SDK_ERROR_INVALID_PORT_get();
  public final static native int BS_SDK_ERROR_INVALID_INTERPHONE_TYPE_get();
  public final static native int BS_SDK_ERROR_INVALID_LCD_PARAM_get();
  public final static native int BS_SDK_ERROR_CANNOT_WRITE_LCD_PACKET_get();
  public final static native int BS_SDK_ERROR_CANNOT_READ_LCD_PACKET_get();
  public final static native int BS_SDK_ERROR_INVALID_LCD_PACKET_get();
  public final static native int BS_SDK_ERROR_INPUT_QUEUE_FULL_get();
  public final static native int BS_SDK_ERROR_WIEGAND_QUEUE_FULL_get();
  public final static native int BS_SDK_ERROR_MISC_INPUT_QUEUE_FULL_get();
  public final static native int BS_SDK_ERROR_WIEGAND_DATA_QUEUE_FULL_get();
  public final static native int BS_SDK_ERROR_WIEGAND_DATA_QUEUE_EMPTY_get();
  public final static native int BS_SDK_ERROR_NOT_SUPPORTED_get();
  public final static native int BS_SDK_ERROR_TIMEOUT_get();
  public final static native int BS_SDK_ERROR_INVALID_DATA_FILE_get();
  public final static native int BS_SDK_ERROR_TOO_LARGE_DATA_FOR_SLOT_get();
  public final static native int BS_SDK_ERROR_INVALID_SLOT_NO_get();
  public final static native int BS_SDK_ERROR_INVALID_SLOT_DATA_get();
  public final static native int BS_SDK_ERROR_CANNOT_INIT_DB_get();
  public final static native int BS_SDK_ERROR_DUPLICATE_ID_get();
  public final static native int BS_SDK_ERROR_USER_FULL_get();
  public final static native int BS_SDK_ERROR_DUPLICATE_TEMPLATE_get();
  public final static native int BS_SDK_ERROR_FINGERPRINT_FULL_get();
  public final static native int BS_SDK_ERROR_DUPLICATE_CARD_get();
  public final static native int BS_SDK_ERROR_CARD_FULL_get();
  public final static native int BS_SDK_ERROR_NO_VALID_HDR_FILE_get();
  public final static native int BS_SDK_ERROR_INVALID_LOG_FILE_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_USER_get();
  public final static native int BS_SDK_ERROR_ACCESS_LEVEL_FULL_get();
  public final static native int BS_SDK_ERROR_INVALID_USER_ID_get();
  public final static native int BS_SDK_ERROR_BLACKLIST_FULL_get();
  public final static native int BS_SDK_ERROR_USER_NAME_FULL_get();
  public final static native int BS_SDK_ERROR_USER_IMAGE_FULL_get();
  public final static native int BS_SDK_ERROR_USER_IMAGE_SIZE_TOO_BIG_get();
  public final static native int BS_SDK_ERROR_SLOT_DATA_CHECKSUM_get();
  public final static native int BS_SDK_ERROR_CANNOT_UPDATE_FINGERPRINT_get();
  public final static native int BS_SDK_ERROR_TEMPLATE_FORMAT_MISMATCH_get();
  public final static native int BS_SDK_ERROR_NO_ADMIN_USER_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_LOG_get();
  public final static native int BS_SDK_ERROR_DOOR_SCHEDULE_FULL_get();
  public final static native int BS_SDK_ERROR_DB_SLOT_FULL_get();
  public final static native int BS_SDK_ERROR_ACCESS_GROUP_FULL_get();
  public final static native int BS_SDK_ERROR_ACCESS_SCHEDULE_FULL_get();
  public final static native int BS_SDK_ERROR_HOLIDAY_GROUP_FULL_get();
  public final static native int BS_SDK_ERROR_HOLIDAY_FULL_get();
  public final static native int BS_SDK_ERROR_TIME_PERIOD_FULL_get();
  public final static native int BS_SDK_ERROR_NO_CREDENTIAL_get();
  public final static native int BS_SDK_ERROR_NO_BIOMETRIC_CREDENTIAL_get();
  public final static native int BS_SDK_ERROR_NO_CARD_CREDENTIAL_get();
  public final static native int BS_SDK_ERROR_NO_PIN_CREDENTIAL_get();
  public final static native int BS_SDK_ERROR_NO_BIOMETRIC_PIN_CREDENTIAL_get();
  public final static native int BS_SDK_ERROR_NO_USER_NAME_get();
  public final static native int BS_SDK_ERROR_NO_USER_IMAGE_get();
  public final static native int BS_SDK_ERROR_READER_FULL_get();
  public final static native int BS_SDK_ERROR_CACHE_MISSED_get();
  public final static native int BS_SDK_ERROR_OPERATOR_FULL_get();
  public final static native int BS_SDK_ERROR_INVALID_LINK_ID_get();
  public final static native int BS_SDK_ERROR_TIMER_CANCELED_get();
  public final static native int BS_SDK_ERROR_USER_JOB_FULL_get();
  public final static native int BS_SDK_ERROR_CANNOT_UPDATE_FACE_get();
  public final static native int BS_SDK_ERROR_FACE_FULL_get();
  public final static native int BS_SDK_ERROR_FLOOR_SCHEDULE_FULL_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_AUTH_GROUP_get();
  public final static native int BS_SDK_ERROR_AUTH_GROUP_FULL_get();
  public final static native int BS_SDK_ERROR_USER_PHRASE_FULL_get();
  public final static native int BS_SDK_ERROR_DST_SCHEDULE_FULL_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_DST_SCHEDULE_get();
  public final static native int BS_SDK_ERROR_INVALID_SCHEDULE_get();
  public final static native int BS_SDK_ERROR_INVALID_CONFIG_get();
  public final static native int BS_SDK_ERROR_CANNOT_OPEN_CONFIG_FILE_get();
  public final static native int BS_SDK_ERROR_CANNOT_READ_CONFIG_FILE_get();
  public final static native int BS_SDK_ERROR_INVALID_CONFIG_FILE_get();
  public final static native int BS_SDK_ERROR_INVALID_CONFIG_DATA_get();
  public final static native int BS_SDK_ERROR_CANNOT_WRITE_CONFIG_FILE_get();
  public final static native int BS_SDK_ERROR_INVALID_CONFIG_INDEX_get();
  public final static native int BS_SDK_ERROR_CANNOT_SCAN_FINGER_get();
  public final static native int BS_SDK_ERROR_CANNOT_SCAN_CARD_get();
  public final static native int BS_SDK_ERROR_CANNOT_OPEN_RTC_get();
  public final static native int BS_SDK_ERROR_CANNOT_SET_RTC_get();
  public final static native int BS_SDK_ERROR_CANNOT_GET_RTC_get();
  public final static native int BS_SDK_ERROR_CANNOT_SET_LED_get();
  public final static native int BS_SDK_ERROR_CANNOT_OPEN_DEVICE_DRIVER_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_DEVICE_get();
  public final static native int BS_SDK_ERROR_CANNOT_SCAN_FACE_get();
  public final static native int BS_SDK_ERROR_SLAVE_FULL_get();
  public final static native int BS_SDK_ERROR_CANNOT_ADD_DEVICE_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_DOOR_get();
  public final static native int BS_SDK_ERROR_DOOR_FULL_get();
  public final static native int BS_SDK_ERROR_CANNOT_LOCK_DOOR_get();
  public final static native int BS_SDK_ERROR_CANNOT_UNLOCK_DOOR_get();
  public final static native int BS_SDK_ERROR_CANNOT_RELEASE_DOOR_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_LIFT_get();
  public final static native int BS_SDK_ERROR_LIFT_FULL_get();
  public final static native int BS_SDK_ERROR_ACCESS_RULE_VIOLATION_get();
  public final static native int BS_SDK_ERROR_DISABLED_get();
  public final static native int BS_SDK_ERROR_NOT_YET_VALID_get();
  public final static native int BS_SDK_ERROR_EXPIRED_get();
  public final static native int BS_SDK_ERROR_BLACKLIST_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_ACCESS_GROUP_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_ACCESS_LEVEL_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_ACCESS_SCHEDULE_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_HOLIDAY_GROUP_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_BLACKLIST_get();
  public final static native int BS_SDK_ERROR_AUTH_TIMEOUT_get();
  public final static native int BS_SDK_ERROR_DUAL_AUTH_TIMEOUT_get();
  public final static native int BS_SDK_ERROR_INVALID_AUTH_MODE_get();
  public final static native int BS_SDK_ERROR_AUTH_UNEXPECTED_USER_get();
  public final static native int BS_SDK_ERROR_AUTH_UNEXPECTED_CREDENTIAL_get();
  public final static native int BS_SDK_ERROR_DUAL_AUTH_FAIL_get();
  public final static native int BS_SDK_ERROR_BIOMETRIC_AUTH_REQUIRED_get();
  public final static native int BS_SDK_ERROR_CARD_AUTH_REQUIRED_get();
  public final static native int BS_SDK_ERROR_PIN_AUTH_REQUIRED_get();
  public final static native int BS_SDK_ERROR_BIOMETRIC_OR_PIN_AUTH_REQUIRED_get();
  public final static native int BS_SDK_ERROR_TNA_CODE_REQUIRED_get();
  public final static native int BS_SDK_ERROR_AUTH_SERVER_MATCH_REFUSAL_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_FLOOR_LEVEL_get();
  public final static native int BS_SDK_ERROR_AUTH_FAIL_get();
  public final static native int BS_SDK_ERROR_AUTH_GROUP_REQUIRED_get();
  public final static native int BS_SDK_ERROR_IDENTIFICATION_REQUIRED_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_ZONE_get();
  public final static native int BS_SDK_ERROR_SET_ZONE_get();
  public final static native int BS_SDK_ERROR_HARD_APB_VIOLATION_get();
  public final static native int BS_SDK_ERROR_SOFT_APB_VIOLATION_get();
  public final static native int BS_SDK_ERROR_HARD_TIMED_APB_VIOLATION_get();
  public final static native int BS_SDK_ERROR_SOFT_TIMED_APB_VIOLATION_get();
  public final static native int BS_SDK_ERROR_SCHEDULED_LOCK_VIOLATION_get();
  public final static native int BS_SDK_ERROR_SCHEDULED_UNLOCK_VIOLATION_get();
  public final static native int BS_SDK_ERROR_SET_FIRE_ALARM_get();
  public final static native int BS_SDK_ERROR_TIMED_APB_ZONE_FULL_get();
  public final static native int BS_SDK_ERROR_FIRE_ALARM_ZONE_FULL_get();
  public final static native int BS_SDK_ERROR_SCHEDULED_LOCK_UNLOCK_ZONE_FULL_get();
  public final static native int BS_SDK_ERROR_INACTIVE_ZONE_get();
  public final static native int BS_SDK_ERROR_INTRUSION_ALARM_ZONE_FULL_get();
  public final static native int BS_SDK_ERROR_CANNOT_ARM_get();
  public final static native int BS_SDK_ERROR_CANNOT_DISARM_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_ARM_CARD_get();
  public final static native int BS_SDK_ERROR_HARD_ENTRANCE_LIMIT_COUNT_VIOLATION_get();
  public final static native int BS_SDK_ERROR_SOFT_ENTRANCE_LIMIT_COUNT_VIOLATION_get();
  public final static native int BS_SDK_ERROR_HARD_ENTRANCE_LIMIT_TIME_VIOLATION_get();
  public final static native int BS_SDK_ERROR_SOFT_ENTRANCE_LIMIT_TIME_VIOLATION_get();
  public final static native int BS_SDK_ERROR_INTERLOCK_ZONE_DOOR_VIOLATION_get();
  public final static native int BS_SDK_ERROR_INTERLOCK_ZONE_INPUT_VIOLATION_get();
  public final static native int BS_SDK_ERROR_INTERLOCK_ZONE_FULL_get();
  public final static native int BS_SDK_ERROR_CARD_IO_get();
  public final static native int BS_SDK_ERROR_CARD_INIT_FAIL_get();
  public final static native int BS_SDK_ERROR_CARD_NOT_ACTIVATED_get();
  public final static native int BS_SDK_ERROR_CARD_CANNOT_READ_DATA_get();
  public final static native int BS_SDK_ERROR_CARD_CIS_CRC_get();
  public final static native int BS_SDK_ERROR_CARD_CANNOT_WRITE_DATA_get();
  public final static native int BS_SDK_ERROR_CARD_READ_TIMEOUT_get();
  public final static native int BS_SDK_ERROR_CARD_READ_CANCELLED_get();
  public final static native int BS_SDK_ERROR_CARD_CANNOT_SEND_DATA_get();
  public final static native int BS_SDK_ERROR_CANNOT_FIND_CARD_get();
  public final static native int BS_SDK_ERROR_INVALID_PASSWORD_get();
  public final static native int BS_SDK_ERROR_CAMERA_INIT_FAIL_get();
  public final static native int BS_SDK_ERROR_JPEG_ENCODER_INIT_FAIL_get();
  public final static native int BS_SDK_ERROR_CANNOT_ENCODE_JPEG_get();
  public final static native int BS_SDK_ERROR_JPEG_ENCODER_NOT_INITIALIZED_get();
  public final static native int BS_SDK_ERROR_JPEG_ENCODER_DEINIT_FAIL_get();
  public final static native int BS_SDK_ERROR_CAMERA_CAPTURE_FAIL_get();
  public final static native int BS_SDK_ERROR_CANNOT_DETECT_FACE_get();
  public final static native int BS_SDK_ERROR_FILE_IO_get();
  public final static native int BS_SDK_ERROR_ALLOC_MEM_get();
  public final static native int BS_SDK_ERROR_CANNOT_UPGRADE_get();
  public final static native int BS_SDK_ERROR_DEVICE_LOCKED_get();
  public final static native int BS_SDK_ERROR_CANNOT_SEND_TO_SERVER_get();
  public final static native int BS_SDK_ERROR_CANNOT_UPGRADE_MEMOEY_get();
  public final static native int BS_SDK_ERROR_SSL_INIT_get();
  public final static native int BS_SDK_ERROR_SSL_EXIST_get();
  public final static native int BS_SDK_ERROR_SSL_IS_NOT_CONNECTED_get();
  public final static native int BS_SDK_ERROR_SSL_ALREADY_CONNECTED_get();
  public final static native int BS_SDK_ERROR_SSL_INVALID_CA_get();
  public final static native int BS_SDK_ERROR_SSL_VERIFY_CA_get();
  public final static native int BS_SDK_ERROR_SSL_INVALID_KEY_get();
  public final static native int BS_SDK_ERROR_SSL_VERIFY_KEY_get();
  public final static native int BS_SDK_ERROR_NULL_POINTER_get();
  public final static native int BS_SDK_ERROR_UNINITIALIZED_get();
  public final static native int BS_SDK_ERROR_CANNOT_RUN_SERVICE_get();
  public final static native int BS_SDK_ERROR_CANCELED_get();
  public final static native int BS_SDK_ERROR_EXIST_get();
  public final static native int BS_SDK_ERROR_ENCRYPT_get();
  public final static native int BS_SDK_ERROR_DECRYPT_get();
  public final static native int BS_SDK_ERROR_DEVICE_BUSY_get();
  public final static native int BS_SDK_ERROR_INTERNAL_get();
  public final static native int BS_SDK_ERROR_INVALID_FILE_FORMAT_get();
  public final static native int BS_SDK_ERROR_INVALID_SCHEDULE_ID_get();
  public final static native int BS2_IPV4_ADDR_SIZE_get();
  public final static native int BS2_URL_SIZE_get();
  public final static native int BS2_USER_ID_SIZE_get();
  public final static native int BS2_USER_NAME_LEN_get();
  public final static native int BS2_USER_IMAGE_SIZE_get();
  public final static native int BS2_PIN_HASH_SIZE_get();
  public final static native int BS2_INVALID_PORT_get();
  public final static native int BS2_INVALID_LINK_ID_get();
  public final static native int BS2_DEVICE_TYPE_BIOENTRY_PLUS_get();
  public final static native int BS2_DEVICE_TYPE_BIOENTRY_W_get();
  public final static native int BS2_DEVICE_TYPE_BIOLITE_NET_get();
  public final static native int BS2_DEVICE_TYPE_XPASS_get();
  public final static native int BS2_DEVICE_TYPE_XPASS_S2_get();
  public final static native int BS2_DEVICE_TYPE_ENTRY_MAX_get();
  public final static native int BS2_DEVICE_TYPE_SECURE_IO_2_get();
  public final static native int BS2_DEVICE_TYPE_DOOR_MODULE_20_get();
  public final static native int BS2_DEVICE_TYPE_BIOSTATION_2_get();
  public final static native int BS2_DEVICE_TYPE_BIOSTATION_A2_get();
  public final static native int BS2_DEVICE_TYPE_FACESTATION_2_get();
  public final static native int BS2_DEVICE_TYPE_IO_DEVICE_get();
  public final static native int BS2_DEVICE_TYPE_BIOSTATION_L2_get();
  public final static native int BS2_DEVICE_TYPE_BIOENTRY_W2_get();
  public final static native int BS2_DEVICE_TYPE_RS485_SLAVE_get();
  public final static native int BS2_DEVICE_TYPE_CORE_STATION_get();
  public final static native int BS2_DEVICE_TYPE_CORESTATION_40_get();
  public final static native int BS2_DEVICE_TYPE_OUTPUT_MODULE_get();
  public final static native int BS2_DEVICE_TYPE_INPUT_MODULE_get();
  public final static native int BS2_DEVICE_TYPE_BIOENTRY_P2_get();
  public final static native int BS2_DEVICE_TYPE_BIOLITE_N2_get();
  public final static native int BS2_DEVICE_TYPE_XPASS2_get();
  public final static native int BS2_DEVICE_TYPE_XPASS_S3_get();
  public final static native int BS2_DEVICE_TYPE_BIOENTRY_R2_get();
  public final static native int BS2_DEVICE_TYPE_XPASS_D2_get();
  public final static native int BS2_DEVICE_TYPE_DOOR_MODULE_21_get();
  public final static native int BS2_DEVICE_TYPE_UNKNOWN_get();
  public final static native int BS2_CARD_MODEL_OMPW_get();
  public final static native int BS2_CARD_MODEL_OIPW_get();
  public final static native int BS2_CARD_MODEL_OEPW_get();
  public final static native int BS2_CARD_MODEL_OHPW_get();
  public final static native int BS2_CARD_MODEL_ODPW_get();
  public final static native int BS2_CARD_MODEL_OAPW_get();
  public final static native int BS2_SWITCH_TYPE_NORMAL_OPEN_get();
  public final static native int BS2_SWITCH_TYPE_NORMAL_CLOSED_get();
  public final static native int BS2_PORT_VALUE_UNKNOWN_get();
  public final static native int BS2_PORT_VALUE_OPEN_get();
  public final static native int BS2_PORT_VALUE_CLOSED_get();
  public final static native int BS2_PORT_VALUE_SUPERVISED_SHORT_get();
  public final static native int BS2_PORT_VALUE_SUPERVISED_OPEN_get();
  public final static native int BS2_YEAR_1900_get();
  public final static native int BS2_MONTH_JANUARY_get();
  public final static native int BS2_MONTH_FEBRUARY_get();
  public final static native int BS2_MONTH_MARCH_get();
  public final static native int BS2_MONTH_APRIL_get();
  public final static native int BS2_MONTH_MAY_get();
  public final static native int BS2_MONTH_JUNE_get();
  public final static native int BS2_MONTH_JULY_get();
  public final static native int BS2_MONTH_AUGUST_get();
  public final static native int BS2_MONTH_SEPTEMBER_get();
  public final static native int BS2_MONTH_OCTOBER_get();
  public final static native int BS2_MONTH_NOVEMBER_get();
  public final static native int BS2_MONTH_DECEMBER_get();
  public final static native int BS2_NUM_MONTHS_get();
  public final static native int BS2_WEEKDAY_SUNDAY_get();
  public final static native int BS2_WEEKDAY_MONDAY_get();
  public final static native int BS2_WEEKDAY_TUESDAY_get();
  public final static native int BS2_WEEKDAY_WEDNESDAY_get();
  public final static native int BS2_WEEKDAY_THURSDAY_get();
  public final static native int BS2_WEEKDAY_FRIDAY_get();
  public final static native int BS2_WEEKDAY_SATURDAY_get();
  public final static native int BS2_NUM_WEEKDAYS_get();
  public final static native int BS2_ORDINAL_FIRST_get();
  public final static native int BS2_ORDINAL_SECOND_get();
  public final static native int BS2_ORDINAL_THIRD_get();
  public final static native int BS2_ORDINAL_FOURTH_get();
  public final static native int BS2_ORDINAL_FIFTH_get();
  public final static native int BS2_ORDINAL_SIXTH_get();
  public final static native int BS2_ORDINAL_SEVENTH_get();
  public final static native int BS2_ORDINAL_EIGHTH_get();
  public final static native int BS2_ORDINAL_NINTH_get();
  public final static native int BS2_ORDINAL_TENTH_get();
  public final static native int BS2_ORDINAL_LAST_get();
  public final static native int MIFARE_KEY_SIZE_get();
  public final static native int MIFARE_MAX_TEMPLATE_get();
  public final static native int VALID_MAGIC_NO_get();
  public final static native void BS1CardConfig_magicNo_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_magicNo_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_disabled_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_disabled_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_useCSNOnly_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_useCSNOnly_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_bioentryCompatible_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_bioentryCompatible_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_useSecondaryKey_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_useSecondaryKey_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_reserved1_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_reserved1_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_primaryKey_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_primaryKey_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_reserved2_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_reserved2_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_secondaryKey_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_secondaryKey_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_reserved3_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_reserved3_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_cisIndex_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_cisIndex_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_numOfTemplate_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_numOfTemplate_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_templateSize_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_templateSize_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_templateStartBlock_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_templateStartBlock_get(long jarg1, BS1CardConfig jarg1_);
  public final static native void BS1CardConfig_reserve4_set(long jarg1, BS1CardConfig jarg1_, long jarg2);
  public final static native long BS1CardConfig_reserve4_get(long jarg1, BS1CardConfig jarg1_);
  public final static native long new_BS1CardConfig();
  public final static native void delete_BS1CardConfig(long jarg1);
  public final static native int BS2_MAX_OPERATORS_get();
  public final static native int BS2_AUTH_TIMEOUT_MIN_get();
  public final static native int BS2_AUTH_TIMEOUT_MAX_get();
  public final static native int BS2_AUTH_TIMEOUT_DEFAULT_get();
  public final static native int BS2_MATCH_TIMEOUT_MIN_get();
  public final static native int BS2_MATCH_TIMEOUT_MAX_get();
  public final static native int BS2_MATCH_TIMEOUT_DEFAULT_get();
  public final static native int GLOBAL_APB_FAIL_ACTION_NONE_get();
  public final static native int GLOBAL_APB_FAIL_ACTION_SOFT_get();
  public final static native int GLOBAL_APB_FAIL_ACTION_HARD_get();
  public final static native int CREDENTIAL_TYPE_NONE_get();
  public final static native int CREDENTIAL_TYPE_BIOMETRIC_get();
  public final static native int CREDENTIAL_TYPE_FINGERPRINT_get();
  public final static native int CREDENTIAL_TYPE_CARD_get();
  public final static native int CREDENTIAL_TYPE_KEY_get();
  public final static native int CREDENTIAL_TYPE_FACE_get();
  public final static native int CREDENTIAL_TYPE_ALL_get();
  public final static native int BS2_AUTH_MODE_NONE_get();
  public final static native int BS2_AUTH_MODE_PROHIBITED_get();
  public final static native int BS2_AUTH_MODE_BIOMETRIC_ONLY_get();
  public final static native int BS2_AUTH_MODE_BIOMETRIC_PIN_get();
  public final static native int BS2_AUTH_MODE_CARD_ONLY_get();
  public final static native int BS2_AUTH_MODE_CARD_BIOMETRIC_get();
  public final static native int BS2_AUTH_MODE_CARD_PIN_get();
  public final static native int BS2_AUTH_MODE_CARD_BIOMETRIC_OR_PIN_get();
  public final static native int BS2_AUTH_MODE_CARD_BIOMETRIC_PIN_get();
  public final static native int BS2_AUTH_MODE_ID_BIOMETRIC_get();
  public final static native int BS2_AUTH_MODE_ID_PIN_get();
  public final static native int BS2_AUTH_MODE_ID_BIOMETRIC_OR_PIN_get();
  public final static native int BS2_AUTH_MODE_ID_BIOMETRIC_PIN_get();
  public final static native int BS2_NUM_OF_AUTH_MODE_get();
  public final static native int BS2_OPERATOR_LEVEL_NONE_get();
  public final static native int BS2_OPERATOR_LEVEL_ADMIN_get();
  public final static native int BS2_OPERATOR_LEVEL_CONFIG_get();
  public final static native int BS2_OPERATOR_LEVEL_USER_get();
  public final static native int BS2_NUM_OF_OPERATOR_LEVEL_get();
  public final static native int BS2_FACE_DETECTION_NONE_get();
  public final static native int BS2_FACE_DETECTION_NORMAL_get();
  public final static native int BS2_FACE_DETECTION_STRICT_get();
  public final static native void BS2AuthConfig_authSchedule_set(long jarg1, BS2AuthConfig jarg1_, long jarg2);
  public final static native long BS2AuthConfig_authSchedule_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_useGlobalAPB_set(long jarg1, BS2AuthConfig jarg1_, boolean jarg2);
  public final static native boolean BS2AuthConfig_useGlobalAPB_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_globalAPBFailAction_set(long jarg1, BS2AuthConfig jarg1_, short jarg2);
  public final static native short BS2AuthConfig_globalAPBFailAction_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_useGroupMatching_set(long jarg1, BS2AuthConfig jarg1_, boolean jarg2);
  public final static native boolean BS2AuthConfig_useGroupMatching_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_reserved_set(long jarg1, BS2AuthConfig jarg1_, short jarg2);
  public final static native short BS2AuthConfig_reserved_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_reserved2_set(long jarg1, BS2AuthConfig jarg1_, long jarg2);
  public final static native long BS2AuthConfig_reserved2_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_usePrivateAuth_set(long jarg1, BS2AuthConfig jarg1_, boolean jarg2);
  public final static native boolean BS2AuthConfig_usePrivateAuth_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_faceDetectionLevel_set(long jarg1, BS2AuthConfig jarg1_, short jarg2);
  public final static native short BS2AuthConfig_faceDetectionLevel_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_useServerMatching_set(long jarg1, BS2AuthConfig jarg1_, boolean jarg2);
  public final static native boolean BS2AuthConfig_useServerMatching_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_useFullAccess_set(long jarg1, BS2AuthConfig jarg1_, boolean jarg2);
  public final static native boolean BS2AuthConfig_useFullAccess_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_matchTimeout_set(long jarg1, BS2AuthConfig jarg1_, short jarg2);
  public final static native short BS2AuthConfig_matchTimeout_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_authTimeout_set(long jarg1, BS2AuthConfig jarg1_, short jarg2);
  public final static native short BS2AuthConfig_authTimeout_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_numOperators_set(long jarg1, BS2AuthConfig jarg1_, short jarg2);
  public final static native short BS2AuthConfig_numOperators_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native void BS2AuthConfig_reserved3_set(long jarg1, BS2AuthConfig jarg1_, long jarg2);
  public final static native long BS2AuthConfig_reserved3_get(long jarg1, BS2AuthConfig jarg1_);
  public final static native long new_BS2AuthConfig();
  public final static native void delete_BS2AuthConfig(long jarg1);
  public final static native int BS2_CARD_KEY_SIZE_get();
  public final static native int BS2_CARD_MAGIC_NO_get();
  public final static native int BS2_CARD_MAX_TEMPLATES_get();
  public final static native int BS2_CARD_DATA_BINARY_get();
  public final static native int BS2_CARD_DATA_ASCII_get();
  public final static native int BS2_CARD_DATA_UTF16_get();
  public final static native int BS2_CARD_DATA_BCD_get();
  public final static native int BS2_CARD_BYTE_ORDER_MSB_get();
  public final static native int BS2_CARD_BYTE_ORDER_LSB_get();
  public final static native void BS2MifareCard_primaryKey_set(long jarg1, BS2MifareCard jarg1_, long jarg2);
  public final static native long BS2MifareCard_primaryKey_get(long jarg1, BS2MifareCard jarg1_);
  public final static native void BS2MifareCard_reserved1_set(long jarg1, BS2MifareCard jarg1_, long jarg2);
  public final static native long BS2MifareCard_reserved1_get(long jarg1, BS2MifareCard jarg1_);
  public final static native void BS2MifareCard_secondaryKey_set(long jarg1, BS2MifareCard jarg1_, long jarg2);
  public final static native long BS2MifareCard_secondaryKey_get(long jarg1, BS2MifareCard jarg1_);
  public final static native void BS2MifareCard_reserved2_set(long jarg1, BS2MifareCard jarg1_, long jarg2);
  public final static native long BS2MifareCard_reserved2_get(long jarg1, BS2MifareCard jarg1_);
  public final static native void BS2MifareCard_startBlockIndex_set(long jarg1, BS2MifareCard jarg1_, int jarg2);
  public final static native int BS2MifareCard_startBlockIndex_get(long jarg1, BS2MifareCard jarg1_);
  public final static native void BS2MifareCard_reserved_set(long jarg1, BS2MifareCard jarg1_, long jarg2);
  public final static native long BS2MifareCard_reserved_get(long jarg1, BS2MifareCard jarg1_);
  public final static native long new_BS2MifareCard();
  public final static native void delete_BS2MifareCard(long jarg1);
  public final static native void BS2IClassCard_primaryKey_set(long jarg1, BS2IClassCard jarg1_, long jarg2);
  public final static native long BS2IClassCard_primaryKey_get(long jarg1, BS2IClassCard jarg1_);
  public final static native void BS2IClassCard_secondaryKey_set(long jarg1, BS2IClassCard jarg1_, long jarg2);
  public final static native long BS2IClassCard_secondaryKey_get(long jarg1, BS2IClassCard jarg1_);
  public final static native void BS2IClassCard_startBlockIndex_set(long jarg1, BS2IClassCard jarg1_, int jarg2);
  public final static native int BS2IClassCard_startBlockIndex_get(long jarg1, BS2IClassCard jarg1_);
  public final static native void BS2IClassCard_reserved_set(long jarg1, BS2IClassCard jarg1_, long jarg2);
  public final static native long BS2IClassCard_reserved_get(long jarg1, BS2IClassCard jarg1_);
  public final static native long new_BS2IClassCard();
  public final static native void delete_BS2IClassCard(long jarg1);
  public final static native void BS2DesFireCard_primaryKey_set(long jarg1, BS2DesFireCard jarg1_, long jarg2);
  public final static native long BS2DesFireCard_primaryKey_get(long jarg1, BS2DesFireCard jarg1_);
  public final static native void BS2DesFireCard_secondaryKey_set(long jarg1, BS2DesFireCard jarg1_, long jarg2);
  public final static native long BS2DesFireCard_secondaryKey_get(long jarg1, BS2DesFireCard jarg1_);
  public final static native void BS2DesFireCard_appID_set(long jarg1, BS2DesFireCard jarg1_, long jarg2);
  public final static native long BS2DesFireCard_appID_get(long jarg1, BS2DesFireCard jarg1_);
  public final static native void BS2DesFireCard_fileID_set(long jarg1, BS2DesFireCard jarg1_, short jarg2);
  public final static native short BS2DesFireCard_fileID_get(long jarg1, BS2DesFireCard jarg1_);
  public final static native void BS2DesFireCard_encryptionType_set(long jarg1, BS2DesFireCard jarg1_, short jarg2);
  public final static native short BS2DesFireCard_encryptionType_get(long jarg1, BS2DesFireCard jarg1_);
  public final static native void BS2DesFireCard_reserved_set(long jarg1, BS2DesFireCard jarg1_, long jarg2);
  public final static native long BS2DesFireCard_reserved_get(long jarg1, BS2DesFireCard jarg1_);
  public final static native long new_BS2DesFireCard();
  public final static native void delete_BS2DesFireCard(long jarg1);
  public final static native void BS2SeosCard_oid_ADF_set(long jarg1, BS2SeosCard jarg1_, long jarg2);
  public final static native long BS2SeosCard_oid_ADF_get(long jarg1, BS2SeosCard jarg1_);
  public final static native void BS2SeosCard_size_ADF_set(long jarg1, BS2SeosCard jarg1_, short jarg2);
  public final static native short BS2SeosCard_size_ADF_get(long jarg1, BS2SeosCard jarg1_);
  public final static native void BS2SeosCard_reserved1_set(long jarg1, BS2SeosCard jarg1_, long jarg2);
  public final static native long BS2SeosCard_reserved1_get(long jarg1, BS2SeosCard jarg1_);
  public final static native void BS2SeosCard_oid_DataObjectID_set(long jarg1, BS2SeosCard jarg1_, long jarg2);
  public final static native long BS2SeosCard_oid_DataObjectID_get(long jarg1, BS2SeosCard jarg1_);
  public final static native void BS2SeosCard_size_DataObject_set(long jarg1, BS2SeosCard jarg1_, long jarg2);
  public final static native long BS2SeosCard_size_DataObject_get(long jarg1, BS2SeosCard jarg1_);
  public final static native void BS2SeosCard_primaryKeyAuth_set(long jarg1, BS2SeosCard jarg1_, long jarg2);
  public final static native long BS2SeosCard_primaryKeyAuth_get(long jarg1, BS2SeosCard jarg1_);
  public final static native void BS2SeosCard_secondaryKeyAuth_set(long jarg1, BS2SeosCard jarg1_, long jarg2);
  public final static native long BS2SeosCard_secondaryKeyAuth_get(long jarg1, BS2SeosCard jarg1_);
  public final static native void BS2SeosCard_reserved2_set(long jarg1, BS2SeosCard jarg1_, long jarg2);
  public final static native long BS2SeosCard_reserved2_get(long jarg1, BS2SeosCard jarg1_);
  public final static native long new_BS2SeosCard();
  public final static native void delete_BS2SeosCard(long jarg1);
  public final static native void BS2CardConfig_byteOrder_set(long jarg1, BS2CardConfig jarg1_, short jarg2);
  public final static native short BS2CardConfig_byteOrder_get(long jarg1, BS2CardConfig jarg1_);
  public final static native void BS2CardConfig_useWiegandFormat_set(long jarg1, BS2CardConfig jarg1_, boolean jarg2);
  public final static native boolean BS2CardConfig_useWiegandFormat_get(long jarg1, BS2CardConfig jarg1_);
  public final static native void BS2CardConfig_dataType_set(long jarg1, BS2CardConfig jarg1_, short jarg2);
  public final static native short BS2CardConfig_dataType_get(long jarg1, BS2CardConfig jarg1_);
  public final static native void BS2CardConfig_useSecondaryKey_set(long jarg1, BS2CardConfig jarg1_, boolean jarg2);
  public final static native boolean BS2CardConfig_useSecondaryKey_get(long jarg1, BS2CardConfig jarg1_);
  public final static native void BS2CardConfig_mifare_set(long jarg1, BS2CardConfig jarg1_, long jarg2, BS2MifareCard jarg2_);
  public final static native long BS2CardConfig_mifare_get(long jarg1, BS2CardConfig jarg1_);
  public final static native void BS2CardConfig_iclass_set(long jarg1, BS2CardConfig jarg1_, long jarg2, BS2IClassCard jarg2_);
  public final static native long BS2CardConfig_iclass_get(long jarg1, BS2CardConfig jarg1_);
  public final static native void BS2CardConfig_desfire_set(long jarg1, BS2CardConfig jarg1_, long jarg2, BS2DesFireCard jarg2_);
  public final static native long BS2CardConfig_desfire_get(long jarg1, BS2CardConfig jarg1_);
  public final static native void BS2CardConfig_formatID_set(long jarg1, BS2CardConfig jarg1_, long jarg2);
  public final static native long BS2CardConfig_formatID_get(long jarg1, BS2CardConfig jarg1_);
  public final static native void BS2CardConfig_reserved_set(long jarg1, BS2CardConfig jarg1_, long jarg2);
  public final static native long BS2CardConfig_reserved_get(long jarg1, BS2CardConfig jarg1_);
  public final static native long new_BS2CardConfig();
  public final static native void delete_BS2CardConfig(long jarg1);
  public final static native void BS2CardConfigEx_seos_set(long jarg1, BS2CardConfigEx jarg1_, long jarg2, BS2SeosCard jarg2_);
  public final static native long BS2CardConfigEx_seos_get(long jarg1, BS2CardConfigEx jarg1_);
  public final static native void BS2CardConfigEx_reserved_set(long jarg1, BS2CardConfigEx jarg1_, long jarg2);
  public final static native long BS2CardConfigEx_reserved_get(long jarg1, BS2CardConfigEx jarg1_);
  public final static native long new_BS2CardConfigEx();
  public final static native void delete_BS2CardConfigEx(long jarg1);
  public final static native void callbackCardInfo__protocolType_set(long jarg1, callbackCardInfo_ jarg1_, int jarg2);
  public final static native int callbackCardInfo__protocolType_get(long jarg1, callbackCardInfo_ jarg1_);
  public final static native void callbackCardInfo__cardType_set(long jarg1, callbackCardInfo_ jarg1_, int jarg2);
  public final static native int callbackCardInfo__cardType_get(long jarg1, callbackCardInfo_ jarg1_);
  public final static native void callbackCardInfo__dataSize_set(long jarg1, callbackCardInfo_ jarg1_, long jarg2);
  public final static native long callbackCardInfo__dataSize_get(long jarg1, callbackCardInfo_ jarg1_);
  public final static native void callbackCardInfo__uidLen_set(long jarg1, callbackCardInfo_ jarg1_, long jarg2);
  public final static native long callbackCardInfo__uidLen_get(long jarg1, callbackCardInfo_ jarg1_);
  public final static native void callbackCardInfo__cardData_set(long jarg1, callbackCardInfo_ jarg1_, long jarg2);
  public final static native long callbackCardInfo__cardData_get(long jarg1, callbackCardInfo_ jarg1_);
  public final static native void callbackCardInfo__iClassPACs_set(long jarg1, callbackCardInfo_ jarg1_, long jarg2);
  public final static native long callbackCardInfo__iClassPACs_get(long jarg1, callbackCardInfo_ jarg1_);
  public final static native long new_callbackCardInfo_();
  public final static native void delete_callbackCardInfo_(long jarg1);
  public final static native int HF_MF_get();
  public final static native int HF_14443B_get();
  public final static native int HF_15693_get();
  public final static native int HF_FELICA_get();
  public final static native int LF_EM_get();
  public final static native int LF_PROX_get();
  public final static native int HF_ICLASS_get();
  public final static native int HF_NFC_get();
  public final static native int HF_SEOS_get();
  public final static native int HF_SEOS_CONFIG_get();
  public final static native int BS2_CONFIG_MASK_NONE_get();
  public final static native int BS2_CONFIG_MASK_FACTORY_get();
  public final static native int BS2_CONFIG_MASK_SYSTEM_get();
  public final static native int BS2_CONFIG_MASK_IP_get();
  public final static native int BS2_CONFIG_MASK_RS485_get();
  public final static native int BS2_CONFIG_MASK_WLAN_get();
  public final static native int BS2_CONFIG_MASK_AUTH_get();
  public final static native int BS2_CONFIG_MASK_CARD_get();
  public final static native int BS2_CONFIG_MASK_FINGERPRINT_get();
  public final static native int BS2_CONFIG_MASK_FACE_get();
  public final static native int BS2_CONFIG_MASK_TRIGGER_ACTION_get();
  public final static native int BS2_CONFIG_MASK_DISPLAY_get();
  public final static native int BS2_CONFIG_MASK_SOUND_get();
  public final static native int BS2_CONFIG_MASK_STATUS_get();
  public final static native int BS2_CONFIG_MASK_WIEGAND_get();
  public final static native int BS2_CONFIG_MASK_USB_get();
  public final static native int BS2_CONFIG_MASK_TNA_get();
  public final static native int BS2_CONFIG_MASK_VIDEOPHONE_get();
  public final static native int BS2_CONFIG_MASK_INTERPHONE_get();
  public final static native int BS2_CONFIG_MASK_VOIP_get();
  public final static native int BS2_CONFIG_MASK_INPUT_get();
  public final static native int BS2_CONFIG_MASK_WIEGAND_IO_get();
  public final static native int BS2_CONFIG_MASK_TNA_EXT_get();
  public final static native int BS2_CONFIG_MASK_IP_EXT_get();
  public final static native int BS2_CONFIG_MASK_EVENT_get();
  public final static native int BS2_CONFIG_MASK_CARD_1x_get();
  public final static native int BS2_CONFIG_MASK_WIEGAND_MULTI_get();
  public final static native int BS2_CONFIG_MASK_SYSTEM_EXT_get();
  public final static native int BS2_CONFIG_MASK_DST_get();
  public final static native int BS2_CONFIG_MASK_RS485_EX_get();
  public final static native int BS2_CONFIG_MASK_CARD_EX_get();
  public final static native int BS2_CONFIG_MASK_DST_EX_get();
  public final static native int BS2_CONFIG_MASK_ALL_get();
  public final static native int BS2_MAX_DEVICE_ZONE_get();
  public final static native int BS2_DEVICE_ZONE_NODE_TYPE_MASTER_get();
  public final static native int BS2_DEVICE_ZONE_NODE_TYPE_MEMBER_get();
  public final static native int BS2_DEVICE_ZONE_TYPE_ENTRANCE_LIMIT_get();
  public final static native int BS2_DEVICE_ZONE_TYPE_FIRE_ALARM_get();
  public final static native void BS2_DEVICE_ZONE_TABLE_ID_zoneID_set(long jarg1, BS2_DEVICE_ZONE_TABLE_ID jarg1_, long jarg2);
  public final static native long BS2_DEVICE_ZONE_TABLE_ID_zoneID_get(long jarg1, BS2_DEVICE_ZONE_TABLE_ID jarg1_);
  public final static native void BS2_DEVICE_ZONE_TABLE_ID_nodeType_set(long jarg1, BS2_DEVICE_ZONE_TABLE_ID jarg1_, long jarg2);
  public final static native long BS2_DEVICE_ZONE_TABLE_ID_nodeType_get(long jarg1, BS2_DEVICE_ZONE_TABLE_ID jarg1_);
  public final static native long new_BS2_DEVICE_ZONE_TABLE_ID();
  public final static native void delete_BS2_DEVICE_ZONE_TABLE_ID(long jarg1);
  public final static native int ALL_DEVICE_ID_get();
  public final static native int ALL_DOOR_ID_get();
  public final static native int ALL_ID_NODE_TYPE_get();
  public final static native int BS2_MAX_READERS_PER_DEVICE_ZONE_ENTRANCE_LIMIT_get();
  public final static native int BS2_MAX_BYPASS_GROUPS_PER_DEVICE_ZONE_ENTRANCE_LIMIT_get();
  public final static native int BS2_MAX_DEVICE_ZONE_ENTRANCE_LIMIT_ALARM_ACTION_get();
  public final static native int BS2_MAX_ENTRANCE_LIMIT_PER_ZONE_get();
  public final static native int BS2_MAX_ACCESS_GROUP_ENTRANCE_LIMIT_PER_ENTRACE_LIMIT_get();
  public final static native int BS2_ENTRY_COUNT_FOR_ACCESS_GROUP_ENTRANCE_LIMIT_get();
  public final static native int BS2_OTHERWISE_ACCESS_GROUP_ID_get();
  public final static native int BS2_ENTRY_COUNT_NO_LIMIT_get();
  public final static native int BS2_DEVICE_ZONE_ENTRANCE_LIMIT_SOFT_get();
  public final static native int BS2_DEVICE_ZONE_ENTRANCE_LIMIT_HARD_get();
  public final static native int BS2_DEVICE_ZONE_ENTRANCE_LIMIT_DISCONNECTED_ACTION_SOFT_get();
  public final static native int BS2_DEVICE_ZONE_ENTRANCE_LIMIT_DISCONNECTED_ACTION_HARD_get();
  public final static native void BS2DeviceZoneEntranceLimitMemberInfo_readerID_set(long jarg1, BS2DeviceZoneEntranceLimitMemberInfo jarg1_, long jarg2);
  public final static native long BS2DeviceZoneEntranceLimitMemberInfo_readerID_get(long jarg1, BS2DeviceZoneEntranceLimitMemberInfo jarg1_);
  public final static native long new_BS2DeviceZoneEntranceLimitMemberInfo();
  public final static native void delete_BS2DeviceZoneEntranceLimitMemberInfo(long jarg1);
  public final static native void BS2DeviceZoneEntranceLimitMaster_name_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, String jarg2);
  public final static native String BS2DeviceZoneEntranceLimitMaster_name_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_type_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, short jarg2);
  public final static native short BS2DeviceZoneEntranceLimitMaster_type_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_reserved1_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, long jarg2);
  public final static native long BS2DeviceZoneEntranceLimitMaster_reserved1_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_entryLimitInterval_s_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, long jarg2);
  public final static native long BS2DeviceZoneEntranceLimitMaster_entryLimitInterval_s_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_numEntranceLimit_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, short jarg2);
  public final static native short BS2DeviceZoneEntranceLimitMaster_numEntranceLimit_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_numReaders_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, short jarg2);
  public final static native short BS2DeviceZoneEntranceLimitMaster_numReaders_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_numAlarm_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, short jarg2);
  public final static native short BS2DeviceZoneEntranceLimitMaster_numAlarm_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_numBypassGroups_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, short jarg2);
  public final static native short BS2DeviceZoneEntranceLimitMaster_numBypassGroups_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_maxEntry_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, long jarg2);
  public final static native long BS2DeviceZoneEntranceLimitMaster_maxEntry_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_periodStart_s_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, long jarg2);
  public final static native long BS2DeviceZoneEntranceLimitMaster_periodStart_s_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_periodEnd_s_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, long jarg2);
  public final static native long BS2DeviceZoneEntranceLimitMaster_periodEnd_s_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_readers_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, long jarg2, BS2DeviceZoneEntranceLimitMemberInfo jarg2_);
  public final static native long BS2DeviceZoneEntranceLimitMaster_readers_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_alarm_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2DeviceZoneEntranceLimitMaster_alarm_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_bypassGroupIDs_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, long jarg2);
  public final static native long BS2DeviceZoneEntranceLimitMaster_bypassGroupIDs_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMaster_reserved3_set(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_, long jarg2);
  public final static native long BS2DeviceZoneEntranceLimitMaster_reserved3_get(long jarg1, BS2DeviceZoneEntranceLimitMaster jarg1_);
  public final static native long new_BS2DeviceZoneEntranceLimitMaster();
  public final static native void delete_BS2DeviceZoneEntranceLimitMaster(long jarg1);
  public final static native void BS2DeviceZoneAGEntranceLimit_zoneID_set(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_, long jarg2);
  public final static native long BS2DeviceZoneAGEntranceLimit_zoneID_get(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native void BS2DeviceZoneAGEntranceLimit_numAGEntranceLimit_set(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_, int jarg2);
  public final static native int BS2DeviceZoneAGEntranceLimit_numAGEntranceLimit_get(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native void BS2DeviceZoneAGEntranceLimit_reserved1_set(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_, int jarg2);
  public final static native int BS2DeviceZoneAGEntranceLimit_reserved1_get(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native void BS2DeviceZoneAGEntranceLimit_periodStart_s_set(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_, long jarg2);
  public final static native long BS2DeviceZoneAGEntranceLimit_periodStart_s_get(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native void BS2DeviceZoneAGEntranceLimit_periodEnd_s_set(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_, long jarg2);
  public final static native long BS2DeviceZoneAGEntranceLimit_periodEnd_s_get(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native void BS2DeviceZoneAGEntranceLimit_numEntry_set(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_, long jarg2);
  public final static native long BS2DeviceZoneAGEntranceLimit_numEntry_get(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native void BS2DeviceZoneAGEntranceLimit_maxEntry_set(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_, long jarg2);
  public final static native long BS2DeviceZoneAGEntranceLimit_maxEntry_get(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native void BS2DeviceZoneAGEntranceLimit_accessGroupID_set(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_, long jarg2);
  public final static native long BS2DeviceZoneAGEntranceLimit_accessGroupID_get(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native long new_BS2DeviceZoneAGEntranceLimit();
  public final static native void delete_BS2DeviceZoneAGEntranceLimit(long jarg1);
  public final static native void BS2DeviceZoneEntranceLimitMember_masterPort_set(long jarg1, BS2DeviceZoneEntranceLimitMember jarg1_, int jarg2);
  public final static native int BS2DeviceZoneEntranceLimitMember_masterPort_get(long jarg1, BS2DeviceZoneEntranceLimitMember jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMember_actionInDisconnect_set(long jarg1, BS2DeviceZoneEntranceLimitMember jarg1_, short jarg2);
  public final static native short BS2DeviceZoneEntranceLimitMember_actionInDisconnect_get(long jarg1, BS2DeviceZoneEntranceLimitMember jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMember_reserved1_set(long jarg1, BS2DeviceZoneEntranceLimitMember jarg1_, long jarg2);
  public final static native long BS2DeviceZoneEntranceLimitMember_reserved1_get(long jarg1, BS2DeviceZoneEntranceLimitMember jarg1_);
  public final static native void BS2DeviceZoneEntranceLimitMember_masterIP_set(long jarg1, BS2DeviceZoneEntranceLimitMember jarg1_, String jarg2);
  public final static native String BS2DeviceZoneEntranceLimitMember_masterIP_get(long jarg1, BS2DeviceZoneEntranceLimitMember jarg1_);
  public final static native long new_BS2DeviceZoneEntranceLimitMember();
  public final static native void delete_BS2DeviceZoneEntranceLimitMember(long jarg1);
  public final static native int BS2_MAX_READERS_PER_DEVICE_ZONE_FIRE_ALARM_get();
  public final static native int BS2_MAX_DEVICE_ZONE_FIRE_ALARM_ALARM_ACTION_get();
  public final static native int BS2_MAX_FIRE_SENSORS_PER_DEVICE_ZONE_FIRE_ALARM_MEMBER_get();
  public final static native int BS2_MAX_DOORS_PER_DEVICE_ZONE_FIRE_ALARM_MEMBER_get();
  public final static native int BS2_DEVICE_ZONE_ALARMED_DISALARM_get();
  public final static native int BS2_DEVICE_ZONE_ALARMED_ALARM_get();
  public final static native int BS2_DEVICE_ZONE_ALARMED_SELF_get();
  public final static native void BS2DeviceZoneFireSensor_deviceID_set(long jarg1, BS2DeviceZoneFireSensor jarg1_, long jarg2);
  public final static native long BS2DeviceZoneFireSensor_deviceID_get(long jarg1, BS2DeviceZoneFireSensor jarg1_);
  public final static native void BS2DeviceZoneFireSensor_port_set(long jarg1, BS2DeviceZoneFireSensor jarg1_, short jarg2);
  public final static native short BS2DeviceZoneFireSensor_port_get(long jarg1, BS2DeviceZoneFireSensor jarg1_);
  public final static native void BS2DeviceZoneFireSensor_switchType_set(long jarg1, BS2DeviceZoneFireSensor jarg1_, short jarg2);
  public final static native short BS2DeviceZoneFireSensor_switchType_get(long jarg1, BS2DeviceZoneFireSensor jarg1_);
  public final static native void BS2DeviceZoneFireSensor_duration_set(long jarg1, BS2DeviceZoneFireSensor jarg1_, int jarg2);
  public final static native int BS2DeviceZoneFireSensor_duration_get(long jarg1, BS2DeviceZoneFireSensor jarg1_);
  public final static native long new_BS2DeviceZoneFireSensor();
  public final static native void delete_BS2DeviceZoneFireSensor(long jarg1);
  public final static native void BS2DeviceZoneFireAlarmMemberInfo_readerID_set(long jarg1, BS2DeviceZoneFireAlarmMemberInfo jarg1_, long jarg2);
  public final static native long BS2DeviceZoneFireAlarmMemberInfo_readerID_get(long jarg1, BS2DeviceZoneFireAlarmMemberInfo jarg1_);
  public final static native long new_BS2DeviceZoneFireAlarmMemberInfo();
  public final static native void delete_BS2DeviceZoneFireAlarmMemberInfo(long jarg1);
  public final static native void BS2DeviceZoneFireAlarmMaster_name_set(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_, String jarg2);
  public final static native String BS2DeviceZoneFireAlarmMaster_name_get(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMaster_numReaders_set(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_, short jarg2);
  public final static native short BS2DeviceZoneFireAlarmMaster_numReaders_get(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMaster_numAlarm_set(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_, short jarg2);
  public final static native short BS2DeviceZoneFireAlarmMaster_numAlarm_get(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMaster_reserved1_set(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_, long jarg2);
  public final static native long BS2DeviceZoneFireAlarmMaster_reserved1_get(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMaster_readers_set(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_, long jarg2, BS2DeviceZoneFireAlarmMemberInfo jarg2_);
  public final static native long BS2DeviceZoneFireAlarmMaster_readers_get(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMaster_alarm_set(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2DeviceZoneFireAlarmMaster_alarm_get(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMaster_reserved2_set(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_, long jarg2);
  public final static native long BS2DeviceZoneFireAlarmMaster_reserved2_get(long jarg1, BS2DeviceZoneFireAlarmMaster jarg1_);
  public final static native long new_BS2DeviceZoneFireAlarmMaster();
  public final static native void delete_BS2DeviceZoneFireAlarmMaster(long jarg1);
  public final static native void BS2DeviceZoneFireAlarmMember_masterPort_set(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_, int jarg2);
  public final static native int BS2DeviceZoneFireAlarmMember_masterPort_get(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMember_reserved1_set(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_, long jarg2);
  public final static native long BS2DeviceZoneFireAlarmMember_reserved1_get(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMember_masterIP_set(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_, String jarg2);
  public final static native String BS2DeviceZoneFireAlarmMember_masterIP_get(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMember_numSensors_set(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_, short jarg2);
  public final static native short BS2DeviceZoneFireAlarmMember_numSensors_get(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMember_numDoors_set(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_, short jarg2);
  public final static native short BS2DeviceZoneFireAlarmMember_numDoors_get(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMember_reserved2_set(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_, long jarg2);
  public final static native long BS2DeviceZoneFireAlarmMember_reserved2_get(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMember_sensor_set(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_, long jarg2, BS2DeviceZoneFireSensor jarg2_);
  public final static native long BS2DeviceZoneFireAlarmMember_sensor_get(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMember_doorIDs_set(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_, long jarg2);
  public final static native long BS2DeviceZoneFireAlarmMember_doorIDs_get(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMember_liftIDs_set(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_, long jarg2);
  public final static native long BS2DeviceZoneFireAlarmMember_liftIDs_get(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_);
  public final static native void BS2DeviceZoneFireAlarmMember_reserved3_set(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_, long jarg2);
  public final static native long BS2DeviceZoneFireAlarmMember_reserved3_get(long jarg1, BS2DeviceZoneFireAlarmMember jarg1_);
  public final static native long new_BS2DeviceZoneFireAlarmMember();
  public final static native void delete_BS2DeviceZoneFireAlarmMember(long jarg1);
  public final static native void BS2DeviceZone_zoneID_set(long jarg1, BS2DeviceZone jarg1_, long jarg2);
  public final static native long BS2DeviceZone_zoneID_get(long jarg1, BS2DeviceZone jarg1_);
  public final static native void BS2DeviceZone_zoneType_set(long jarg1, BS2DeviceZone jarg1_, short jarg2);
  public final static native short BS2DeviceZone_zoneType_get(long jarg1, BS2DeviceZone jarg1_);
  public final static native void BS2DeviceZone_nodeType_set(long jarg1, BS2DeviceZone jarg1_, short jarg2);
  public final static native short BS2DeviceZone_nodeType_get(long jarg1, BS2DeviceZone jarg1_);
  public final static native void BS2DeviceZone_enable_set(long jarg1, BS2DeviceZone jarg1_, boolean jarg2);
  public final static native boolean BS2DeviceZone_enable_get(long jarg1, BS2DeviceZone jarg1_);
  public final static native void BS2DeviceZone_reserved_set(long jarg1, BS2DeviceZone jarg1_, long jarg2);
  public final static native long BS2DeviceZone_reserved_get(long jarg1, BS2DeviceZone jarg1_);
  public final static native void BS2DeviceZone_entranceLimitMaster_set(long jarg1, BS2DeviceZone jarg1_, long jarg2, BS2DeviceZoneEntranceLimitMaster jarg2_);
  public final static native long BS2DeviceZone_entranceLimitMaster_get(long jarg1, BS2DeviceZone jarg1_);
  public final static native void BS2DeviceZone_entranceLimitMember_set(long jarg1, BS2DeviceZone jarg1_, long jarg2, BS2DeviceZoneEntranceLimitMember jarg2_);
  public final static native long BS2DeviceZone_entranceLimitMember_get(long jarg1, BS2DeviceZone jarg1_);
  public final static native void BS2DeviceZone_fireAlarmMaster_set(long jarg1, BS2DeviceZone jarg1_, long jarg2, BS2DeviceZoneFireAlarmMaster jarg2_);
  public final static native long BS2DeviceZone_fireAlarmMaster_get(long jarg1, BS2DeviceZone jarg1_);
  public final static native void BS2DeviceZone_fireAlarmMember_set(long jarg1, BS2DeviceZone jarg1_, long jarg2, BS2DeviceZoneFireAlarmMember jarg2_);
  public final static native long BS2DeviceZone_fireAlarmMember_get(long jarg1, BS2DeviceZone jarg1_);
  public final static native long new_BS2DeviceZone();
  public final static native void delete_BS2DeviceZone(long jarg1);
  public final static native void BS2DeviceZoneConfig_numOfZones_set(long jarg1, BS2DeviceZoneConfig jarg1_, int jarg2);
  public final static native int BS2DeviceZoneConfig_numOfZones_get(long jarg1, BS2DeviceZoneConfig jarg1_);
  public final static native void BS2DeviceZoneConfig_zone_set(long jarg1, BS2DeviceZoneConfig jarg1_, long jarg2, BS2DeviceZone jarg2_);
  public final static native long BS2DeviceZoneConfig_zone_get(long jarg1, BS2DeviceZoneConfig jarg1_);
  public final static native long new_BS2DeviceZoneConfig();
  public final static native void delete_BS2DeviceZoneConfig(long jarg1);
  public final static native void BS2DeviceZoneMasterConfig_enable_set(long jarg1, BS2DeviceZoneMasterConfig jarg1_, boolean jarg2);
  public final static native boolean BS2DeviceZoneMasterConfig_enable_get(long jarg1, BS2DeviceZoneMasterConfig jarg1_);
  public final static native void BS2DeviceZoneMasterConfig_reserved1_set(long jarg1, BS2DeviceZoneMasterConfig jarg1_, long jarg2);
  public final static native long BS2DeviceZoneMasterConfig_reserved1_get(long jarg1, BS2DeviceZoneMasterConfig jarg1_);
  public final static native void BS2DeviceZoneMasterConfig_listenPort_set(long jarg1, BS2DeviceZoneMasterConfig jarg1_, int jarg2);
  public final static native int BS2DeviceZoneMasterConfig_listenPort_get(long jarg1, BS2DeviceZoneMasterConfig jarg1_);
  public final static native void BS2DeviceZoneMasterConfig_reserved_set(long jarg1, BS2DeviceZoneMasterConfig jarg1_, long jarg2);
  public final static native long BS2DeviceZoneMasterConfig_reserved_get(long jarg1, BS2DeviceZoneMasterConfig jarg1_);
  public final static native long new_BS2DeviceZoneMasterConfig();
  public final static native void delete_BS2DeviceZoneMasterConfig(long jarg1);
  public final static native int BS2_BG_LOGO_get();
  public final static native int BS2_BG_NOTICE_get();
  public final static native int BS2_BG_SLIDE_get();
  public final static native int BS2_BG_PDF_get();
  public final static native int BS2_BG_THEME_01_get();
  public final static native int BS2_BG_THEME_02_get();
  public final static native int BS2_BG_THEME_03_get();
  public final static native int BS2_BG_THEME_04_get();
  public final static native int BS2_VOLUME_DEFAULT_get();
  public final static native int BS2_TIMEOUT_INDEFINITE_get();
  public final static native int BS2_BACKLIGHT_TIMEOUT_DEFAULT_get();
  public final static native int BS2_MENU_TIMEOUT_DEFAULT_get();
  public final static native int BS2_MSG_TIMEOUT_MIN_get();
  public final static native int BS2_MSG_TIMEOUT_MAX_get();
  public final static native int BS2_MSG_TIMEOUT_DEFAULT_get();
  public final static native int BS2_DATE_FORMAT_YMD_get();
  public final static native int BS2_DATE_FORMAT_MDY_get();
  public final static native int BS2_DATE_FORMAT_DMY_get();
  public final static native int BS2_NOT_USE_get();
  public final static native int BS2_USE_get();
  public final static native int BS2_TIME_FORMAT_12_HOUR_get();
  public final static native int BS2_TIME_FORMAT_24_HOUR_get();
  public final static native int BS2_HOME_INTERPHONE_get();
  public final static native int BS2_HOME_SHORTCUT1_get();
  public final static native int BS2_HOME_SHORTCUT2_get();
  public final static native int BS2_HOME_SHORTCUT3_get();
  public final static native int BS2_HOME_SHORTCUT4_get();
  public final static native int BS2_SC_MENU_get();
  public final static native int BS2_SC_TNA_get();
  public final static native int BS2_SC_LANGUAGE_get();
  public final static native int BS2_SC_ID_get();
  public final static native int BS2_SC_FINGERPRINT_get();
  public final static native int BS2_SC_INTERPHONE_get();
  public final static native int BS2_SC_ARM_get();
  public final static native int BS2_SC_VOLUME_get();
  public final static native int BS2_MAX_SHORTCUT_HOME_get();
  public final static native int BS2_LANGUAGE_KOREAN_get();
  public final static native int BS2_LANGUAGE_ENGLISH_get();
  public final static native int BS2_LANGUAGE_CUSTOM_get();
  public final static native int BS2_MAX_LANGUAGE_get();
  public final static native void BS2DisplayConfig_language_set(long jarg1, BS2DisplayConfig jarg1_, long jarg2);
  public final static native long BS2DisplayConfig_language_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_background_set(long jarg1, BS2DisplayConfig jarg1_, short jarg2);
  public final static native short BS2DisplayConfig_background_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_volume_set(long jarg1, BS2DisplayConfig jarg1_, short jarg2);
  public final static native short BS2DisplayConfig_volume_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_bgTheme_set(long jarg1, BS2DisplayConfig jarg1_, short jarg2);
  public final static native short BS2DisplayConfig_bgTheme_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_dateFormat_set(long jarg1, BS2DisplayConfig jarg1_, short jarg2);
  public final static native short BS2DisplayConfig_dateFormat_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_menuTimeout_set(long jarg1, BS2DisplayConfig jarg1_, int jarg2);
  public final static native int BS2DisplayConfig_menuTimeout_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_msgTimeout_set(long jarg1, BS2DisplayConfig jarg1_, int jarg2);
  public final static native int BS2DisplayConfig_msgTimeout_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_backlightTimeout_set(long jarg1, BS2DisplayConfig jarg1_, int jarg2);
  public final static native int BS2DisplayConfig_backlightTimeout_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_displayDateTime_set(long jarg1, BS2DisplayConfig jarg1_, boolean jarg2);
  public final static native boolean BS2DisplayConfig_displayDateTime_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_useVoice_set(long jarg1, BS2DisplayConfig jarg1_, boolean jarg2);
  public final static native boolean BS2DisplayConfig_useVoice_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_timeFormat_set(long jarg1, BS2DisplayConfig jarg1_, short jarg2);
  public final static native short BS2DisplayConfig_timeFormat_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_homeFormation_set(long jarg1, BS2DisplayConfig jarg1_, short jarg2);
  public final static native short BS2DisplayConfig_homeFormation_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_useUserPhrase_set(long jarg1, BS2DisplayConfig jarg1_, boolean jarg2);
  public final static native boolean BS2DisplayConfig_useUserPhrase_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_reserved_set(long jarg1, BS2DisplayConfig jarg1_, long jarg2);
  public final static native long BS2DisplayConfig_reserved_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_shortcutHome_set(long jarg1, BS2DisplayConfig jarg1_, long jarg2);
  public final static native long BS2DisplayConfig_shortcutHome_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_tnaIcon_set(long jarg1, BS2DisplayConfig jarg1_, long jarg2);
  public final static native long BS2DisplayConfig_tnaIcon_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native void BS2DisplayConfig_reserved1_set(long jarg1, BS2DisplayConfig jarg1_, long jarg2);
  public final static native long BS2DisplayConfig_reserved1_get(long jarg1, BS2DisplayConfig jarg1_);
  public final static native long new_BS2DisplayConfig();
  public final static native void delete_BS2DisplayConfig(long jarg1);
  public final static native int BS2_MAX_DST_SCHEDULE_get();
  public final static native void BS2WeekTime_year_set(long jarg1, BS2WeekTime jarg1_, int jarg2);
  public final static native int BS2WeekTime_year_get(long jarg1, BS2WeekTime jarg1_);
  public final static native void BS2WeekTime_month_set(long jarg1, BS2WeekTime jarg1_, short jarg2);
  public final static native short BS2WeekTime_month_get(long jarg1, BS2WeekTime jarg1_);
  public final static native void BS2WeekTime_ordinal_set(long jarg1, BS2WeekTime jarg1_, byte jarg2);
  public final static native byte BS2WeekTime_ordinal_get(long jarg1, BS2WeekTime jarg1_);
  public final static native void BS2WeekTime_weekDay_set(long jarg1, BS2WeekTime jarg1_, short jarg2);
  public final static native short BS2WeekTime_weekDay_get(long jarg1, BS2WeekTime jarg1_);
  public final static native void BS2WeekTime_hour_set(long jarg1, BS2WeekTime jarg1_, short jarg2);
  public final static native short BS2WeekTime_hour_get(long jarg1, BS2WeekTime jarg1_);
  public final static native void BS2WeekTime_minute_set(long jarg1, BS2WeekTime jarg1_, short jarg2);
  public final static native short BS2WeekTime_minute_get(long jarg1, BS2WeekTime jarg1_);
  public final static native void BS2WeekTime_second_set(long jarg1, BS2WeekTime jarg1_, short jarg2);
  public final static native short BS2WeekTime_second_get(long jarg1, BS2WeekTime jarg1_);
  public final static native long new_BS2WeekTime();
  public final static native void delete_BS2WeekTime(long jarg1);
  public final static native void BS2DstSchedule_startTime_set(long jarg1, BS2DstSchedule jarg1_, long jarg2, BS2WeekTime jarg2_);
  public final static native long BS2DstSchedule_startTime_get(long jarg1, BS2DstSchedule jarg1_);
  public final static native void BS2DstSchedule_endTime_set(long jarg1, BS2DstSchedule jarg1_, long jarg2, BS2WeekTime jarg2_);
  public final static native long BS2DstSchedule_endTime_get(long jarg1, BS2DstSchedule jarg1_);
  public final static native void BS2DstSchedule_timeOffset_set(long jarg1, BS2DstSchedule jarg1_, int jarg2);
  public final static native int BS2DstSchedule_timeOffset_get(long jarg1, BS2DstSchedule jarg1_);
  public final static native void BS2DstSchedule_reserved_set(long jarg1, BS2DstSchedule jarg1_, long jarg2);
  public final static native long BS2DstSchedule_reserved_get(long jarg1, BS2DstSchedule jarg1_);
  public final static native long new_BS2DstSchedule();
  public final static native void delete_BS2DstSchedule(long jarg1);
  public final static native void BS2DstConfig_numSchedules_set(long jarg1, BS2DstConfig jarg1_, short jarg2);
  public final static native short BS2DstConfig_numSchedules_get(long jarg1, BS2DstConfig jarg1_);
  public final static native void BS2DstConfig_reserved_set(long jarg1, BS2DstConfig jarg1_, long jarg2);
  public final static native long BS2DstConfig_reserved_get(long jarg1, BS2DstConfig jarg1_);
  public final static native void BS2DstConfig_schedules_set(long jarg1, BS2DstConfig jarg1_, long jarg2, BS2DstSchedule jarg2_);
  public final static native long BS2DstConfig_schedules_get(long jarg1, BS2DstConfig jarg1_);
  public final static native long new_BS2DstConfig();
  public final static native void delete_BS2DstConfig(long jarg1);
  public final static native int BS2_EVENT_MAX_IMAGE_CODE_COUNT_get();
  public final static native void BS2EventConfig_numImageEventFilter_set(long jarg1, BS2EventConfig jarg1_, long jarg2);
  public final static native long BS2EventConfig_numImageEventFilter_get(long jarg1, BS2EventConfig jarg1_);
  public final static native void BS2EventConfig_reserved_set(long jarg1, BS2EventConfig jarg1_, long jarg2);
  public final static native long BS2EventConfig_reserved_get(long jarg1, BS2EventConfig jarg1_);
  public final static native long new_BS2EventConfig();
  public final static native void delete_BS2EventConfig(long jarg1);
  public final static native int BS2_FACE_SECURITY_NORMAL_get();
  public final static native int BS2_FACE_SECURITY_SECURE_get();
  public final static native int BS2_FACE_SECURITY_MORE_SECURE_get();
  public final static native int BS2_FACE_SECURITY_DEFAULT_get();
  public final static native int BS2_FACE_ENROLL_TIMEOUT_MIN_get();
  public final static native int BS2_FACE_ENROLL_TIMEOUT_MAX_get();
  public final static native int BS2_FACE_ENROLL_TIMEOUT_DEFAULT_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_0_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_1_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_2_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_3_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_4_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_5_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_6_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_7_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_8_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_9_get();
  public final static native int BS2_FACE_ENROLL_THRESHOLD_DEFAULT_get();
  public final static native int BS2_FACE_LIGHT_CONDITION_INDOOR_get();
  public final static native int BS2_FACE_LIGHT_CONDITION_OUTDOOR_get();
  public final static native int BS2_FACE_LIGHT_CONDITION_AUTO_get();
  public final static native int BS2_FACE_LIGHT_CONDITION_DARK_get();
  public final static native int BS2_FACE_LIGHT_CONDITION_DEFAULT_get();
  public final static native int BS2_FACE_DETECT_SENSITIVITY_OFF_get();
  public final static native int BS2_FACE_DETECT_SENSITIVITY_LOW_get();
  public final static native int BS2_FACE_DETECT_SENSITIVITY_MIDDLE_get();
  public final static native int BS2_FACE_DETECT_SENSITIVITY_HIGH_get();
  public final static native int BS2_FACE_DETECT_SENSITIVITY_DEFAULT_get();
  public final static native int BS2_FACE_LFD_LEVEL_OFF_get();
  public final static native int BS2_FACE_LFD_LEVEL_LOW_get();
  public final static native int BS2_FACE_LFD_LEVEL_MIDDLE_get();
  public final static native int BS2_FACE_LFD_LEVEL_HIGH_get();
  public final static native int BS2_FACE_LFD_LEVEL_DEFAULT_get();
  public final static native void BS2FaceConfig_securityLevel_set(long jarg1, BS2FaceConfig jarg1_, short jarg2);
  public final static native short BS2FaceConfig_securityLevel_get(long jarg1, BS2FaceConfig jarg1_);
  public final static native void BS2FaceConfig_lightCondition_set(long jarg1, BS2FaceConfig jarg1_, short jarg2);
  public final static native short BS2FaceConfig_lightCondition_get(long jarg1, BS2FaceConfig jarg1_);
  public final static native void BS2FaceConfig_enrollThreshold_set(long jarg1, BS2FaceConfig jarg1_, short jarg2);
  public final static native short BS2FaceConfig_enrollThreshold_get(long jarg1, BS2FaceConfig jarg1_);
  public final static native void BS2FaceConfig_detectSensitivity_set(long jarg1, BS2FaceConfig jarg1_, short jarg2);
  public final static native short BS2FaceConfig_detectSensitivity_get(long jarg1, BS2FaceConfig jarg1_);
  public final static native void BS2FaceConfig_enrollTimeout_set(long jarg1, BS2FaceConfig jarg1_, int jarg2);
  public final static native int BS2FaceConfig_enrollTimeout_get(long jarg1, BS2FaceConfig jarg1_);
  public final static native void BS2FaceConfig_lfdLevel_set(long jarg1, BS2FaceConfig jarg1_, short jarg2);
  public final static native short BS2FaceConfig_lfdLevel_get(long jarg1, BS2FaceConfig jarg1_);
  public final static native void BS2FaceConfig_reserved_set(long jarg1, BS2FaceConfig jarg1_, short jarg2);
  public final static native short BS2FaceConfig_reserved_get(long jarg1, BS2FaceConfig jarg1_);
  public final static native void BS2FaceConfig_reserved2_set(long jarg1, BS2FaceConfig jarg1_, long jarg2);
  public final static native long BS2FaceConfig_reserved2_get(long jarg1, BS2FaceConfig jarg1_);
  public final static native long new_BS2FaceConfig();
  public final static native void delete_BS2FaceConfig(long jarg1);
  public final static native int BS2_MAC_ADDR_LEN_get();
  public final static native int BS2_MODEL_NAME_LEN_get();
  public final static native int BS2_FIRMWARE_REV_LEN_get();
  public final static native int BS2_BSCORE_REV_LEN_get();
  public final static native int BS2_KERNEL_REV_LEN_get();
  public final static native void Version_major_set(long jarg1, Version jarg1_, short jarg2);
  public final static native short Version_major_get(long jarg1, Version jarg1_);
  public final static native void Version_minor_set(long jarg1, Version jarg1_, short jarg2);
  public final static native short Version_minor_get(long jarg1, Version jarg1_);
  public final static native void Version_ext_set(long jarg1, Version jarg1_, short jarg2);
  public final static native short Version_ext_get(long jarg1, Version jarg1_);
  public final static native void Version_reserved_set(long jarg1, Version jarg1_, long jarg2);
  public final static native long Version_reserved_get(long jarg1, Version jarg1_);
  public final static native long new_Version();
  public final static native void delete_Version(long jarg1);
  public final static native void BS2FactoryConfig_deviceID_set(long jarg1, BS2FactoryConfig jarg1_, long jarg2);
  public final static native long BS2FactoryConfig_deviceID_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_macAddr_set(long jarg1, BS2FactoryConfig jarg1_, long jarg2);
  public final static native long BS2FactoryConfig_macAddr_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_reserved_set(long jarg1, BS2FactoryConfig jarg1_, long jarg2);
  public final static native long BS2FactoryConfig_reserved_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_modelName_set(long jarg1, BS2FactoryConfig jarg1_, String jarg2);
  public final static native String BS2FactoryConfig_modelName_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_boardVer_set(long jarg1, BS2FactoryConfig jarg1_, long jarg2, Version jarg2_);
  public final static native long BS2FactoryConfig_boardVer_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_kernelVer_set(long jarg1, BS2FactoryConfig jarg1_, long jarg2, Version jarg2_);
  public final static native long BS2FactoryConfig_kernelVer_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_bscoreVer_set(long jarg1, BS2FactoryConfig jarg1_, long jarg2, Version jarg2_);
  public final static native long BS2FactoryConfig_bscoreVer_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_firmwareVer_set(long jarg1, BS2FactoryConfig jarg1_, long jarg2, Version jarg2_);
  public final static native long BS2FactoryConfig_firmwareVer_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_kernelRev_set(long jarg1, BS2FactoryConfig jarg1_, String jarg2);
  public final static native String BS2FactoryConfig_kernelRev_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_bscoreRev_set(long jarg1, BS2FactoryConfig jarg1_, String jarg2);
  public final static native String BS2FactoryConfig_bscoreRev_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_firmwareRev_set(long jarg1, BS2FactoryConfig jarg1_, String jarg2);
  public final static native String BS2FactoryConfig_firmwareRev_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native void BS2FactoryConfig_reserved2_set(long jarg1, BS2FactoryConfig jarg1_, long jarg2);
  public final static native long BS2FactoryConfig_reserved2_get(long jarg1, BS2FactoryConfig jarg1_);
  public final static native long new_BS2FactoryConfig();
  public final static native void delete_BS2FactoryConfig(long jarg1);
  public final static native int BS2_FINGER_SECURITY_NORMAL_get();
  public final static native int BS2_FINGER_SECURITY_SECURE_get();
  public final static native int BS2_FINGER_SECURITY_MORE_SECURE_get();
  public final static native int BS2_FINGER_SECURITY_DEFAULT_get();
  public final static native int BS2_FINGER_SCAN_TIMEOUT_MIN_get();
  public final static native int BS2_FINGER_SCAN_TIMEOUT_MAX_get();
  public final static native int BS2_FINGER_SCAN_TIMEOUT_DEFAULT_get();
  public final static native int BS2_FINGER_FAST_MODE_AUTO_get();
  public final static native int BS2_FINGER_FAST_MODE_NORMAL_get();
  public final static native int BS2_FINGER_FAST_MODE_FASTER_get();
  public final static native int BS2_FINGER_FAST_MODE_FASTEST_get();
  public final static native int BS2_FINGER_FAST_MODE_DEFAULT_get();
  public final static native int BS2_FINGER_SENSOR_LEAST_SENSITIVE_get();
  public final static native int BS2_FINGER_SENSOR_SENSITIVE1_get();
  public final static native int BS2_FINGER_SENSOR_SENSITIVE2_get();
  public final static native int BS2_FINGER_SENSOR_SENSITIVE3_get();
  public final static native int BS2_FINGER_SENSOR_SENSITIVE4_get();
  public final static native int BS2_FINGER_SENSOR_SENSITIVE5_get();
  public final static native int BS2_FINGER_SENSOR_SENSITIVE6_get();
  public final static native int BS2_FINGER_SENSOR_MOST_SENSITIVE_get();
  public final static native int BS2_FINGER_SENSOR_SENSITIVITY_DEFAULT_get();
  public final static native int BS2_FINGER_TEMPLATE_FORMAT_UNKNOWN_get();
  public final static native int BS2_FINGER_TEMPLATE_FORMAT_SUPREMA_get();
  public final static native int BS2_FINGER_TEMPLATE_FORMAT_ISO_get();
  public final static native int BS2_FINGER_TEMPLATE_FORMAT_ANSI_get();
  public final static native int BS2_FINGER_TEMPLATE_FORMAT_DEFAULT_get();
  public final static native int BS2_FINGER_SENSOR_MODE_ALWAYS_ON_get();
  public final static native int BS2_FINGER_SENSOR_MODE_PROXIMITY_get();
  public final static native int BS2_FINGER_TEMPLATE_QUALITY_LOW_get();
  public final static native int BS2_FINGER_TEMPLATE_QUALITY_STANDARD_get();
  public final static native int BS2_FINGER_TEMPLATE_QUALITY_HIGH_get();
  public final static native int BS2_FINGER_TEMPLATE_QUALITY_HIGHEST_get();
  public final static native int BS2_FINGER_LFD_LEVEL_OFF_get();
  public final static native int BS2_FINGER_LFD_LEVEL_LOW_get();
  public final static native int BS2_FINGER_LFD_LEVEL_MIDDLE_get();
  public final static native int BS2_FINGER_LFD_LEVEL_HIGH_get();
  public final static native int BS2_FINGER_LFD_LEVEL_DEFAULT_get();
  public final static native void BS2FingerprintConfig_securityLevel_set(long jarg1, BS2FingerprintConfig jarg1_, short jarg2);
  public final static native short BS2FingerprintConfig_securityLevel_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_fastMode_set(long jarg1, BS2FingerprintConfig jarg1_, short jarg2);
  public final static native short BS2FingerprintConfig_fastMode_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_sensitivity_set(long jarg1, BS2FingerprintConfig jarg1_, short jarg2);
  public final static native short BS2FingerprintConfig_sensitivity_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_sensorMode_set(long jarg1, BS2FingerprintConfig jarg1_, short jarg2);
  public final static native short BS2FingerprintConfig_sensorMode_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_templateFormat_set(long jarg1, BS2FingerprintConfig jarg1_, short jarg2);
  public final static native short BS2FingerprintConfig_templateFormat_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_reserved_set(long jarg1, BS2FingerprintConfig jarg1_, short jarg2);
  public final static native short BS2FingerprintConfig_reserved_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_scanTimeout_set(long jarg1, BS2FingerprintConfig jarg1_, int jarg2);
  public final static native int BS2FingerprintConfig_scanTimeout_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_successiveScan_set(long jarg1, BS2FingerprintConfig jarg1_, boolean jarg2);
  public final static native boolean BS2FingerprintConfig_successiveScan_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_advancedEnrollment_set(long jarg1, BS2FingerprintConfig jarg1_, boolean jarg2);
  public final static native boolean BS2FingerprintConfig_advancedEnrollment_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_showImage_set(long jarg1, BS2FingerprintConfig jarg1_, boolean jarg2);
  public final static native boolean BS2FingerprintConfig_showImage_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_lfdLevel_set(long jarg1, BS2FingerprintConfig jarg1_, short jarg2);
  public final static native short BS2FingerprintConfig_lfdLevel_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native void BS2FingerprintConfig_reserved3_set(long jarg1, BS2FingerprintConfig jarg1_, long jarg2);
  public final static native long BS2FingerprintConfig_reserved3_get(long jarg1, BS2FingerprintConfig jarg1_);
  public final static native long new_BS2FingerprintConfig();
  public final static native void delete_BS2FingerprintConfig(long jarg1);
  public final static native int BS2_MAX_INPUT_NUM_get();
  public final static native int BS2_INPUT_TYPE_NORMAL_get();
  public final static native int BS2_INPUT_TYPE_SUPERVISERD_get();
  public final static native void BS2SVInputRange_minValue_set(long jarg1, BS2SVInputRange jarg1_, int jarg2);
  public final static native int BS2SVInputRange_minValue_get(long jarg1, BS2SVInputRange jarg1_);
  public final static native void BS2SVInputRange_maxValue_set(long jarg1, BS2SVInputRange jarg1_, int jarg2);
  public final static native int BS2SVInputRange_maxValue_get(long jarg1, BS2SVInputRange jarg1_);
  public final static native long new_BS2SVInputRange();
  public final static native void delete_BS2SVInputRange(long jarg1);
  public final static native void BS2SupervisedInputConfig_shortInput_set(long jarg1, BS2SupervisedInputConfig jarg1_, long jarg2, BS2SVInputRange jarg2_);
  public final static native long BS2SupervisedInputConfig_shortInput_get(long jarg1, BS2SupervisedInputConfig jarg1_);
  public final static native void BS2SupervisedInputConfig_openInput_set(long jarg1, BS2SupervisedInputConfig jarg1_, long jarg2, BS2SVInputRange jarg2_);
  public final static native long BS2SupervisedInputConfig_openInput_get(long jarg1, BS2SupervisedInputConfig jarg1_);
  public final static native void BS2SupervisedInputConfig_onInput_set(long jarg1, BS2SupervisedInputConfig jarg1_, long jarg2, BS2SVInputRange jarg2_);
  public final static native long BS2SupervisedInputConfig_onInput_get(long jarg1, BS2SupervisedInputConfig jarg1_);
  public final static native void BS2SupervisedInputConfig_offInput_set(long jarg1, BS2SupervisedInputConfig jarg1_, long jarg2, BS2SVInputRange jarg2_);
  public final static native long BS2SupervisedInputConfig_offInput_get(long jarg1, BS2SupervisedInputConfig jarg1_);
  public final static native long new_BS2SupervisedInputConfig();
  public final static native void delete_BS2SupervisedInputConfig(long jarg1);
  public final static native int SUPERVISED_REG_1K_get();
  public final static native int SUPERVISED_REG_2_2K_get();
  public final static native int SUPERVISED_REG_4_7K_get();
  public final static native int SUPERVISED_REG_10K_get();
  public final static native int SUPERVISED_REG_CUSTOM_get();
  public final static native void BS2InputConfig_numInputs_set(long jarg1, BS2InputConfig jarg1_, short jarg2);
  public final static native short BS2InputConfig_numInputs_get(long jarg1, BS2InputConfig jarg1_);
  public final static native void BS2InputConfig_numSupervised_set(long jarg1, BS2InputConfig jarg1_, short jarg2);
  public final static native short BS2InputConfig_numSupervised_get(long jarg1, BS2InputConfig jarg1_);
  public final static native void BS2InputConfig_reseved_set(long jarg1, BS2InputConfig jarg1_, int jarg2);
  public final static native int BS2InputConfig_reseved_get(long jarg1, BS2InputConfig jarg1_);
  public final static native long new_BS2InputConfig();
  public final static native void delete_BS2InputConfig(long jarg1);
  public final static native int BS2_CONNECTION_MODE_SERVER_TO_DEVICE_get();
  public final static native int BS2_CONNECTION_MODE_DEVICE_TO_SERVER_get();
  public final static native int BS2_CONNECTION_MODE_DEFAULT_get();
  public final static native int BS2_TCP_MTU_SIZE_MIN_get();
  public final static native int BS2_TCP_MTU_SIZE_MAX_get();
  public final static native int BS2_TCP_MTU_SIZE_DEFAULT_get();
  public final static native int BS2_TCP_SSL_SERVER_PORT_DEFAULT_get();
  public final static native int BS2_TCP_SERVER_PORT_DEFAULT_get();
  public final static native int BS2_TCP_DEVICE_PORT_DEFAULT_get();
  public final static native int BS2_UDP_BROADCAST_PORT_DEFAULT_get();
  public final static native int BS2_TCP_DEVICE_ZONE_MASTER_PORT_DEFAULT_get();
  public final static native String BS2_INVAILD_IP_ADDRESS_get();
  public final static native int BS2_TCP_BASEBAND_10BASE_T_get();
  public final static native int BS2_TCP_BASEBAND_100BASE_T_get();
  public final static native void BS2IpConfig_connectionMode_set(long jarg1, BS2IpConfig jarg1_, short jarg2);
  public final static native short BS2IpConfig_connectionMode_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_useDHCP_set(long jarg1, BS2IpConfig jarg1_, boolean jarg2);
  public final static native boolean BS2IpConfig_useDHCP_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_useDNS_set(long jarg1, BS2IpConfig jarg1_, boolean jarg2);
  public final static native boolean BS2IpConfig_useDNS_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_reserved_set(long jarg1, BS2IpConfig jarg1_, long jarg2);
  public final static native long BS2IpConfig_reserved_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_ipAddress_set(long jarg1, BS2IpConfig jarg1_, String jarg2);
  public final static native String BS2IpConfig_ipAddress_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_gateway_set(long jarg1, BS2IpConfig jarg1_, String jarg2);
  public final static native String BS2IpConfig_gateway_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_subnetMask_set(long jarg1, BS2IpConfig jarg1_, String jarg2);
  public final static native String BS2IpConfig_subnetMask_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_serverAddr_set(long jarg1, BS2IpConfig jarg1_, String jarg2);
  public final static native String BS2IpConfig_serverAddr_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_port_set(long jarg1, BS2IpConfig jarg1_, int jarg2);
  public final static native int BS2IpConfig_port_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_serverPort_set(long jarg1, BS2IpConfig jarg1_, int jarg2);
  public final static native int BS2IpConfig_serverPort_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_mtuSize_set(long jarg1, BS2IpConfig jarg1_, int jarg2);
  public final static native int BS2IpConfig_mtuSize_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_baseband_set(long jarg1, BS2IpConfig jarg1_, short jarg2);
  public final static native short BS2IpConfig_baseband_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_reserved2_set(long jarg1, BS2IpConfig jarg1_, long jarg2);
  public final static native long BS2IpConfig_reserved2_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_sslServerPort_set(long jarg1, BS2IpConfig jarg1_, int jarg2);
  public final static native int BS2IpConfig_sslServerPort_get(long jarg1, BS2IpConfig jarg1_);
  public final static native void BS2IpConfig_reserved3_set(long jarg1, BS2IpConfig jarg1_, long jarg2);
  public final static native long BS2IpConfig_reserved3_get(long jarg1, BS2IpConfig jarg1_);
  public final static native long new_BS2IpConfig();
  public final static native void delete_BS2IpConfig(long jarg1);
  public final static native void BS2IpConfigExt_dnsAddr_set(long jarg1, BS2IpConfigExt jarg1_, String jarg2);
  public final static native String BS2IpConfigExt_dnsAddr_get(long jarg1, BS2IpConfigExt jarg1_);
  public final static native void BS2IpConfigExt_serverUrl_set(long jarg1, BS2IpConfigExt jarg1_, String jarg2);
  public final static native String BS2IpConfigExt_serverUrl_get(long jarg1, BS2IpConfigExt jarg1_);
  public final static native void BS2IpConfigExt_reserved_set(long jarg1, BS2IpConfigExt jarg1_, long jarg2);
  public final static native long BS2IpConfigExt_reserved_get(long jarg1, BS2IpConfigExt jarg1_);
  public final static native long new_BS2IpConfigExt();
  public final static native void delete_BS2IpConfigExt(long jarg1);
  public final static native int BS2_RS485_MAX_CHANNELS_get();
  public final static native int BS2_RS485_MAX_CHANNELS_EX_get();
  public final static native int BS2_RS485_MODE_DISABLED_get();
  public final static native int BS2_RS485_MODE_MASTER_get();
  public final static native int BS2_RS485_MODE_SLAVE_get();
  public final static native int BS2_RS485_MODE_STANDALONE_get();
  public final static native int BS2_RS485_MODE_DEFAULT_get();
  public final static native void BS2Rs485Config_mode_set(long jarg1, BS2Rs485Config jarg1_, short jarg2);
  public final static native short BS2Rs485Config_mode_get(long jarg1, BS2Rs485Config jarg1_);
  public final static native void BS2Rs485Config_numOfChannels_set(long jarg1, BS2Rs485Config jarg1_, short jarg2);
  public final static native short BS2Rs485Config_numOfChannels_get(long jarg1, BS2Rs485Config jarg1_);
  public final static native void BS2Rs485Config_reserved_set(long jarg1, BS2Rs485Config jarg1_, long jarg2);
  public final static native long BS2Rs485Config_reserved_get(long jarg1, BS2Rs485Config jarg1_);
  public final static native void BS2Rs485Config_reserved1_set(long jarg1, BS2Rs485Config jarg1_, long jarg2);
  public final static native long BS2Rs485Config_reserved1_get(long jarg1, BS2Rs485Config jarg1_);
  public final static native void BS2Rs485Config_channels_set(long jarg1, BS2Rs485Config jarg1_, long jarg2, BS2Rs485Channel jarg2_);
  public final static native long BS2Rs485Config_channels_get(long jarg1, BS2Rs485Config jarg1_);
  public final static native long new_BS2Rs485Config();
  public final static native void delete_BS2Rs485Config(long jarg1);
  public final static native void BS2Rs485ConfigEX_mode_set(long jarg1, BS2Rs485ConfigEX jarg1_, long jarg2);
  public final static native long BS2Rs485ConfigEX_mode_get(long jarg1, BS2Rs485ConfigEX jarg1_);
  public final static native void BS2Rs485ConfigEX_numOfChannels_set(long jarg1, BS2Rs485ConfigEX jarg1_, int jarg2);
  public final static native int BS2Rs485ConfigEX_numOfChannels_get(long jarg1, BS2Rs485ConfigEX jarg1_);
  public final static native void BS2Rs485ConfigEX_reserved_set(long jarg1, BS2Rs485ConfigEX jarg1_, long jarg2);
  public final static native long BS2Rs485ConfigEX_reserved_get(long jarg1, BS2Rs485ConfigEX jarg1_);
  public final static native void BS2Rs485ConfigEX_reserved1_set(long jarg1, BS2Rs485ConfigEX jarg1_, long jarg2);
  public final static native long BS2Rs485ConfigEX_reserved1_get(long jarg1, BS2Rs485ConfigEX jarg1_);
  public final static native void BS2Rs485ConfigEX_channels_set(long jarg1, BS2Rs485ConfigEX jarg1_, long jarg2, BS2Rs485ChannelEX jarg2_);
  public final static native long BS2Rs485ConfigEX_channels_get(long jarg1, BS2Rs485ConfigEX jarg1_);
  public final static native long new_BS2Rs485ConfigEX();
  public final static native void delete_BS2Rs485ConfigEX(long jarg1);
  public final static native int BS2_DEVICE_STATUS_NORMAL_get();
  public final static native int BS2_DEVICE_STATUS_LOCKED_get();
  public final static native int BS2_DEVICE_STATUS_RTC_ERROR_get();
  public final static native int BS2_DEVICE_STATUS_WAITING_INPUT_get();
  public final static native int BS2_DEVICE_STATUS_WAITING_DHCP_get();
  public final static native int BS2_DEVICE_STATUS_SCAN_FINGER_get();
  public final static native int BS2_DEVICE_STATUS_SCAN_CARD_get();
  public final static native int BS2_DEVICE_STATUS_SUCCESS_get();
  public final static native int BS2_DEVICE_STATUS_FAIL_get();
  public final static native int BS2_DEVICE_STATUS_DURESS_get();
  public final static native int BS2_DEVICE_STATUS_PROCESS_CONFIG_CARD_get();
  public final static native int BS2_DEVICE_STATUS_SUCCESS_CONFIG_CARD_get();
  public final static native int BS2_DEVICE_STATUS_RESERVED2_get();
  public final static native int BS2_DEVICE_STATUS_RESERVED3_get();
  public final static native int BS2_DEVICE_STATUS_RESERVED4_get();
  public final static native int BS2_DEVICE_STATUS_NUM_get();
  public final static native void BS2StatusConfig_reserved1_set(long jarg1, BS2StatusConfig jarg1_, long jarg2);
  public final static native long BS2StatusConfig_reserved1_get(long jarg1, BS2StatusConfig jarg1_);
  public final static native void BS2StatusConfig_configSyncRequired_set(long jarg1, BS2StatusConfig jarg1_, boolean jarg2);
  public final static native boolean BS2StatusConfig_configSyncRequired_get(long jarg1, BS2StatusConfig jarg1_);
  public final static native void BS2StatusConfig_reserved2_set(long jarg1, BS2StatusConfig jarg1_, long jarg2);
  public final static native long BS2StatusConfig_reserved2_get(long jarg1, BS2StatusConfig jarg1_);
  public final static native long new_BS2StatusConfig();
  public final static native void delete_BS2StatusConfig(long jarg1);
  public final static native void BS2SystemConfig_notUsed_set(long jarg1, BS2SystemConfig jarg1_, long jarg2);
  public final static native long BS2SystemConfig_notUsed_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_timezone_set(long jarg1, BS2SystemConfig jarg1_, int jarg2);
  public final static native int BS2SystemConfig_timezone_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_syncTime_set(long jarg1, BS2SystemConfig jarg1_, boolean jarg2);
  public final static native boolean BS2SystemConfig_syncTime_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_serverSync_set(long jarg1, BS2SystemConfig jarg1_, boolean jarg2);
  public final static native boolean BS2SystemConfig_serverSync_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_deviceLocked_set(long jarg1, BS2SystemConfig jarg1_, boolean jarg2);
  public final static native boolean BS2SystemConfig_deviceLocked_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_useInterphone_set(long jarg1, BS2SystemConfig jarg1_, boolean jarg2);
  public final static native boolean BS2SystemConfig_useInterphone_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_useUSBConnection_set(long jarg1, BS2SystemConfig jarg1_, boolean jarg2);
  public final static native boolean BS2SystemConfig_useUSBConnection_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_keyEncrypted_set(long jarg1, BS2SystemConfig jarg1_, boolean jarg2);
  public final static native boolean BS2SystemConfig_keyEncrypted_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_useJobCode_set(long jarg1, BS2SystemConfig jarg1_, boolean jarg2);
  public final static native boolean BS2SystemConfig_useJobCode_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_useAlphanumericID_set(long jarg1, BS2SystemConfig jarg1_, boolean jarg2);
  public final static native boolean BS2SystemConfig_useAlphanumericID_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_cameraFrequency_set(long jarg1, BS2SystemConfig jarg1_, long jarg2);
  public final static native long BS2SystemConfig_cameraFrequency_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_secureTamper_set(long jarg1, BS2SystemConfig jarg1_, boolean jarg2);
  public final static native boolean BS2SystemConfig_secureTamper_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_tamperOn_set(long jarg1, BS2SystemConfig jarg1_, boolean jarg2);
  public final static native boolean BS2SystemConfig_tamperOn_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_reserved_set(long jarg1, BS2SystemConfig jarg1_, long jarg2);
  public final static native long BS2SystemConfig_reserved_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native void BS2SystemConfig_reserved2_set(long jarg1, BS2SystemConfig jarg1_, long jarg2);
  public final static native long BS2SystemConfig_reserved2_get(long jarg1, BS2SystemConfig jarg1_);
  public final static native long new_BS2SystemConfig();
  public final static native void delete_BS2SystemConfig(long jarg1);
  public final static native int SEC_KEY_SIZE_get();
  public final static native void BS2SystemConfigExt_primarySecureKey_set(long jarg1, BS2SystemConfigExt jarg1_, long jarg2);
  public final static native long BS2SystemConfigExt_primarySecureKey_get(long jarg1, BS2SystemConfigExt jarg1_);
  public final static native void BS2SystemConfigExt_secondarySecureKey_set(long jarg1, BS2SystemConfigExt jarg1_, long jarg2);
  public final static native long BS2SystemConfigExt_secondarySecureKey_get(long jarg1, BS2SystemConfigExt jarg1_);
  public final static native void BS2SystemConfigExt_reserved3_set(long jarg1, BS2SystemConfigExt jarg1_, long jarg2);
  public final static native long BS2SystemConfigExt_reserved3_get(long jarg1, BS2SystemConfigExt jarg1_);
  public final static native long new_BS2SystemConfigExt();
  public final static native void delete_BS2SystemConfigExt(long jarg1);
  public final static native int BS2_MAX_TNA_LABEL_LEN_get();
  public final static native int BS2_TNA_UNUSED_get();
  public final static native int BS2_TNA_BY_USER_get();
  public final static native int BS2_TNA_BY_SCHEDULE_get();
  public final static native int BS2_TNA_LAST_CHOICE_get();
  public final static native int BS2_TNA_FIXED_get();
  public final static native int BS2_TNA_MODE_DEFAULT_get();
  public final static native int BS2_TNA_UNSPECIFIED_get();
  public final static native int BS2_TNA_KEY_1_get();
  public final static native int BS2_TNA_KEY_2_get();
  public final static native int BS2_TNA_KEY_3_get();
  public final static native int BS2_TNA_KEY_4_get();
  public final static native int BS2_TNA_KEY_5_get();
  public final static native int BS2_TNA_KEY_6_get();
  public final static native int BS2_TNA_KEY_7_get();
  public final static native int BS2_TNA_KEY_8_get();
  public final static native int BS2_TNA_KEY_9_get();
  public final static native int BS2_TNA_KEY_10_get();
  public final static native int BS2_TNA_KEY_11_get();
  public final static native int BS2_TNA_KEY_12_get();
  public final static native int BS2_TNA_KEY_13_get();
  public final static native int BS2_TNA_KEY_14_get();
  public final static native int BS2_TNA_KEY_15_get();
  public final static native int BS2_TNA_KEY_16_get();
  public final static native int BS2_MAX_TNA_KEY_get();
  public final static native void BS2TNAInfo_tnaMode_set(long jarg1, BS2TNAInfo jarg1_, short jarg2);
  public final static native short BS2TNAInfo_tnaMode_get(long jarg1, BS2TNAInfo jarg1_);
  public final static native void BS2TNAInfo_tnaKey_set(long jarg1, BS2TNAInfo jarg1_, short jarg2);
  public final static native short BS2TNAInfo_tnaKey_get(long jarg1, BS2TNAInfo jarg1_);
  public final static native void BS2TNAInfo_tnaRequired_set(long jarg1, BS2TNAInfo jarg1_, boolean jarg2);
  public final static native boolean BS2TNAInfo_tnaRequired_get(long jarg1, BS2TNAInfo jarg1_);
  public final static native void BS2TNAInfo_reserved_set(long jarg1, BS2TNAInfo jarg1_, long jarg2);
  public final static native long BS2TNAInfo_reserved_get(long jarg1, BS2TNAInfo jarg1_);
  public final static native void BS2TNAInfo_tnaSchedule_set(long jarg1, BS2TNAInfo jarg1_, long jarg2);
  public final static native long BS2TNAInfo_tnaSchedule_get(long jarg1, BS2TNAInfo jarg1_);
  public final static native void BS2TNAInfo_unused_set(long jarg1, BS2TNAInfo jarg1_, long jarg2);
  public final static native long BS2TNAInfo_unused_get(long jarg1, BS2TNAInfo jarg1_);
  public final static native long new_BS2TNAInfo();
  public final static native void delete_BS2TNAInfo(long jarg1);
  public final static native void BS2TNAExtInfo_tnaLabel_set(long jarg1, BS2TNAExtInfo jarg1_, long jarg2);
  public final static native long BS2TNAExtInfo_tnaLabel_get(long jarg1, BS2TNAExtInfo jarg1_);
  public final static native void BS2TNAExtInfo_unused_set(long jarg1, BS2TNAExtInfo jarg1_, long jarg2);
  public final static native long BS2TNAExtInfo_unused_get(long jarg1, BS2TNAExtInfo jarg1_);
  public final static native long new_BS2TNAExtInfo();
  public final static native void delete_BS2TNAExtInfo(long jarg1);
  public final static native void BS2TNAConfig_tnaInfo_set(long jarg1, BS2TNAConfig jarg1_, long jarg2, BS2TNAInfo jarg2_);
  public final static native long BS2TNAConfig_tnaInfo_get(long jarg1, BS2TNAConfig jarg1_);
  public final static native void BS2TNAConfig_tnaExtInfo_set(long jarg1, BS2TNAConfig jarg1_, long jarg2, BS2TNAExtInfo jarg2_);
  public final static native long BS2TNAConfig_tnaExtInfo_get(long jarg1, BS2TNAConfig jarg1_);
  public final static native void BS2TNAConfig_reserved2_set(long jarg1, BS2TNAConfig jarg1_, long jarg2);
  public final static native long BS2TNAConfig_reserved2_get(long jarg1, BS2TNAConfig jarg1_);
  public final static native long new_BS2TNAConfig();
  public final static native void delete_BS2TNAConfig(long jarg1);
  public final static native int BS2_MAX_TRIGGER_ACTION_get();
  public final static native void BS2TriggerAction_trigger_set(long jarg1, BS2TriggerAction jarg1_, long jarg2, BS2Trigger jarg2_);
  public final static native long BS2TriggerAction_trigger_get(long jarg1, BS2TriggerAction jarg1_);
  public final static native void BS2TriggerAction_action_set(long jarg1, BS2TriggerAction jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2TriggerAction_action_get(long jarg1, BS2TriggerAction jarg1_);
  public final static native long new_BS2TriggerAction();
  public final static native void delete_BS2TriggerAction(long jarg1);
  public final static native void BS2TriggerActionConfig_numItems_set(long jarg1, BS2TriggerActionConfig jarg1_, short jarg2);
  public final static native short BS2TriggerActionConfig_numItems_get(long jarg1, BS2TriggerActionConfig jarg1_);
  public final static native void BS2TriggerActionConfig_reserved_set(long jarg1, BS2TriggerActionConfig jarg1_, long jarg2);
  public final static native long BS2TriggerActionConfig_reserved_get(long jarg1, BS2TriggerActionConfig jarg1_);
  public final static native void BS2TriggerActionConfig_items_set(long jarg1, BS2TriggerActionConfig jarg1_, long jarg2, BS2TriggerAction jarg2_);
  public final static native long BS2TriggerActionConfig_items_get(long jarg1, BS2TriggerActionConfig jarg1_);
  public final static native void BS2TriggerActionConfig_reserved1_set(long jarg1, BS2TriggerActionConfig jarg1_, long jarg2);
  public final static native long BS2TriggerActionConfig_reserved1_get(long jarg1, BS2TriggerActionConfig jarg1_);
  public final static native long new_BS2TriggerActionConfig();
  public final static native void delete_BS2TriggerActionConfig(long jarg1);
  public final static native int BS2_VOIP_MAX_PHONEBOOK_get();
  public final static native int BS2_MAX_DESCRIPTION_NAME_LEN_get();
  public final static native void BS2UserPhoneItem_phoneNumber_set(long jarg1, BS2UserPhoneItem jarg1_, String jarg2);
  public final static native String BS2UserPhoneItem_phoneNumber_get(long jarg1, BS2UserPhoneItem jarg1_);
  public final static native void BS2UserPhoneItem_descript_set(long jarg1, BS2UserPhoneItem jarg1_, String jarg2);
  public final static native String BS2UserPhoneItem_descript_get(long jarg1, BS2UserPhoneItem jarg1_);
  public final static native void BS2UserPhoneItem_reserved2_set(long jarg1, BS2UserPhoneItem jarg1_, long jarg2);
  public final static native long BS2UserPhoneItem_reserved2_get(long jarg1, BS2UserPhoneItem jarg1_);
  public final static native long new_BS2UserPhoneItem();
  public final static native void delete_BS2UserPhoneItem(long jarg1);
  public final static native void BS2VoipConfig_serverUrl_set(long jarg1, BS2VoipConfig jarg1_, String jarg2);
  public final static native String BS2VoipConfig_serverUrl_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native void BS2VoipConfig_serverPort_set(long jarg1, BS2VoipConfig jarg1_, int jarg2);
  public final static native int BS2VoipConfig_serverPort_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native void BS2VoipConfig_userID_set(long jarg1, BS2VoipConfig jarg1_, String jarg2);
  public final static native String BS2VoipConfig_userID_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native void BS2VoipConfig_userPW_set(long jarg1, BS2VoipConfig jarg1_, String jarg2);
  public final static native String BS2VoipConfig_userPW_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native void BS2VoipConfig_exitButton_set(long jarg1, BS2VoipConfig jarg1_, short jarg2);
  public final static native short BS2VoipConfig_exitButton_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native void BS2VoipConfig_dtmfMode_set(long jarg1, BS2VoipConfig jarg1_, short jarg2);
  public final static native short BS2VoipConfig_dtmfMode_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native void BS2VoipConfig_bUse_set(long jarg1, BS2VoipConfig jarg1_, boolean jarg2);
  public final static native boolean BS2VoipConfig_bUse_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native void BS2VoipConfig_reseverd_set(long jarg1, BS2VoipConfig jarg1_, long jarg2);
  public final static native long BS2VoipConfig_reseverd_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native void BS2VoipConfig_numPhonBook_set(long jarg1, BS2VoipConfig jarg1_, long jarg2);
  public final static native long BS2VoipConfig_numPhonBook_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native void BS2VoipConfig_phonebook_set(long jarg1, BS2VoipConfig jarg1_, long jarg2, BS2UserPhoneItem jarg2_);
  public final static native long BS2VoipConfig_phonebook_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native void BS2VoipConfig_reserved2_set(long jarg1, BS2VoipConfig jarg1_, long jarg2);
  public final static native long BS2VoipConfig_reserved2_get(long jarg1, BS2VoipConfig jarg1_);
  public final static native long new_BS2VoipConfig();
  public final static native void delete_BS2VoipConfig(long jarg1);
  public final static native int BS2_WIEGAND_FIELD_SIZE_get();
  public final static native int BS2_WIEGAND_FIELD_MASK_SIZE_get();
  public final static native int BS2_WIEGAND_MAX_FIELDS_get();
  public final static native int BS2_WIEGAND_MAX_PARITIES_get();
  public final static native int BS2_WIEGAND_FMT_H10301_26BIT_get();
  public final static native int BS2_WIEGAND_FMT_H10302_37BIT_get();
  public final static native int BS2_WIEGAND_FMT_H10304_37BIT_get();
  public final static native int BS2_WIEGAND_FMT_CORPORATE1000_35BIT_get();
  public final static native int BS2_WIEGAND_IN_get();
  public final static native int BS2_WIEGAND_OUT_get();
  public final static native int BS2_WIEGAND_IN_ONLY_get();
  public final static native int BS2_WIEGAND_OUT_ONLY_get();
  public final static native int BS2_WIEGAND_IN_OUT_get();
  public final static native int BS2_WIEGAND_PARITY_NONE_get();
  public final static native int BS2_WIEGAND_PARITY_ODD_get();
  public final static native int BS2_WIEGAND_PARITY_EVEN_get();
  public final static native void BS2WiegandFormat_length_set(long jarg1, BS2WiegandFormat jarg1_, long jarg2);
  public final static native long BS2WiegandFormat_length_get(long jarg1, BS2WiegandFormat jarg1_);
  public final static native void BS2WiegandFormat_idFields_set(long jarg1, BS2WiegandFormat jarg1_, long jarg2);
  public final static native long BS2WiegandFormat_idFields_get(long jarg1, BS2WiegandFormat jarg1_);
  public final static native void BS2WiegandFormat_parityFields_set(long jarg1, BS2WiegandFormat jarg1_, long jarg2);
  public final static native long BS2WiegandFormat_parityFields_get(long jarg1, BS2WiegandFormat jarg1_);
  public final static native void BS2WiegandFormat_parityType_set(long jarg1, BS2WiegandFormat jarg1_, long jarg2);
  public final static native long BS2WiegandFormat_parityType_get(long jarg1, BS2WiegandFormat jarg1_);
  public final static native void BS2WiegandFormat_parityPos_set(long jarg1, BS2WiegandFormat jarg1_, long jarg2);
  public final static native long BS2WiegandFormat_parityPos_get(long jarg1, BS2WiegandFormat jarg1_);
  public final static native long new_BS2WiegandFormat();
  public final static native void delete_BS2WiegandFormat(long jarg1);
  public final static native void BS2WiegandConfig_mode_set(long jarg1, BS2WiegandConfig jarg1_, short jarg2);
  public final static native short BS2WiegandConfig_mode_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_useWiegandBypass_set(long jarg1, BS2WiegandConfig jarg1_, boolean jarg2);
  public final static native boolean BS2WiegandConfig_useWiegandBypass_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_useFailCode_set(long jarg1, BS2WiegandConfig jarg1_, boolean jarg2);
  public final static native boolean BS2WiegandConfig_useFailCode_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_failCode_set(long jarg1, BS2WiegandConfig jarg1_, short jarg2);
  public final static native short BS2WiegandConfig_failCode_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_outPulseWidth_set(long jarg1, BS2WiegandConfig jarg1_, int jarg2);
  public final static native int BS2WiegandConfig_outPulseWidth_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_outPulseInterval_set(long jarg1, BS2WiegandConfig jarg1_, int jarg2);
  public final static native int BS2WiegandConfig_outPulseInterval_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_formatID_set(long jarg1, BS2WiegandConfig jarg1_, long jarg2);
  public final static native long BS2WiegandConfig_formatID_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_format_set(long jarg1, BS2WiegandConfig jarg1_, long jarg2, BS2WiegandFormat jarg2_);
  public final static native long BS2WiegandConfig_format_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_wiegandInputMask_set(long jarg1, BS2WiegandConfig jarg1_, int jarg2);
  public final static native int BS2WiegandConfig_wiegandInputMask_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_wiegandCardMask_set(long jarg1, BS2WiegandConfig jarg1_, int jarg2);
  public final static native int BS2WiegandConfig_wiegandCardMask_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_wiegandCSNIndex_set(long jarg1, BS2WiegandConfig jarg1_, short jarg2);
  public final static native short BS2WiegandConfig_wiegandCSNIndex_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native void BS2WiegandConfig_reserved_set(long jarg1, BS2WiegandConfig jarg1_, long jarg2);
  public final static native long BS2WiegandConfig_reserved_get(long jarg1, BS2WiegandConfig jarg1_);
  public final static native long new_BS2WiegandConfig();
  public final static native void delete_BS2WiegandConfig(long jarg1);
  public final static native void BS2WiegandTamperInput_deviceID_set(long jarg1, BS2WiegandTamperInput jarg1_, long jarg2);
  public final static native long BS2WiegandTamperInput_deviceID_get(long jarg1, BS2WiegandTamperInput jarg1_);
  public final static native void BS2WiegandTamperInput_port_set(long jarg1, BS2WiegandTamperInput jarg1_, int jarg2);
  public final static native int BS2WiegandTamperInput_port_get(long jarg1, BS2WiegandTamperInput jarg1_);
  public final static native void BS2WiegandTamperInput_switchType_set(long jarg1, BS2WiegandTamperInput jarg1_, short jarg2);
  public final static native short BS2WiegandTamperInput_switchType_get(long jarg1, BS2WiegandTamperInput jarg1_);
  public final static native void BS2WiegandTamperInput_reserved_set(long jarg1, BS2WiegandTamperInput jarg1_, long jarg2);
  public final static native long BS2WiegandTamperInput_reserved_get(long jarg1, BS2WiegandTamperInput jarg1_);
  public final static native long new_BS2WiegandTamperInput();
  public final static native void delete_BS2WiegandTamperInput(long jarg1);
  public final static native int BS2_WIEGAND_DEVICE_BUZZER_NUM_get();
  public final static native void BS2WiegandLedOutput_deviceID_set(long jarg1, BS2WiegandLedOutput jarg1_, long jarg2);
  public final static native long BS2WiegandLedOutput_deviceID_get(long jarg1, BS2WiegandLedOutput jarg1_);
  public final static native void BS2WiegandLedOutput_port_set(long jarg1, BS2WiegandLedOutput jarg1_, int jarg2);
  public final static native int BS2WiegandLedOutput_port_get(long jarg1, BS2WiegandLedOutput jarg1_);
  public final static native void BS2WiegandLedOutput_reserved_set(long jarg1, BS2WiegandLedOutput jarg1_, long jarg2);
  public final static native long BS2WiegandLedOutput_reserved_get(long jarg1, BS2WiegandLedOutput jarg1_);
  public final static native long new_BS2WiegandLedOutput();
  public final static native void delete_BS2WiegandLedOutput(long jarg1);
  public final static native void BS2WiegandBuzzerOutput_deviceID_set(long jarg1, BS2WiegandBuzzerOutput jarg1_, long jarg2);
  public final static native long BS2WiegandBuzzerOutput_deviceID_get(long jarg1, BS2WiegandBuzzerOutput jarg1_);
  public final static native void BS2WiegandBuzzerOutput_port_set(long jarg1, BS2WiegandBuzzerOutput jarg1_, int jarg2);
  public final static native int BS2WiegandBuzzerOutput_port_get(long jarg1, BS2WiegandBuzzerOutput jarg1_);
  public final static native void BS2WiegandBuzzerOutput_reserved_set(long jarg1, BS2WiegandBuzzerOutput jarg1_, long jarg2);
  public final static native long BS2WiegandBuzzerOutput_reserved_get(long jarg1, BS2WiegandBuzzerOutput jarg1_);
  public final static native long new_BS2WiegandBuzzerOutput();
  public final static native void delete_BS2WiegandBuzzerOutput(long jarg1);
  public final static native int BS2_WIEGAND_STATUS_GREEN_get();
  public final static native int BS2_WIEGAND_STATUS_RED_get();
  public final static native int BS2_WIEGAND_STATUS_NUM_get();
  public final static native void BS2WiegandDeviceConfig_tamper_set(long jarg1, BS2WiegandDeviceConfig jarg1_, long jarg2, BS2WiegandTamperInput jarg2_);
  public final static native long BS2WiegandDeviceConfig_tamper_get(long jarg1, BS2WiegandDeviceConfig jarg1_);
  public final static native void BS2WiegandDeviceConfig_led_set(long jarg1, BS2WiegandDeviceConfig jarg1_, long jarg2, BS2WiegandLedOutput jarg2_);
  public final static native long BS2WiegandDeviceConfig_led_get(long jarg1, BS2WiegandDeviceConfig jarg1_);
  public final static native void BS2WiegandDeviceConfig_buzzer_set(long jarg1, BS2WiegandDeviceConfig jarg1_, long jarg2, BS2WiegandBuzzerOutput jarg2_);
  public final static native long BS2WiegandDeviceConfig_buzzer_get(long jarg1, BS2WiegandDeviceConfig jarg1_);
  public final static native void BS2WiegandDeviceConfig_reserved_set(long jarg1, BS2WiegandDeviceConfig jarg1_, long jarg2);
  public final static native long BS2WiegandDeviceConfig_reserved_get(long jarg1, BS2WiegandDeviceConfig jarg1_);
  public final static native long new_BS2WiegandDeviceConfig();
  public final static native void delete_BS2WiegandDeviceConfig(long jarg1);
  public final static native int MAX_WIEGAND_IN_COUNT_get();
  public final static native void BS2WiegandInConfig_formatID_set(long jarg1, BS2WiegandInConfig jarg1_, long jarg2);
  public final static native long BS2WiegandInConfig_formatID_get(long jarg1, BS2WiegandInConfig jarg1_);
  public final static native void BS2WiegandInConfig_format_set(long jarg1, BS2WiegandInConfig jarg1_, long jarg2, BS2WiegandFormat jarg2_);
  public final static native long BS2WiegandInConfig_format_get(long jarg1, BS2WiegandInConfig jarg1_);
  public final static native void BS2WiegandInConfig_reserved_set(long jarg1, BS2WiegandInConfig jarg1_, long jarg2);
  public final static native long BS2WiegandInConfig_reserved_get(long jarg1, BS2WiegandInConfig jarg1_);
  public final static native long new_BS2WiegandInConfig();
  public final static native void delete_BS2WiegandInConfig(long jarg1);
  public final static native void BS2WiegandMultiConfig_formats_set(long jarg1, BS2WiegandMultiConfig jarg1_, long jarg2, BS2WiegandInConfig jarg2_);
  public final static native long BS2WiegandMultiConfig_formats_get(long jarg1, BS2WiegandMultiConfig jarg1_);
  public final static native void BS2WiegandMultiConfig_reserved_set(long jarg1, BS2WiegandMultiConfig jarg1_, long jarg2);
  public final static native long BS2WiegandMultiConfig_reserved_get(long jarg1, BS2WiegandMultiConfig jarg1_);
  public final static native long new_BS2WiegandMultiConfig();
  public final static native void delete_BS2WiegandMultiConfig(long jarg1);
  public final static native int BS2_WLAN_SSID_SIZE_get();
  public final static native int BS2_WLAN_KEY_SIZE_get();
  public final static native int BS2_WLAN_OPMODE_MANAGED_get();
  public final static native int BS2_WLAN_OPMODE_ADHOC_get();
  public final static native int BS2_WLAN_OPMODE_DEFAULT_get();
  public final static native int BS2_WLAN_AUTH_OPEN_get();
  public final static native int BS2_WLAN_AUTH_SHARED_get();
  public final static native int BS2_WLAN_AUTH_WPA_PSK_get();
  public final static native int BS2_WLAN_AUTH_WPA2_PSK_get();
  public final static native int BS2_WLAN_AUTH_DEFAULT_get();
  public final static native int BS2_WLAN_ENC_NONE_get();
  public final static native int BS2_WLAN_ENC_WEP_get();
  public final static native int BS2_WLAN_ENC_TKIP_AES_get();
  public final static native int BS2_WLAN_ENC_AES_get();
  public final static native int BS2_WLAN_ENC_TKIP_get();
  public final static native int BS2_WLAN_ENC_DEFAULT_get();
  public final static native void BS2WlanConfig_enabled_set(long jarg1, BS2WlanConfig jarg1_, boolean jarg2);
  public final static native boolean BS2WlanConfig_enabled_get(long jarg1, BS2WlanConfig jarg1_);
  public final static native void BS2WlanConfig_operationMode_set(long jarg1, BS2WlanConfig jarg1_, short jarg2);
  public final static native short BS2WlanConfig_operationMode_get(long jarg1, BS2WlanConfig jarg1_);
  public final static native void BS2WlanConfig_authType_set(long jarg1, BS2WlanConfig jarg1_, short jarg2);
  public final static native short BS2WlanConfig_authType_get(long jarg1, BS2WlanConfig jarg1_);
  public final static native void BS2WlanConfig_encryptionType_set(long jarg1, BS2WlanConfig jarg1_, short jarg2);
  public final static native short BS2WlanConfig_encryptionType_get(long jarg1, BS2WlanConfig jarg1_);
  public final static native void BS2WlanConfig_essid_set(long jarg1, BS2WlanConfig jarg1_, String jarg2);
  public final static native String BS2WlanConfig_essid_get(long jarg1, BS2WlanConfig jarg1_);
  public final static native void BS2WlanConfig_authKey_set(long jarg1, BS2WlanConfig jarg1_, String jarg2);
  public final static native String BS2WlanConfig_authKey_get(long jarg1, BS2WlanConfig jarg1_);
  public final static native void BS2WlanConfig_reserved2_set(long jarg1, BS2WlanConfig jarg1_, long jarg2);
  public final static native long BS2WlanConfig_reserved2_get(long jarg1, BS2WlanConfig jarg1_);
  public final static native long new_BS2WlanConfig();
  public final static native void delete_BS2WlanConfig(long jarg1);
  public final static native int BS2_MAX_ACCESS_LEVEL_PER_ACCESS_GROUP_get();
  public final static native int BS2_MAX_ACCESS_GROUP_PER_USER_get();
  public final static native int BS2_MAX_ACCESS_GROUP_NAME_LEN_get();
  public final static native int BS2_INVALID_ACCESS_GROUP_ID_get();
  public final static native void BS2AccessGroupUsers_accessGroupID_set(long jarg1, BS2AccessGroupUsers jarg1_, long jarg2);
  public final static native long BS2AccessGroupUsers_accessGroupID_get(long jarg1, BS2AccessGroupUsers jarg1_);
  public final static native void BS2AccessGroupUsers_numUsers_set(long jarg1, BS2AccessGroupUsers jarg1_, long jarg2);
  public final static native long BS2AccessGroupUsers_numUsers_get(long jarg1, BS2AccessGroupUsers jarg1_);
  public final static native void BS2AccessGroupUsers_userID_set(long jarg1, BS2AccessGroupUsers jarg1_, long jarg2);
  public final static native long BS2AccessGroupUsers_userID_get(long jarg1, BS2AccessGroupUsers jarg1_);
  public final static native long new_BS2AccessGroupUsers();
  public final static native void delete_BS2AccessGroupUsers(long jarg1);
  public final static native void BS2UserAccessGroups_numAccessGroups_set(long jarg1, BS2UserAccessGroups jarg1_, short jarg2);
  public final static native short BS2UserAccessGroups_numAccessGroups_get(long jarg1, BS2UserAccessGroups jarg1_);
  public final static native void BS2UserAccessGroups_reserved_set(long jarg1, BS2UserAccessGroups jarg1_, long jarg2);
  public final static native long BS2UserAccessGroups_reserved_get(long jarg1, BS2UserAccessGroups jarg1_);
  public final static native void BS2UserAccessGroups_accessGroupID_set(long jarg1, BS2UserAccessGroups jarg1_, long jarg2);
  public final static native long BS2UserAccessGroups_accessGroupID_get(long jarg1, BS2UserAccessGroups jarg1_);
  public final static native long new_BS2UserAccessGroups();
  public final static native void delete_BS2UserAccessGroups(long jarg1);
  public final static native void BS2AccessGroup_id_set(long jarg1, BS2AccessGroup jarg1_, long jarg2);
  public final static native long BS2AccessGroup_id_get(long jarg1, BS2AccessGroup jarg1_);
  public final static native void BS2AccessGroup_name_set(long jarg1, BS2AccessGroup jarg1_, String jarg2);
  public final static native String BS2AccessGroup_name_get(long jarg1, BS2AccessGroup jarg1_);
  public final static native void BS2AccessGroup_numAccessLevels_set(long jarg1, BS2AccessGroup jarg1_, short jarg2);
  public final static native short BS2AccessGroup_numAccessLevels_get(long jarg1, BS2AccessGroup jarg1_);
  public final static native void BS2AccessGroup_numFloorLevels_set(long jarg1, BS2AccessGroup jarg1_, short jarg2);
  public final static native short BS2AccessGroup_numFloorLevels_get(long jarg1, BS2AccessGroup jarg1_);
  public final static native void BS2AccessGroup_reserved_set(long jarg1, BS2AccessGroup jarg1_, long jarg2);
  public final static native long BS2AccessGroup_reserved_get(long jarg1, BS2AccessGroup jarg1_);
  public final static native void BS2AccessGroup_accessLevels_set(long jarg1, BS2AccessGroup jarg1_, long jarg2);
  public final static native long BS2AccessGroup_accessLevels_get(long jarg1, BS2AccessGroup jarg1_);
  public final static native void BS2AccessGroup_floorLevels_set(long jarg1, BS2AccessGroup jarg1_, long jarg2);
  public final static native long BS2AccessGroup_floorLevels_get(long jarg1, BS2AccessGroup jarg1_);
  public final static native long new_BS2AccessGroup();
  public final static native void delete_BS2AccessGroup(long jarg1);
  public final static native int BS2_MAX_ACCESS_LEVEL_ITEMS_get();
  public final static native int BS2_MAX_ACCESS_LEVEL_NAME_LEN_get();
  public final static native int BS2_INVALID_ACCESS_LEVEL_ID_get();
  public final static native void BS2DoorSchedule_doorID_set(long jarg1, BS2DoorSchedule jarg1_, long jarg2);
  public final static native long BS2DoorSchedule_doorID_get(long jarg1, BS2DoorSchedule jarg1_);
  public final static native void BS2DoorSchedule_scheduleID_set(long jarg1, BS2DoorSchedule jarg1_, long jarg2);
  public final static native long BS2DoorSchedule_scheduleID_get(long jarg1, BS2DoorSchedule jarg1_);
  public final static native long new_BS2DoorSchedule();
  public final static native void delete_BS2DoorSchedule(long jarg1);
  public final static native void BS2AccessLevel_id_set(long jarg1, BS2AccessLevel jarg1_, long jarg2);
  public final static native long BS2AccessLevel_id_get(long jarg1, BS2AccessLevel jarg1_);
  public final static native void BS2AccessLevel_name_set(long jarg1, BS2AccessLevel jarg1_, String jarg2);
  public final static native String BS2AccessLevel_name_get(long jarg1, BS2AccessLevel jarg1_);
  public final static native void BS2AccessLevel_numDoorSchedules_set(long jarg1, BS2AccessLevel jarg1_, short jarg2);
  public final static native short BS2AccessLevel_numDoorSchedules_get(long jarg1, BS2AccessLevel jarg1_);
  public final static native void BS2AccessLevel_reserved_set(long jarg1, BS2AccessLevel jarg1_, long jarg2);
  public final static native long BS2AccessLevel_reserved_get(long jarg1, BS2AccessLevel jarg1_);
  public final static native void BS2AccessLevel_doorSchedules_set(long jarg1, BS2AccessLevel jarg1_, long jarg2, BS2DoorSchedule jarg2_);
  public final static native long BS2AccessLevel_doorSchedules_get(long jarg1, BS2AccessLevel jarg1_);
  public final static native long new_BS2AccessLevel();
  public final static native void delete_BS2AccessLevel(long jarg1);
  public final static native int BS2_BUZZER_SIGNAL_NUM_get();
  public final static native int BS2_LED_SIGNAL_NUM_get();
  public final static native int BS2_ACTION_NONE_get();
  public final static native int BS2_ACTION_LOCK_DEVICE_get();
  public final static native int BS2_ACTION_UNLOCK_DEVICE_get();
  public final static native int BS2_ACTION_REBOOT_DEVICE_get();
  public final static native int BS2_ACTION_RELEASE_ALARM_get();
  public final static native int BS2_ACTION_GENERAL_INPUT_get();
  public final static native int BS2_ACTION_RELAY_get();
  public final static native int BS2_ACTION_TTL_get();
  public final static native int BS2_ACTION_SOUND_get();
  public final static native int BS2_ACTION_DISPLAY_get();
  public final static native int BS2_ACTION_BUZZER_get();
  public final static native int BS2_ACTION_LED_get();
  public final static native int BS2_ACTION_FIRE_ALARM_INPUT_get();
  public final static native int BS2_ACTION_AUTH_SUCCESS_get();
  public final static native int BS2_ACTION_AUTH_FAIL_get();
  public final static native int BS2_ACTION_LIFT_get();
  public final static native int BS2_ACTION_NUM_get();
  public final static native void BS2Signal_signalID_set(long jarg1, BS2Signal jarg1_, long jarg2);
  public final static native long BS2Signal_signalID_get(long jarg1, BS2Signal jarg1_);
  public final static native void BS2Signal_count_set(long jarg1, BS2Signal jarg1_, int jarg2);
  public final static native int BS2Signal_count_get(long jarg1, BS2Signal jarg1_);
  public final static native void BS2Signal_onDuration_set(long jarg1, BS2Signal jarg1_, int jarg2);
  public final static native int BS2Signal_onDuration_get(long jarg1, BS2Signal jarg1_);
  public final static native void BS2Signal_offDuration_set(long jarg1, BS2Signal jarg1_, int jarg2);
  public final static native int BS2Signal_offDuration_get(long jarg1, BS2Signal jarg1_);
  public final static native void BS2Signal_delay_set(long jarg1, BS2Signal jarg1_, int jarg2);
  public final static native int BS2Signal_delay_get(long jarg1, BS2Signal jarg1_);
  public final static native long new_BS2Signal();
  public final static native void delete_BS2Signal(long jarg1);
  public final static native void BS2OutputPortAction_portIndex_set(long jarg1, BS2OutputPortAction jarg1_, short jarg2);
  public final static native short BS2OutputPortAction_portIndex_get(long jarg1, BS2OutputPortAction jarg1_);
  public final static native void BS2OutputPortAction_reserved_set(long jarg1, BS2OutputPortAction jarg1_, long jarg2);
  public final static native long BS2OutputPortAction_reserved_get(long jarg1, BS2OutputPortAction jarg1_);
  public final static native void BS2OutputPortAction_signal_set(long jarg1, BS2OutputPortAction jarg1_, long jarg2, BS2Signal jarg2_);
  public final static native long BS2OutputPortAction_signal_get(long jarg1, BS2OutputPortAction jarg1_);
  public final static native long new_BS2OutputPortAction();
  public final static native void delete_BS2OutputPortAction(long jarg1);
  public final static native void BS2RelayAction_relayIndex_set(long jarg1, BS2RelayAction jarg1_, short jarg2);
  public final static native short BS2RelayAction_relayIndex_get(long jarg1, BS2RelayAction jarg1_);
  public final static native void BS2RelayAction_reserved_set(long jarg1, BS2RelayAction jarg1_, long jarg2);
  public final static native long BS2RelayAction_reserved_get(long jarg1, BS2RelayAction jarg1_);
  public final static native void BS2RelayAction_signal_set(long jarg1, BS2RelayAction jarg1_, long jarg2, BS2Signal jarg2_);
  public final static native long BS2RelayAction_signal_get(long jarg1, BS2RelayAction jarg1_);
  public final static native long new_BS2RelayAction();
  public final static native void delete_BS2RelayAction(long jarg1);
  public final static native void BS2ReleaseAlarmAction_targetType_set(long jarg1, BS2ReleaseAlarmAction jarg1_, short jarg2);
  public final static native short BS2ReleaseAlarmAction_targetType_get(long jarg1, BS2ReleaseAlarmAction jarg1_);
  public final static native void BS2ReleaseAlarmAction_reserved_set(long jarg1, BS2ReleaseAlarmAction jarg1_, long jarg2);
  public final static native long BS2ReleaseAlarmAction_reserved_get(long jarg1, BS2ReleaseAlarmAction jarg1_);
  public final static native void BS2ReleaseAlarmAction_deviceID_set(long jarg1, BS2ReleaseAlarmAction jarg1_, long jarg2);
  public final static native long BS2ReleaseAlarmAction_deviceID_get(long jarg1, BS2ReleaseAlarmAction jarg1_);
  public final static native void BS2ReleaseAlarmAction_doorID_set(long jarg1, BS2ReleaseAlarmAction jarg1_, long jarg2);
  public final static native long BS2ReleaseAlarmAction_doorID_get(long jarg1, BS2ReleaseAlarmAction jarg1_);
  public final static native void BS2ReleaseAlarmAction_zoneID_set(long jarg1, BS2ReleaseAlarmAction jarg1_, long jarg2);
  public final static native long BS2ReleaseAlarmAction_zoneID_get(long jarg1, BS2ReleaseAlarmAction jarg1_);
  public final static native long new_BS2ReleaseAlarmAction();
  public final static native void delete_BS2ReleaseAlarmAction(long jarg1);
  public final static native int BS2_LED_COLOR_OFF_get();
  public final static native int BS2_LED_COLOR_RED_get();
  public final static native int BS2_LED_COLOR_YELLOW_get();
  public final static native int BS2_LED_COLOR_GREEN_get();
  public final static native int BS2_LED_COLOR_CYAN_get();
  public final static native int BS2_LED_COLOR_BLUE_get();
  public final static native int BS2_LED_COLOR_MAGENTA_get();
  public final static native int BS2_LED_COLOR_WHITE_get();
  public final static native void BS2LedSignal_color_set(long jarg1, BS2LedSignal jarg1_, short jarg2);
  public final static native short BS2LedSignal_color_get(long jarg1, BS2LedSignal jarg1_);
  public final static native void BS2LedSignal_reserved_set(long jarg1, BS2LedSignal jarg1_, long jarg2);
  public final static native long BS2LedSignal_reserved_get(long jarg1, BS2LedSignal jarg1_);
  public final static native void BS2LedSignal_duration_set(long jarg1, BS2LedSignal jarg1_, int jarg2);
  public final static native int BS2LedSignal_duration_get(long jarg1, BS2LedSignal jarg1_);
  public final static native void BS2LedSignal_delay_set(long jarg1, BS2LedSignal jarg1_, int jarg2);
  public final static native int BS2LedSignal_delay_get(long jarg1, BS2LedSignal jarg1_);
  public final static native long new_BS2LedSignal();
  public final static native void delete_BS2LedSignal(long jarg1);
  public final static native void BS2LedAction_count_set(long jarg1, BS2LedAction jarg1_, int jarg2);
  public final static native int BS2LedAction_count_get(long jarg1, BS2LedAction jarg1_);
  public final static native void BS2LedAction_reserved_set(long jarg1, BS2LedAction jarg1_, long jarg2);
  public final static native long BS2LedAction_reserved_get(long jarg1, BS2LedAction jarg1_);
  public final static native void BS2LedAction_signal_set(long jarg1, BS2LedAction jarg1_, long jarg2, BS2LedSignal jarg2_);
  public final static native long BS2LedAction_signal_get(long jarg1, BS2LedAction jarg1_);
  public final static native long new_BS2LedAction();
  public final static native void delete_BS2LedAction(long jarg1);
  public final static native int BS2_BUZZER_TONE_OFF_get();
  public final static native int BS2_BUZZER_TONE_LOW_get();
  public final static native int BS2_BUZZER_TONE_MIDDLE_get();
  public final static native int BS2_BUZZER_TONE_HIGH_get();
  public final static native void BS2BuzzerSignal_tone_set(long jarg1, BS2BuzzerSignal jarg1_, short jarg2);
  public final static native short BS2BuzzerSignal_tone_get(long jarg1, BS2BuzzerSignal jarg1_);
  public final static native void BS2BuzzerSignal_fadeout_set(long jarg1, BS2BuzzerSignal jarg1_, boolean jarg2);
  public final static native boolean BS2BuzzerSignal_fadeout_get(long jarg1, BS2BuzzerSignal jarg1_);
  public final static native void BS2BuzzerSignal_duration_set(long jarg1, BS2BuzzerSignal jarg1_, int jarg2);
  public final static native int BS2BuzzerSignal_duration_get(long jarg1, BS2BuzzerSignal jarg1_);
  public final static native void BS2BuzzerSignal_delay_set(long jarg1, BS2BuzzerSignal jarg1_, int jarg2);
  public final static native int BS2BuzzerSignal_delay_get(long jarg1, BS2BuzzerSignal jarg1_);
  public final static native long new_BS2BuzzerSignal();
  public final static native void delete_BS2BuzzerSignal(long jarg1);
  public final static native void BS2BuzzerAction_count_set(long jarg1, BS2BuzzerAction jarg1_, int jarg2);
  public final static native int BS2BuzzerAction_count_get(long jarg1, BS2BuzzerAction jarg1_);
  public final static native void BS2BuzzerAction_reserved_set(long jarg1, BS2BuzzerAction jarg1_, long jarg2);
  public final static native long BS2BuzzerAction_reserved_get(long jarg1, BS2BuzzerAction jarg1_);
  public final static native void BS2BuzzerAction_signal_set(long jarg1, BS2BuzzerAction jarg1_, long jarg2, BS2BuzzerSignal jarg2_);
  public final static native long BS2BuzzerAction_signal_get(long jarg1, BS2BuzzerAction jarg1_);
  public final static native long new_BS2BuzzerAction();
  public final static native void delete_BS2BuzzerAction(long jarg1);
  public final static native void BS2DisplayAction_duration_set(long jarg1, BS2DisplayAction jarg1_, short jarg2);
  public final static native short BS2DisplayAction_duration_get(long jarg1, BS2DisplayAction jarg1_);
  public final static native void BS2DisplayAction_reserved_set(long jarg1, BS2DisplayAction jarg1_, long jarg2);
  public final static native long BS2DisplayAction_reserved_get(long jarg1, BS2DisplayAction jarg1_);
  public final static native void BS2DisplayAction_displayID_set(long jarg1, BS2DisplayAction jarg1_, long jarg2);
  public final static native long BS2DisplayAction_displayID_get(long jarg1, BS2DisplayAction jarg1_);
  public final static native void BS2DisplayAction_resourceID_set(long jarg1, BS2DisplayAction jarg1_, long jarg2);
  public final static native long BS2DisplayAction_resourceID_get(long jarg1, BS2DisplayAction jarg1_);
  public final static native long new_BS2DisplayAction();
  public final static native void delete_BS2DisplayAction(long jarg1);
  public final static native void BS2SoundAction_count_set(long jarg1, BS2SoundAction jarg1_, short jarg2);
  public final static native short BS2SoundAction_count_get(long jarg1, BS2SoundAction jarg1_);
  public final static native void BS2SoundAction_soundIndex_set(long jarg1, BS2SoundAction jarg1_, int jarg2);
  public final static native int BS2SoundAction_soundIndex_get(long jarg1, BS2SoundAction jarg1_);
  public final static native void BS2SoundAction_delay_set(long jarg1, BS2SoundAction jarg1_, int jarg2);
  public final static native int BS2SoundAction_delay_get(long jarg1, BS2SoundAction jarg1_);
  public final static native void BS2SoundAction_reserved_set(long jarg1, BS2SoundAction jarg1_, long jarg2);
  public final static native long BS2SoundAction_reserved_get(long jarg1, BS2SoundAction jarg1_);
  public final static native long new_BS2SoundAction();
  public final static native void delete_BS2SoundAction(long jarg1);
  public final static native int BS2_LIFT_ACTION_ACTIVATE_FLOORS_get();
  public final static native int BS2_LIFT_ACTION_DEACTIVATE_FLOORS_get();
  public final static native int BS2_LIFT_ACTION_RELEASE_FLOORS_get();
  public final static native void BS2LiftAction_liftID_set(long jarg1, BS2LiftAction jarg1_, long jarg2);
  public final static native long BS2LiftAction_liftID_get(long jarg1, BS2LiftAction jarg1_);
  public final static native void BS2LiftAction_type_set(long jarg1, BS2LiftAction jarg1_, short jarg2);
  public final static native short BS2LiftAction_type_get(long jarg1, BS2LiftAction jarg1_);
  public final static native long new_BS2LiftAction();
  public final static native void delete_BS2LiftAction(long jarg1);
  public final static native int BS2_STOP_NONE_get();
  public final static native int BS2_STOP_ON_DOOR_CLOSED_get();
  public final static native int BS2_STOP_BY_CMD_RUN_ACTION_get();
  public final static native int BS2_STOP_NUM_get();
  public final static native void BS2Action_deviceID_set(long jarg1, BS2Action jarg1_, long jarg2);
  public final static native long BS2Action_deviceID_get(long jarg1, BS2Action jarg1_);
  public final static native void BS2Action_type_set(long jarg1, BS2Action jarg1_, short jarg2);
  public final static native short BS2Action_type_get(long jarg1, BS2Action jarg1_);
  public final static native void BS2Action_stopFlag_set(long jarg1, BS2Action jarg1_, short jarg2);
  public final static native short BS2Action_stopFlag_get(long jarg1, BS2Action jarg1_);
  public final static native void BS2Action_delay_set(long jarg1, BS2Action jarg1_, int jarg2);
  public final static native int BS2Action_delay_get(long jarg1, BS2Action jarg1_);
  public final static native void BS2Action_relay_set(long jarg1, BS2Action jarg1_, long jarg2, BS2RelayAction jarg2_);
  public final static native long BS2Action_relay_get(long jarg1, BS2Action jarg1_);
  public final static native void BS2Action_outputPort_set(long jarg1, BS2Action jarg1_, long jarg2, BS2OutputPortAction jarg2_);
  public final static native long BS2Action_outputPort_get(long jarg1, BS2Action jarg1_);
  public final static native void BS2Action_display_set(long jarg1, BS2Action jarg1_, long jarg2, BS2DisplayAction jarg2_);
  public final static native long BS2Action_display_get(long jarg1, BS2Action jarg1_);
  public final static native void BS2Action_sound_set(long jarg1, BS2Action jarg1_, long jarg2, BS2SoundAction jarg2_);
  public final static native long BS2Action_sound_get(long jarg1, BS2Action jarg1_);
  public final static native void BS2Action_led_set(long jarg1, BS2Action jarg1_, long jarg2, BS2LedAction jarg2_);
  public final static native long BS2Action_led_get(long jarg1, BS2Action jarg1_);
  public final static native void BS2Action_buzzer_set(long jarg1, BS2Action jarg1_, long jarg2, BS2BuzzerAction jarg2_);
  public final static native long BS2Action_buzzer_get(long jarg1, BS2Action jarg1_);
  public final static native void BS2Action_lift_set(long jarg1, BS2Action jarg1_, long jarg2, BS2LiftAction jarg2_);
  public final static native long BS2Action_lift_get(long jarg1, BS2Action jarg1_);
  public final static native long new_BS2Action();
  public final static native void delete_BS2Action(long jarg1);
  public final static native int BS2_MAX_READERS_PER_APB_ZONE_get();
  public final static native int BS2_MAX_BYPASS_GROUPS_PER_APB_ZONE_get();
  public final static native int BS2_MAX_APB_ALARM_ACTION_get();
  public final static native int BS2_RESET_DURATION_DEFAULT_get();
  public final static native int BS2_APB_ZONE_HARD_get();
  public final static native int BS2_APB_ZONE_SOFT_get();
  public final static native int BS2_APB_ZONE_READER_NONE_get();
  public final static native int BS2_APB_ZONE_READER_ENTRY_get();
  public final static native int BS2_APB_ZONE_READER_EXIT_get();
  public final static native void BS2ApbMember_deviceID_set(long jarg1, BS2ApbMember jarg1_, long jarg2);
  public final static native long BS2ApbMember_deviceID_get(long jarg1, BS2ApbMember jarg1_);
  public final static native void BS2ApbMember_type_set(long jarg1, BS2ApbMember jarg1_, short jarg2);
  public final static native short BS2ApbMember_type_get(long jarg1, BS2ApbMember jarg1_);
  public final static native void BS2ApbMember_reserved_set(long jarg1, BS2ApbMember jarg1_, long jarg2);
  public final static native long BS2ApbMember_reserved_get(long jarg1, BS2ApbMember jarg1_);
  public final static native long new_BS2ApbMember();
  public final static native void delete_BS2ApbMember(long jarg1);
  public final static native void BS2AntiPassbackZone_zoneID_set(long jarg1, BS2AntiPassbackZone jarg1_, long jarg2);
  public final static native long BS2AntiPassbackZone_zoneID_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_name_set(long jarg1, BS2AntiPassbackZone jarg1_, String jarg2);
  public final static native String BS2AntiPassbackZone_name_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_type_set(long jarg1, BS2AntiPassbackZone jarg1_, short jarg2);
  public final static native short BS2AntiPassbackZone_type_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_numReaders_set(long jarg1, BS2AntiPassbackZone jarg1_, short jarg2);
  public final static native short BS2AntiPassbackZone_numReaders_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_numBypassGroups_set(long jarg1, BS2AntiPassbackZone jarg1_, short jarg2);
  public final static native short BS2AntiPassbackZone_numBypassGroups_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_disabled_set(long jarg1, BS2AntiPassbackZone jarg1_, boolean jarg2);
  public final static native boolean BS2AntiPassbackZone_disabled_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_alarmed_set(long jarg1, BS2AntiPassbackZone jarg1_, boolean jarg2);
  public final static native boolean BS2AntiPassbackZone_alarmed_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_reserved_set(long jarg1, BS2AntiPassbackZone jarg1_, long jarg2);
  public final static native long BS2AntiPassbackZone_reserved_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_resetDuration_set(long jarg1, BS2AntiPassbackZone jarg1_, long jarg2);
  public final static native long BS2AntiPassbackZone_resetDuration_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_alarm_set(long jarg1, BS2AntiPassbackZone jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2AntiPassbackZone_alarm_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_readers_set(long jarg1, BS2AntiPassbackZone jarg1_, long jarg2, BS2ApbMember jarg2_);
  public final static native long BS2AntiPassbackZone_readers_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_reserved2_set(long jarg1, BS2AntiPassbackZone jarg1_, long jarg2);
  public final static native long BS2AntiPassbackZone_reserved2_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZone_bypassGroupIDs_set(long jarg1, BS2AntiPassbackZone jarg1_, long jarg2);
  public final static native long BS2AntiPassbackZone_bypassGroupIDs_get(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native long new_BS2AntiPassbackZone();
  public final static native void delete_BS2AntiPassbackZone(long jarg1);
  public final static native int BS2_MAX_AUTH_GROUP_ITEMS_get();
  public final static native int BS2_MAX_AUTH_GROUP_NAME_LEN_get();
  public final static native int BS2_INVALID_AUTH_GROUP_ID_get();
  public final static native void BS2AuthGroup_id_set(long jarg1, BS2AuthGroup jarg1_, long jarg2);
  public final static native long BS2AuthGroup_id_get(long jarg1, BS2AuthGroup jarg1_);
  public final static native void BS2AuthGroup_name_set(long jarg1, BS2AuthGroup jarg1_, String jarg2);
  public final static native String BS2AuthGroup_name_get(long jarg1, BS2AuthGroup jarg1_);
  public final static native void BS2AuthGroup_reserved_set(long jarg1, BS2AuthGroup jarg1_, long jarg2);
  public final static native long BS2AuthGroup_reserved_get(long jarg1, BS2AuthGroup jarg1_);
  public final static native long new_BS2AuthGroup();
  public final static native void delete_BS2AuthGroup(long jarg1);
  public final static native void BS2AuthGroupUsers_authGroupID_set(long jarg1, BS2AuthGroupUsers jarg1_, long jarg2);
  public final static native long BS2AuthGroupUsers_authGroupID_get(long jarg1, BS2AuthGroupUsers jarg1_);
  public final static native void BS2AuthGroupUsers_numUsers_set(long jarg1, BS2AuthGroupUsers jarg1_, long jarg2);
  public final static native long BS2AuthGroupUsers_numUsers_get(long jarg1, BS2AuthGroupUsers jarg1_);
  public final static native void BS2AuthGroupUsers_userID_set(long jarg1, BS2AuthGroupUsers jarg1_, long jarg2);
  public final static native long BS2AuthGroupUsers_userID_get(long jarg1, BS2AuthGroupUsers jarg1_);
  public final static native long new_BS2AuthGroupUsers();
  public final static native void delete_BS2AuthGroupUsers(long jarg1);
  public final static native int BS2_MAX_BLACK_LIST_SLOTS_get();
  public final static native void BS2BlackList_cardID_set(long jarg1, BS2BlackList jarg1_, long jarg2);
  public final static native long BS2BlackList_cardID_get(long jarg1, BS2BlackList jarg1_);
  public final static native void BS2BlackList_issueCount_set(long jarg1, BS2BlackList jarg1_, int jarg2);
  public final static native int BS2BlackList_issueCount_get(long jarg1, BS2BlackList jarg1_);
  public final static native long new_BS2BlackList();
  public final static native void delete_BS2BlackList(long jarg1);
  public final static native int BS2_CARD_DATA_SIZE_get();
  public final static native int BS2_CARD_ID_SIZE_get();
  public final static native int BS2_CARD_TYPE_UNKNOWN_get();
  public final static native int BS2_CARD_TYPE_CSN_get();
  public final static native int BS2_CARD_TYPE_SECURE_get();
  public final static native int BS2_CARD_TYPE_ACCESS_get();
  public final static native int BS2_CARD_TYPE_WIEGAND_get();
  public final static native int BS2_CARD_TYPE_CONFIG_CARD_get();
  public final static native void BS2CSNCard_type_set(long jarg1, BS2CSNCard jarg1_, short jarg2);
  public final static native short BS2CSNCard_type_get(long jarg1, BS2CSNCard jarg1_);
  public final static native void BS2CSNCard_size_set(long jarg1, BS2CSNCard jarg1_, short jarg2);
  public final static native short BS2CSNCard_size_get(long jarg1, BS2CSNCard jarg1_);
  public final static native void BS2CSNCard_data_set(long jarg1, BS2CSNCard jarg1_, long jarg2);
  public final static native long BS2CSNCard_data_get(long jarg1, BS2CSNCard jarg1_);
  public final static native long new_BS2CSNCard();
  public final static native void delete_BS2CSNCard(long jarg1);
  public final static native int BS2_MAX_TIME_PERIODS_PER_DAY_get();
  public final static native void BS2TimePeriod_startTime_set(long jarg1, BS2TimePeriod jarg1_, short jarg2);
  public final static native short BS2TimePeriod_startTime_get(long jarg1, BS2TimePeriod jarg1_);
  public final static native void BS2TimePeriod_endTime_set(long jarg1, BS2TimePeriod jarg1_, short jarg2);
  public final static native short BS2TimePeriod_endTime_get(long jarg1, BS2TimePeriod jarg1_);
  public final static native long new_BS2TimePeriod();
  public final static native void delete_BS2TimePeriod(long jarg1);
  public final static native void BS2DaySchedule_numPeriods_set(long jarg1, BS2DaySchedule jarg1_, short jarg2);
  public final static native short BS2DaySchedule_numPeriods_get(long jarg1, BS2DaySchedule jarg1_);
  public final static native void BS2DaySchedule_reserved_set(long jarg1, BS2DaySchedule jarg1_, long jarg2);
  public final static native long BS2DaySchedule_reserved_get(long jarg1, BS2DaySchedule jarg1_);
  public final static native void BS2DaySchedule_periods_set(long jarg1, BS2DaySchedule jarg1_, long jarg2, BS2TimePeriod jarg2_);
  public final static native long BS2DaySchedule_periods_get(long jarg1, BS2DaySchedule jarg1_);
  public final static native long new_BS2DaySchedule();
  public final static native void delete_BS2DaySchedule(long jarg1);
  public final static native int BS2_INVALID_DEVICE_ID_get();
  public final static native int BS2_MAX_DOOR_NAME_LEN_get();
  public final static native int BS2_MAX_DUAL_AUTH_APPROVAL_GROUP_get();
  public final static native int BS2_DEFAULT_AUTO_LOCK_TIMEOUT_get();
  public final static native int BS2_DEFAULT_HELD_OPEN_TIMEOUT_get();
  public final static native int BS2_DEFAULT_DUAL_AUTH_TIMEOUT_get();
  public final static native int BS2_INVALID_DOOR_ID_get();
  public final static native int BS2_MAX_HELD_OPEN_ALARM_ACTION_get();
  public final static native int BS2_MAX_FORCED_OPEN_ALARM_ACTION_get();
  public final static native int BS2_DUAL_AUTH_APPROVAL_NONE_get();
  public final static native int BS2_DUAL_AUTH_APPROVAL_LAST_get();
  public final static native int BS2_DUAL_AUTH_NO_DEVICE_get();
  public final static native int BS2_DUAL_AUTH_ENTRY_DEVICE_ONLY_get();
  public final static native int BS2_DUAL_AUTH_EXIT_DEVICE_ONLY_get();
  public final static native int BS2_DUAL_AUTH_BOTH_DEVICE_get();
  public final static native void BS2DoorRelay_deviceID_set(long jarg1, BS2DoorRelay jarg1_, long jarg2);
  public final static native long BS2DoorRelay_deviceID_get(long jarg1, BS2DoorRelay jarg1_);
  public final static native void BS2DoorRelay_port_set(long jarg1, BS2DoorRelay jarg1_, short jarg2);
  public final static native short BS2DoorRelay_port_get(long jarg1, BS2DoorRelay jarg1_);
  public final static native void BS2DoorRelay_reserved_set(long jarg1, BS2DoorRelay jarg1_, long jarg2);
  public final static native long BS2DoorRelay_reserved_get(long jarg1, BS2DoorRelay jarg1_);
  public final static native long new_BS2DoorRelay();
  public final static native void delete_BS2DoorRelay(long jarg1);
  public final static native void BS2DoorSensor_deviceID_set(long jarg1, BS2DoorSensor jarg1_, long jarg2);
  public final static native long BS2DoorSensor_deviceID_get(long jarg1, BS2DoorSensor jarg1_);
  public final static native void BS2DoorSensor_port_set(long jarg1, BS2DoorSensor jarg1_, short jarg2);
  public final static native short BS2DoorSensor_port_get(long jarg1, BS2DoorSensor jarg1_);
  public final static native void BS2DoorSensor_switchType_set(long jarg1, BS2DoorSensor jarg1_, short jarg2);
  public final static native short BS2DoorSensor_switchType_get(long jarg1, BS2DoorSensor jarg1_);
  public final static native void BS2DoorSensor_reserved_set(long jarg1, BS2DoorSensor jarg1_, long jarg2);
  public final static native long BS2DoorSensor_reserved_get(long jarg1, BS2DoorSensor jarg1_);
  public final static native long new_BS2DoorSensor();
  public final static native void delete_BS2DoorSensor(long jarg1);
  public final static native void BS2ExitButton_deviceID_set(long jarg1, BS2ExitButton jarg1_, long jarg2);
  public final static native long BS2ExitButton_deviceID_get(long jarg1, BS2ExitButton jarg1_);
  public final static native void BS2ExitButton_port_set(long jarg1, BS2ExitButton jarg1_, short jarg2);
  public final static native short BS2ExitButton_port_get(long jarg1, BS2ExitButton jarg1_);
  public final static native void BS2ExitButton_switchType_set(long jarg1, BS2ExitButton jarg1_, short jarg2);
  public final static native short BS2ExitButton_switchType_get(long jarg1, BS2ExitButton jarg1_);
  public final static native void BS2ExitButton_reserved_set(long jarg1, BS2ExitButton jarg1_, long jarg2);
  public final static native long BS2ExitButton_reserved_get(long jarg1, BS2ExitButton jarg1_);
  public final static native long new_BS2ExitButton();
  public final static native void delete_BS2ExitButton(long jarg1);
  public final static native int BS2_DOOR_ALARM_NONE_get();
  public final static native int BS2_DOOR_ALARM_HELD_OPEN_get();
  public final static native int BS2_DOOR_ALARM_FORCED_OPEN_get();
  public final static native int BS2_DOOR_FLAG_NONE_get();
  public final static native int BS2_DOOR_FLAG_SCHEDULE_get();
  public final static native int BS2_DOOR_FLAG_OPERATOR_get();
  public final static native int BS2_DOOR_FLAG_EMERGENCY_get();
  public final static native int BS2_DOOR_ALARM_FLAG_NONE_get();
  public final static native int BS2_DOOR_ALARM_FLAG_FORCED_OPEN_get();
  public final static native int BS2_DOOR_ALARM_FLAG_HELD_OPEN_get();
  public final static native int BS2_DOOR_ALARM_FLAG_APB_get();
  public final static native void BS2DoorStatus_id_set(long jarg1, BS2DoorStatus jarg1_, long jarg2);
  public final static native long BS2DoorStatus_id_get(long jarg1, BS2DoorStatus jarg1_);
  public final static native void BS2DoorStatus_opened_set(long jarg1, BS2DoorStatus jarg1_, boolean jarg2);
  public final static native boolean BS2DoorStatus_opened_get(long jarg1, BS2DoorStatus jarg1_);
  public final static native void BS2DoorStatus_unlocked_set(long jarg1, BS2DoorStatus jarg1_, boolean jarg2);
  public final static native boolean BS2DoorStatus_unlocked_get(long jarg1, BS2DoorStatus jarg1_);
  public final static native void BS2DoorStatus_heldOpened_set(long jarg1, BS2DoorStatus jarg1_, boolean jarg2);
  public final static native boolean BS2DoorStatus_heldOpened_get(long jarg1, BS2DoorStatus jarg1_);
  public final static native void BS2DoorStatus_unlockFlags_set(long jarg1, BS2DoorStatus jarg1_, short jarg2);
  public final static native short BS2DoorStatus_unlockFlags_get(long jarg1, BS2DoorStatus jarg1_);
  public final static native void BS2DoorStatus_lockFlags_set(long jarg1, BS2DoorStatus jarg1_, short jarg2);
  public final static native short BS2DoorStatus_lockFlags_get(long jarg1, BS2DoorStatus jarg1_);
  public final static native void BS2DoorStatus_alarmFlags_set(long jarg1, BS2DoorStatus jarg1_, short jarg2);
  public final static native short BS2DoorStatus_alarmFlags_get(long jarg1, BS2DoorStatus jarg1_);
  public final static native void BS2DoorStatus_reserved_set(long jarg1, BS2DoorStatus jarg1_, long jarg2);
  public final static native long BS2DoorStatus_reserved_get(long jarg1, BS2DoorStatus jarg1_);
  public final static native void BS2DoorStatus_lastOpenTime_set(long jarg1, BS2DoorStatus jarg1_, long jarg2);
  public final static native long BS2DoorStatus_lastOpenTime_get(long jarg1, BS2DoorStatus jarg1_);
  public final static native long new_BS2DoorStatus();
  public final static native void delete_BS2DoorStatus(long jarg1);
  public final static native void BS2Door_doorID_set(long jarg1, BS2Door jarg1_, long jarg2);
  public final static native long BS2Door_doorID_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_name_set(long jarg1, BS2Door jarg1_, String jarg2);
  public final static native String BS2Door_name_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_entryDeviceID_set(long jarg1, BS2Door jarg1_, long jarg2);
  public final static native long BS2Door_entryDeviceID_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_exitDeviceID_set(long jarg1, BS2Door jarg1_, long jarg2);
  public final static native long BS2Door_exitDeviceID_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_relay_set(long jarg1, BS2Door jarg1_, long jarg2, BS2DoorRelay jarg2_);
  public final static native long BS2Door_relay_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_sensor_set(long jarg1, BS2Door jarg1_, long jarg2, BS2DoorSensor jarg2_);
  public final static native long BS2Door_sensor_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_button_set(long jarg1, BS2Door jarg1_, long jarg2, BS2ExitButton jarg2_);
  public final static native long BS2Door_button_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_autoLockTimeout_set(long jarg1, BS2Door jarg1_, long jarg2);
  public final static native long BS2Door_autoLockTimeout_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_heldOpenTimeout_set(long jarg1, BS2Door jarg1_, long jarg2);
  public final static native long BS2Door_heldOpenTimeout_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_instantLock_set(long jarg1, BS2Door jarg1_, boolean jarg2);
  public final static native boolean BS2Door_instantLock_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_unlockFlags_set(long jarg1, BS2Door jarg1_, short jarg2);
  public final static native short BS2Door_unlockFlags_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_lockFlags_set(long jarg1, BS2Door jarg1_, short jarg2);
  public final static native short BS2Door_lockFlags_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_unconditionalLock_set(long jarg1, BS2Door jarg1_, boolean jarg2);
  public final static native boolean BS2Door_unconditionalLock_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_forcedOpenAlarm_set(long jarg1, BS2Door jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2Door_forcedOpenAlarm_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_heldOpenAlarm_set(long jarg1, BS2Door jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2Door_heldOpenAlarm_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_dualAuthScheduleID_set(long jarg1, BS2Door jarg1_, long jarg2);
  public final static native long BS2Door_dualAuthScheduleID_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_dualAuthDevice_set(long jarg1, BS2Door jarg1_, short jarg2);
  public final static native short BS2Door_dualAuthDevice_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_dualAuthApprovalType_set(long jarg1, BS2Door jarg1_, short jarg2);
  public final static native short BS2Door_dualAuthApprovalType_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_dualAuthTimeout_set(long jarg1, BS2Door jarg1_, long jarg2);
  public final static native long BS2Door_dualAuthTimeout_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_numDualAuthApprovalGroups_set(long jarg1, BS2Door jarg1_, short jarg2);
  public final static native short BS2Door_numDualAuthApprovalGroups_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_reserved2_set(long jarg1, BS2Door jarg1_, long jarg2);
  public final static native long BS2Door_reserved2_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_dualAuthApprovalGroupID_set(long jarg1, BS2Door jarg1_, long jarg2);
  public final static native long BS2Door_dualAuthApprovalGroupID_get(long jarg1, BS2Door jarg1_);
  public final static native void BS2Door_apbZone_set(long jarg1, BS2Door jarg1_, long jarg2, BS2AntiPassbackZone jarg2_);
  public final static native long BS2Door_apbZone_get(long jarg1, BS2Door jarg1_);
  public final static native long new_BS2Door();
  public final static native void delete_BS2Door(long jarg1);
  public final static native int BS2_INVALID_EVENT_ID_get();
  public final static native int BS2_EVENT_MASK_get();
  public final static native int BS2_EVENT_VERIFY_SUCCESS_get();
  public final static native int BS2_EVENT_VERIFY_FAIL_get();
  public final static native int BS2_EVENT_VERIFY_DURESS_get();
  public final static native int BS2_EVENT_IDENTIFY_SUCCESS_get();
  public final static native int BS2_EVENT_IDENTIFY_FAIL_get();
  public final static native int BS2_EVENT_IDENTIFY_DURESS_get();
  public final static native int BS2_EVENT_DUAL_AUTH_SUCCESS_get();
  public final static native int BS2_EVENT_DUAL_AUTH_FAIL_get();
  public final static native int BS2_EVENT_AUTH_FAILED_get();
  public final static native int BS2_EVENT_ACCESS_DENIED_get();
  public final static native int BS2_EVENT_ACCESS_EXCUSED_get();
  public final static native int BS2_EVENT_FAKE_FINGER_DETECTED_get();
  public final static native int BS2_EVENT_USER_ENROLL_SUCCESS_get();
  public final static native int BS2_EVENT_USER_ENROLL_FAIL_get();
  public final static native int BS2_EVENT_USER_UPDATE_SUCCESS_get();
  public final static native int BS2_EVENT_USER_UPDATE_FAIL_get();
  public final static native int BS2_EVENT_USER_DELETE_SUCCESS_get();
  public final static native int BS2_EVENT_USER_DELETE_FAIL_get();
  public final static native int BS2_EVENT_USER_DELETE_ALL_SUCCESS_get();
  public final static native int BS2_EVENT_USER_ISSUE_AOC_SUCCESS_get();
  public final static native int BS2_EVENT_DEVICE_SYSTEM_RESET_get();
  public final static native int BS2_EVENT_DEVICE_SYSTEM_STARTED_get();
  public final static native int BS2_EVENT_DEVICE_TIME_SET_get();
  public final static native int BS2_EVENT_DEVICE_TIMEZONE_SET_get();
  public final static native int BS2_EVENT_DEVICE_DST_SET_get();
  public final static native int BS2_EVENT_DEVICE_LINK_CONNECTED_get();
  public final static native int BS2_EVENT_DEVICE_LINK_DISCONNETED_get();
  public final static native int BS2_EVENT_DEVICE_DHCP_SUCCESS_get();
  public final static native int BS2_EVENT_DEVICE_ADMIN_MENU_get();
  public final static native int BS2_EVENT_DEVICE_UI_LOCKED_get();
  public final static native int BS2_EVENT_DEVICE_UI_UNLOCKED_get();
  public final static native int BS2_EVENT_DEVICE_COMM_LOCKED_get();
  public final static native int BS2_EVENT_DEVICE_COMM_UNLOCKED_get();
  public final static native int BS2_EVENT_DEVICE_TCP_CONNECTED_get();
  public final static native int BS2_EVENT_DEVICE_TCP_DISCONNECTED_get();
  public final static native int BS2_EVENT_DEVICE_RS485_CONNECTED_get();
  public final static native int BS2_EVENT_DEVICE_RS485_DISCONNCTED_get();
  public final static native int BS2_EVENT_DEVICE_INPUT_DETECTED_get();
  public final static native int BS2_EVENT_DEVICE_TAMPER_ON_get();
  public final static native int BS2_EVENT_DEVICE_TAMPER_OFF_get();
  public final static native int BS2_EVENT_DEVICE_EVENT_LOG_CLEARED_get();
  public final static native int BS2_EVENT_DEVICE_FIRMWARE_UPGRADED_get();
  public final static native int BS2_EVENT_DEVICE_RESOURCE_UPGRADED_get();
  public final static native int BS2_EVENT_DEVICE_CONFIG_RESET_get();
  public final static native int BS2_EVENT_DEVICE_DATABASE_RESET_get();
  public final static native int BS2_EVENT_DEVICE_FACTORY_RESET_get();
  public final static native int BS2_EVENT_DEVICE_CONFIG_RESET_EX_get();
  public final static native int BS2_EVENT_SUPERVISED_INPUT_SHORT_get();
  public final static native int BS2_EVENT_SUPERVISED_INPUT_OPEN_get();
  public final static native int BS2_EVENT_DEVICE_AC_FAIL_get();
  public final static native int BS2_EVENT_DEVICE_AC_SUCCESS_get();
  public final static native int BS2_EVENT_DOOR_UNLOCKED_get();
  public final static native int BS2_EVENT_DOOR_LOCKED_get();
  public final static native int BS2_EVENT_DOOR_OPENED_get();
  public final static native int BS2_EVENT_DOOR_CLOSED_get();
  public final static native int BS2_EVENT_DOOR_FORCED_OPEN_get();
  public final static native int BS2_EVENT_DOOR_HELD_OPEN_get();
  public final static native int BS2_EVENT_DOOR_FORCED_OPEN_ALARM_get();
  public final static native int BS2_EVENT_DOOR_FORCED_OPEN_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_DOOR_HELD_OPEN_ALARM_get();
  public final static native int BS2_EVENT_DOOR_HELD_OPEN_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_DOOR_APB_ALARM_get();
  public final static native int BS2_EVENT_DOOR_APB_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_DOOR_RELEASE_get();
  public final static native int BS2_EVENT_DOOR_LOCK_get();
  public final static native int BS2_EVENT_DOOR_UNLOCK_get();
  public final static native int BS2_EVENT_ZONE_APB_VIOLATION_get();
  public final static native int BS2_EVENT_ZONE_APB_ALARM_get();
  public final static native int BS2_EVENT_ZONE_APB_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_ZONE_TIMED_APB_VIOLATION_get();
  public final static native int BS2_EVENT_ZONE_TIMED_APB_ALARM_get();
  public final static native int BS2_EVENT_ZONE_TIMED_APB_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_ZONE_FIRE_ALARM_INPUT_get();
  public final static native int BS2_EVENT_ZONE_FIRE_ALARM_get();
  public final static native int BS2_EVENT_ZONE_FIRE_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_ZONE_SCHEDULED_LOCK_VIOLATION_get();
  public final static native int BS2_EVENT_ZONE_SCHEDULED_LOCK_START_get();
  public final static native int BS2_EVENT_ZONE_SCHEDULED_LOCK_END_get();
  public final static native int BS2_EVENT_ZONE_SCHEDULED_UNLOCK_START_get();
  public final static native int BS2_EVENT_ZONE_SCHEDULED_UNLOCK_END_get();
  public final static native int BS2_EVENT_ZONE_SCHEDULED_LOCK_ALARM_get();
  public final static native int BS2_EVENT_ZONE_SCHEDULED_LOCK_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_ZONE_FORCED_LOCK_VIOLATION_get();
  public final static native int BS2_EVENT_ZONE_FORCED_LOCK_START_get();
  public final static native int BS2_EVENT_ZONE_FORCED_LOCK_END_get();
  public final static native int BS2_EVENT_ZONE_FORCED_UNLOCK_START_get();
  public final static native int BS2_EVENT_ZONE_FORCED_UNLOCK_END_get();
  public final static native int BS2_EVENT_ZONE_FORCED_LOCK_ALARM_get();
  public final static native int BS2_EVENT_ZONE_FORCED_LOCK_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_FLOOR_ACTIVATED_get();
  public final static native int BS2_EVENT_FLOOR_DEACTIVATED_get();
  public final static native int BS2_EVENT_FLOOR_RELEASE_get();
  public final static native int BS2_EVENT_FLOOR_ACTIVATE_get();
  public final static native int BS2_EVENT_FLOOR_DEACTIVATE_get();
  public final static native int BS2_EVENT_LIFT_ALARM_INPUT_get();
  public final static native int BS2_EVENT_LIFT_ALARM_get();
  public final static native int BS2_EVENT_LIFT_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_ALL_FLOOR_ACTIVATED_get();
  public final static native int BS2_EVENT_ALL_FLOOR_DEACTIVATED_get();
  public final static native int BS2_EVENT_GLOBAL_APB_EXCUSED_get();
  public final static native int BS2_EVENT_DEVICE_ZONE_ENTRANCE_LIMIT_VIOLATION_get();
  public final static native int BS2_EVENT_DEVICE_ZONE_ENTRANCE_LIMIT_ALARM_get();
  public final static native int BS2_EVENT_DEVICE_ZONE_ENTRANCE_LIMIT_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_VIOLATION_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_ARM_GRANTED_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_ARM_SUCCESS_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_ARM_FAIL_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_DISARM_GRANTED_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_DISARM_SUCCESS_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_DISARM_FAIL_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_INPUT_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_CLEAR_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_ARM_DENIED_get();
  public final static native int BS2_EVENT_ZONE_INTRUSION_ALARM_DISARM_DENIED_get();
  public final static native int BS2_EVENT_ZONE_INTERLOCK_VIOLATION_get();
  public final static native int BS2_EVENT_ZONE_INTERLOCK_ALARM_get();
  public final static native int BS2_EVENT_ZONE_INTERLOCK_ALARM_DOOR_OPEN_DENIED_get();
  public final static native int BS2_EVENT_ZONE_INTERLOCK_ALARM_INDOOR_DENIED_get();
  public final static native int BS2_EVENT_ZONE_INTERLOCK_ALARM_CLEAR_get();
  public final static native int BS2_SUB_EVENT_MASK_get();
  public final static native int BS2_SUB_EVENT_VERIFY_ID_PIN_get();
  public final static native int BS2_SUB_EVENT_VERIFY_ID_FINGER_get();
  public final static native int BS2_SUB_EVENT_VERIFY_ID_FINGER_PIN_get();
  public final static native int BS2_SUB_EVENT_VERIFY_ID_FACE_get();
  public final static native int BS2_SUB_EVENT_VERIFY_ID_FACE_PIN_get();
  public final static native int BS2_SUB_EVENT_VERIFY_CARD_get();
  public final static native int BS2_SUB_EVENT_VERIFY_CARD_PIN_get();
  public final static native int BS2_SUB_EVENT_VERIFY_CARD_FINGER_get();
  public final static native int BS2_SUB_EVENT_VERIFY_CARD_FINGER_PIN_get();
  public final static native int BS2_SUB_EVENT_VERIFY_CARD_FACE_get();
  public final static native int BS2_SUB_EVENT_VERIFY_CARD_FACE_PIN_get();
  public final static native int BS2_SUB_EVENT_VERIFY_AOC_get();
  public final static native int BS2_SUB_EVENT_VERIFY_AOC_PIN_get();
  public final static native int BS2_SUB_EVENT_VERIFY_AOC_FINGER_get();
  public final static native int BS2_SUB_EVENT_VERIFY_AOC_FINGER_PIN_get();
  public final static native int BS2_SUB_EVENT_IDENTIFY_FINGER_get();
  public final static native int BS2_SUB_EVENT_IDENTIFY_FINGER_PIN_get();
  public final static native int BS2_SUB_EVENT_IDENTIFY_FACE_get();
  public final static native int BS2_SUB_EVENT_IDENTIFY_FACE_PIN_get();
  public final static native int BS2_SUB_EVENT_DUAL_AUTH_FAIL_TIMEOUT_get();
  public final static native int BS2_SUB_EVENT_DUAL_AUTH_FAIL_ACCESS_GROUP_get();
  public final static native int BS2_SUB_EVENT_CREDENTIAL_ID_get();
  public final static native int BS2_SUB_EVENT_CREDENTIAL_CARD_get();
  public final static native int BS2_SUB_EVENT_CREDENTIAL_PIN_get();
  public final static native int BS2_SUB_EVENT_CREDENTIAL_FINGER_get();
  public final static native int BS2_SUB_EVENT_CREDENTIAL_FACE_get();
  public final static native int BS2_SUB_EVENT_CREDENTIAL_AOC_PIN_get();
  public final static native int BS2_SUB_EVENT_CREDENTIAL_AOC_FINGER_get();
  public final static native int BS2_SUB_EVENT_AUTH_FAIL_INVALID_AUTH_MODE_get();
  public final static native int BS2_SUB_EVENT_AUTH_FAIL_INVALID_CREDENTIAL_get();
  public final static native int BS2_SUB_EVENT_AUTH_FAIL_TIMEOUT_get();
  public final static native int BS2_SUB_EVENT_AUTH_FAIL_MATCHING_REFUSAL_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_ACCESS_GROUP_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_DISABLED_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_EXPIRED_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_ON_BLACKLIST_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_APB_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_TIMED_APB_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_SCHEDULED_LOCK_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_FORCED_LOCK_get();
  public final static native int BS2_SUB_EVENT_ACCESS_EXCUSED_APB_get();
  public final static native int BS2_SUB_EVENT_ACCESS_EXCUSED_TIMED_APB_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_FACE_DETECTION_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_CAMERA_CAPTURE_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_FAKE_FINGER_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_DEVICE_ZONE_ENTRANCE_LIMIT_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_INTRUSION_ALARM_get();
  public final static native int BS2_SUB_EVENT_ACCESS_DENIED_INTERLOCK_get();
  public final static native int BS2_SUB_EVENT_DOOR_FLAG_SCHEDULE_get();
  public final static native int BS2_SUB_EVENT_DOOR_FLAG_OPERATOR_get();
  public final static native int BS2_SUB_EVENT_DOOR_FLAG_EMERGENCY_get();
  public final static native int BS2_SUB_EVENT_FLOOR_FLAG_SCHEDULE_get();
  public final static native int BS2_SUB_EVENT_FLOOR_FLAG_OPERATOR_get();
  public final static native int BS2_SUB_EVENT_FLOOR_FLAG_EMERGENCY_get();
  public final static native int BS2_SUB_EVENT_ZONE_HARD_APB_get();
  public final static native int BS2_SUB_EVENT_ZONE_SOFT_APB_get();
  public final static native int BS2_SUB_EVENT_DEVICE_ZONE_HARD_ENTRANCE_LIMIT_COUNT_get();
  public final static native int BS2_SUB_EVENT_DEVICE_ZONE_SOFT_ENTRANCE_LIMIT_COUNT_get();
  public final static native int BS2_SUB_EVENT_DEVICE_ZONE_HARD_ENTRANCE_LIMIT_TIME_get();
  public final static native int BS2_SUB_EVENT_DEVICE_ZONE_SOFT_ENTRANCE_LIMIT_TIME_get();
  public final static native int BS2_SUB_EVENT_INTERLOCKZONE_DOOR_OPEN_get();
  public final static native int BS2_SUB_EVENT_INTERLOCK_INPUT_DETECT_get();
  public final static native void BS2EventFilter_userID_set(long jarg1, BS2EventFilter jarg1_, String jarg2);
  public final static native String BS2EventFilter_userID_get(long jarg1, BS2EventFilter jarg1_);
  public final static native void BS2EventFilter_start_set(long jarg1, BS2EventFilter jarg1_, long jarg2);
  public final static native long BS2EventFilter_start_get(long jarg1, BS2EventFilter jarg1_);
  public final static native void BS2EventFilter_end_set(long jarg1, BS2EventFilter jarg1_, long jarg2);
  public final static native long BS2EventFilter_end_get(long jarg1, BS2EventFilter jarg1_);
  public final static native void BS2EventFilter_event_set(long jarg1, BS2EventFilter jarg1_, int jarg2);
  public final static native int BS2EventFilter_event_get(long jarg1, BS2EventFilter jarg1_);
  public final static native void BS2EventFilter_tnaKey_set(long jarg1, BS2EventFilter jarg1_, short jarg2);
  public final static native short BS2EventFilter_tnaKey_get(long jarg1, BS2EventFilter jarg1_);
  public final static native void BS2EventFilter_reserved_set(long jarg1, BS2EventFilter jarg1_, long jarg2);
  public final static native long BS2EventFilter_reserved_get(long jarg1, BS2EventFilter jarg1_);
  public final static native long new_BS2EventFilter();
  public final static native void delete_BS2EventFilter(long jarg1);
  public final static native void BS2Event_id_set(long jarg1, BS2Event jarg1_, long jarg2);
  public final static native long BS2Event_id_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_dateTime_set(long jarg1, BS2Event jarg1_, long jarg2);
  public final static native long BS2Event_dateTime_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_deviceID_set(long jarg1, BS2Event jarg1_, long jarg2);
  public final static native long BS2Event_deviceID_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_userID_set(long jarg1, BS2Event jarg1_, String jarg2);
  public final static native String BS2Event_userID_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_uid_set(long jarg1, BS2Event jarg1_, long jarg2);
  public final static native long BS2Event_uid_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_doorID_set(long jarg1, BS2Event jarg1_, long jarg2);
  public final static native long BS2Event_doorID_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_liftID_set(long jarg1, BS2Event jarg1_, long jarg2);
  public final static native long BS2Event_liftID_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_zoneID_set(long jarg1, BS2Event jarg1_, long jarg2);
  public final static native long BS2Event_zoneID_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_ioDeviceID_set(long jarg1, BS2Event jarg1_, long jarg2);
  public final static native long BS2Event_ioDeviceID_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_port_set(long jarg1, BS2Event jarg1_, int jarg2);
  public final static native int BS2Event_port_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_value_set(long jarg1, BS2Event jarg1_, byte jarg2);
  public final static native byte BS2Event_value_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_reserved_set(long jarg1, BS2Event jarg1_, long jarg2);
  public final static native long BS2Event_reserved_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_code_set(long jarg1, BS2Event jarg1_, int jarg2);
  public final static native int BS2Event_code_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_subCode_set(long jarg1, BS2Event jarg1_, short jarg2);
  public final static native short BS2Event_subCode_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_mainCode_set(long jarg1, BS2Event jarg1_, short jarg2);
  public final static native short BS2Event_mainCode_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_param_set(long jarg1, BS2Event jarg1_, short jarg2);
  public final static native short BS2Event_param_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_image_set(long jarg1, BS2Event jarg1_, short jarg2);
  public final static native short BS2Event_image_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_isDST_set(long jarg1, BS2Event jarg1_, short jarg2);
  public final static native short BS2Event_isDST_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_half_set(long jarg1, BS2Event jarg1_, short jarg2);
  public final static native short BS2Event_half_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_hour_set(long jarg1, BS2Event jarg1_, short jarg2);
  public final static native short BS2Event_hour_get(long jarg1, BS2Event jarg1_);
  public final static native void BS2Event_negative_set(long jarg1, BS2Event jarg1_, short jarg2);
  public final static native short BS2Event_negative_get(long jarg1, BS2Event jarg1_);
  public final static native long new_BS2Event();
  public final static native void delete_BS2Event(long jarg1);
  public final static native int BS2_EVENT_MAX_IMAGE_SIZE_get();
  public final static native int BS2_EVENT_MASK_NONE_get();
  public final static native int BS2_EVENT_MASK_INFO_get();
  public final static native int BS2_EVENT_MASK_USER_ID_get();
  public final static native int BS2_EVENT_MASK_CARD_ID_get();
  public final static native int BS2_EVENT_MASK_DOOR_ID_get();
  public final static native int BS2_EVENT_MASK_ZONE_ID_get();
  public final static native int BS2_EVENT_MASK_IODEVICE_get();
  public final static native int BS2_EVENT_MASK_TNA_KEY_get();
  public final static native int BS2_EVENT_MASK_JOB_CODE_get();
  public final static native int BS2_EVENT_MASK_IMAGE_get();
  public final static native int BS2_EVENT_MASK_ALL_get();
  public final static native void BS2EventExtIoDevice_ioDeviceID_set(long jarg1, BS2EventExtIoDevice jarg1_, long jarg2);
  public final static native long BS2EventExtIoDevice_ioDeviceID_get(long jarg1, BS2EventExtIoDevice jarg1_);
  public final static native void BS2EventExtIoDevice_port_set(long jarg1, BS2EventExtIoDevice jarg1_, int jarg2);
  public final static native int BS2EventExtIoDevice_port_get(long jarg1, BS2EventExtIoDevice jarg1_);
  public final static native void BS2EventExtIoDevice_value_set(long jarg1, BS2EventExtIoDevice jarg1_, byte jarg2);
  public final static native byte BS2EventExtIoDevice_value_get(long jarg1, BS2EventExtIoDevice jarg1_);
  public final static native void BS2EventExtIoDevice_reserved_set(long jarg1, BS2EventExtIoDevice jarg1_, long jarg2);
  public final static native long BS2EventExtIoDevice_reserved_get(long jarg1, BS2EventExtIoDevice jarg1_);
  public final static native long new_BS2EventExtIoDevice();
  public final static native void delete_BS2EventExtIoDevice(long jarg1);
  public final static native void BS2EventExtInfo_dateTime_set(long jarg1, BS2EventExtInfo jarg1_, long jarg2);
  public final static native long BS2EventExtInfo_dateTime_get(long jarg1, BS2EventExtInfo jarg1_);
  public final static native void BS2EventExtInfo_deviceID_set(long jarg1, BS2EventExtInfo jarg1_, long jarg2);
  public final static native long BS2EventExtInfo_deviceID_get(long jarg1, BS2EventExtInfo jarg1_);
  public final static native void BS2EventExtInfo_code_set(long jarg1, BS2EventExtInfo jarg1_, int jarg2);
  public final static native int BS2EventExtInfo_code_get(long jarg1, BS2EventExtInfo jarg1_);
  public final static native void BS2EventExtInfo_subCode_set(long jarg1, BS2EventExtInfo jarg1_, short jarg2);
  public final static native short BS2EventExtInfo_subCode_get(long jarg1, BS2EventExtInfo jarg1_);
  public final static native void BS2EventExtInfo_mainCode_set(long jarg1, BS2EventExtInfo jarg1_, short jarg2);
  public final static native short BS2EventExtInfo_mainCode_get(long jarg1, BS2EventExtInfo jarg1_);
  public final static native void BS2EventExtInfo_reserved_set(long jarg1, BS2EventExtInfo jarg1_, long jarg2);
  public final static native long BS2EventExtInfo_reserved_get(long jarg1, BS2EventExtInfo jarg1_);
  public final static native long new_BS2EventExtInfo();
  public final static native void delete_BS2EventExtInfo(long jarg1);
  public final static native void BS2EventExtHeader_id_set(long jarg1, BS2EventExtHeader jarg1_, long jarg2);
  public final static native long BS2EventExtHeader_id_get(long jarg1, BS2EventExtHeader jarg1_);
  public final static native void BS2EventExtHeader_payload_set(long jarg1, BS2EventExtHeader jarg1_, long jarg2, BS2PayloadHeader jarg2_);
  public final static native long BS2EventExtHeader_payload_get(long jarg1, BS2EventExtHeader jarg1_);
  public final static native long new_BS2EventExtHeader();
  public final static native void delete_BS2EventExtHeader(long jarg1);
  public final static native int BS2_FACE_TEMPLATE_LENGTH_get();
  public final static native int BS2_TEMPLATE_PER_FACE_get();
  public final static native int BS2_FACE_IMAGE_SIZE_get();
  public final static native void BS2Face_faceIndex_set(long jarg1, BS2Face jarg1_, short jarg2);
  public final static native short BS2Face_faceIndex_get(long jarg1, BS2Face jarg1_);
  public final static native void BS2Face_numOfTemplate_set(long jarg1, BS2Face jarg1_, short jarg2);
  public final static native short BS2Face_numOfTemplate_get(long jarg1, BS2Face jarg1_);
  public final static native void BS2Face_flag_set(long jarg1, BS2Face jarg1_, short jarg2);
  public final static native short BS2Face_flag_get(long jarg1, BS2Face jarg1_);
  public final static native void BS2Face_reserved_set(long jarg1, BS2Face jarg1_, short jarg2);
  public final static native short BS2Face_reserved_get(long jarg1, BS2Face jarg1_);
  public final static native void BS2Face_imageLen_set(long jarg1, BS2Face jarg1_, int jarg2);
  public final static native int BS2Face_imageLen_get(long jarg1, BS2Face jarg1_);
  public final static native void BS2Face_reserved2_set(long jarg1, BS2Face jarg1_, long jarg2);
  public final static native long BS2Face_reserved2_get(long jarg1, BS2Face jarg1_);
  public final static native void BS2Face_imageData_set(long jarg1, BS2Face jarg1_, long jarg2);
  public final static native long BS2Face_imageData_get(long jarg1, BS2Face jarg1_);
  public final static native void BS2Face_templateData_set(long jarg1, BS2Face jarg1_, long jarg2);
  public final static native long BS2Face_templateData_get(long jarg1, BS2Face jarg1_);
  public final static native long new_BS2Face();
  public final static native void delete_BS2Face(long jarg1);
  public final static native int BS2_FINGER_TEMPLATE_SIZE_get();
  public final static native int BS2_TEMPLATE_PER_FINGER_get();
  public final static native int BS2_FINGER_INDEX_UNDEFINED_get();
  public final static native int BS2_FINGER_FLAG_DURESS_get();
  public final static native void BS2RawImage_width_set(long jarg1, BS2RawImage jarg1_, int jarg2);
  public final static native int BS2RawImage_width_get(long jarg1, BS2RawImage jarg1_);
  public final static native void BS2RawImage_height_set(long jarg1, BS2RawImage jarg1_, int jarg2);
  public final static native int BS2RawImage_height_get(long jarg1, BS2RawImage jarg1_);
  public final static native void BS2RawImage_size_set(long jarg1, BS2RawImage jarg1_, long jarg2);
  public final static native long BS2RawImage_size_get(long jarg1, BS2RawImage jarg1_);
  public final static native void BS2RawImage_data_set(long jarg1, BS2RawImage jarg1_, long jarg2);
  public final static native long BS2RawImage_data_get(long jarg1, BS2RawImage jarg1_);
  public final static native long new_BS2RawImage();
  public final static native void delete_BS2RawImage(long jarg1);
  public final static native void BS2ScanFingerprint_fingerTemplate_set(long jarg1, BS2ScanFingerprint jarg1_, long jarg2);
  public final static native long BS2ScanFingerprint_fingerTemplate_get(long jarg1, BS2ScanFingerprint jarg1_);
  public final static native void BS2ScanFingerprint_rawImage_set(long jarg1, BS2ScanFingerprint jarg1_, long jarg2, BS2RawImage jarg2_);
  public final static native long BS2ScanFingerprint_rawImage_get(long jarg1, BS2ScanFingerprint jarg1_);
  public final static native long new_BS2ScanFingerprint();
  public final static native void delete_BS2ScanFingerprint(long jarg1);
  public final static native void BS2Fingerprint_index_set(long jarg1, BS2Fingerprint jarg1_, short jarg2);
  public final static native short BS2Fingerprint_index_get(long jarg1, BS2Fingerprint jarg1_);
  public final static native void BS2Fingerprint_flag_set(long jarg1, BS2Fingerprint jarg1_, short jarg2);
  public final static native short BS2Fingerprint_flag_get(long jarg1, BS2Fingerprint jarg1_);
  public final static native void BS2Fingerprint_reserved_set(long jarg1, BS2Fingerprint jarg1_, long jarg2);
  public final static native long BS2Fingerprint_reserved_get(long jarg1, BS2Fingerprint jarg1_);
  public final static native void BS2Fingerprint_data_set(long jarg1, BS2Fingerprint jarg1_, long jarg2);
  public final static native long BS2Fingerprint_data_get(long jarg1, BS2Fingerprint jarg1_);
  public final static native long new_BS2Fingerprint();
  public final static native void delete_BS2Fingerprint(long jarg1);
  public final static native int BS2_MAX_FIRE_SENSORS_PER_FIRE_ALARM_ZONE_get();
  public final static native int BS2_MAX_FIRE_ALARM_ACTION_get();
  public final static native int BS2_MAX_DOORS_PER_FIRE_ALARM_ZONE_get();
  public final static native void BS2FireSensor_deviceID_set(long jarg1, BS2FireSensor jarg1_, long jarg2);
  public final static native long BS2FireSensor_deviceID_get(long jarg1, BS2FireSensor jarg1_);
  public final static native void BS2FireSensor_port_set(long jarg1, BS2FireSensor jarg1_, short jarg2);
  public final static native short BS2FireSensor_port_get(long jarg1, BS2FireSensor jarg1_);
  public final static native void BS2FireSensor_switchType_set(long jarg1, BS2FireSensor jarg1_, short jarg2);
  public final static native short BS2FireSensor_switchType_get(long jarg1, BS2FireSensor jarg1_);
  public final static native void BS2FireSensor_duration_set(long jarg1, BS2FireSensor jarg1_, int jarg2);
  public final static native int BS2FireSensor_duration_get(long jarg1, BS2FireSensor jarg1_);
  public final static native long new_BS2FireSensor();
  public final static native void delete_BS2FireSensor(long jarg1);
  public final static native void BS2FireAlarmZone_zoneID_set(long jarg1, BS2FireAlarmZone jarg1_, long jarg2);
  public final static native long BS2FireAlarmZone_zoneID_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_name_set(long jarg1, BS2FireAlarmZone jarg1_, String jarg2);
  public final static native String BS2FireAlarmZone_name_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_numSensors_set(long jarg1, BS2FireAlarmZone jarg1_, short jarg2);
  public final static native short BS2FireAlarmZone_numSensors_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_numDoors_set(long jarg1, BS2FireAlarmZone jarg1_, short jarg2);
  public final static native short BS2FireAlarmZone_numDoors_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_numLifts_set(long jarg1, BS2FireAlarmZone jarg1_, short jarg2);
  public final static native short BS2FireAlarmZone_numLifts_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_alarmed_set(long jarg1, BS2FireAlarmZone jarg1_, boolean jarg2);
  public final static native boolean BS2FireAlarmZone_alarmed_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_disabled_set(long jarg1, BS2FireAlarmZone jarg1_, boolean jarg2);
  public final static native boolean BS2FireAlarmZone_disabled_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_reserved_set(long jarg1, BS2FireAlarmZone jarg1_, long jarg2);
  public final static native long BS2FireAlarmZone_reserved_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_sensor_set(long jarg1, BS2FireAlarmZone jarg1_, long jarg2, BS2FireSensor jarg2_);
  public final static native long BS2FireAlarmZone_sensor_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_alarm_set(long jarg1, BS2FireAlarmZone jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2FireAlarmZone_alarm_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_reserved2_set(long jarg1, BS2FireAlarmZone jarg1_, long jarg2);
  public final static native long BS2FireAlarmZone_reserved2_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_doorIDs_set(long jarg1, BS2FireAlarmZone jarg1_, long jarg2);
  public final static native long BS2FireAlarmZone_doorIDs_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZone_liftIDs_set(long jarg1, BS2FireAlarmZone jarg1_, long jarg2);
  public final static native long BS2FireAlarmZone_liftIDs_get(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native long new_BS2FireAlarmZone();
  public final static native void delete_BS2FireAlarmZone(long jarg1);
  public final static native int BS2_MAX_FLOOR_LEVEL_ITEMS_get();
  public final static native int BS2_MAX_FLOOR_LEVEL_NAME_LEN_get();
  public final static native int BS2_INVALID_FLOOR_LEVEL_ID_get();
  public final static native void BS2FloorSchedule_liftID_set(long jarg1, BS2FloorSchedule jarg1_, long jarg2);
  public final static native long BS2FloorSchedule_liftID_get(long jarg1, BS2FloorSchedule jarg1_);
  public final static native void BS2FloorSchedule_floorIndex_set(long jarg1, BS2FloorSchedule jarg1_, int jarg2);
  public final static native int BS2FloorSchedule_floorIndex_get(long jarg1, BS2FloorSchedule jarg1_);
  public final static native void BS2FloorSchedule_reserved_set(long jarg1, BS2FloorSchedule jarg1_, long jarg2);
  public final static native long BS2FloorSchedule_reserved_get(long jarg1, BS2FloorSchedule jarg1_);
  public final static native void BS2FloorSchedule_scheduleID_set(long jarg1, BS2FloorSchedule jarg1_, long jarg2);
  public final static native long BS2FloorSchedule_scheduleID_get(long jarg1, BS2FloorSchedule jarg1_);
  public final static native long new_BS2FloorSchedule();
  public final static native void delete_BS2FloorSchedule(long jarg1);
  public final static native void BS2FloorLevel_id_set(long jarg1, BS2FloorLevel jarg1_, long jarg2);
  public final static native long BS2FloorLevel_id_get(long jarg1, BS2FloorLevel jarg1_);
  public final static native void BS2FloorLevel_name_set(long jarg1, BS2FloorLevel jarg1_, String jarg2);
  public final static native String BS2FloorLevel_name_get(long jarg1, BS2FloorLevel jarg1_);
  public final static native void BS2FloorLevel_numFloorSchedules_set(long jarg1, BS2FloorLevel jarg1_, short jarg2);
  public final static native short BS2FloorLevel_numFloorSchedules_get(long jarg1, BS2FloorLevel jarg1_);
  public final static native void BS2FloorLevel_reserved_set(long jarg1, BS2FloorLevel jarg1_, long jarg2);
  public final static native long BS2FloorLevel_reserved_get(long jarg1, BS2FloorLevel jarg1_);
  public final static native void BS2FloorLevel_floorSchedules_set(long jarg1, BS2FloorLevel jarg1_, long jarg2, BS2FloorSchedule jarg2_);
  public final static native long BS2FloorLevel_floorSchedules_get(long jarg1, BS2FloorLevel jarg1_);
  public final static native long new_BS2FloorLevel();
  public final static native void delete_BS2FloorLevel(long jarg1);
  public final static native int BS2_MAX_HOLIDAYS_PER_GROUP_get();
  public final static native int BS2_MAX_HOLIDAY_GROUP_NAME_LEN_get();
  public final static native int BS2_INVALID_HOLIDAY_GROUP_ID_get();
  public final static native int BS2_HOLIDAY_RECURRENCE_NONE_get();
  public final static native int BS2_HOLIDAY_RECURRENCE_YEARLY_get();
  public final static native int BS2_HOLIDAY_RECURRENCE_MONTHLY_get();
  public final static native int BS2_HOLIDAY_RECURRENCE_WEEKLY_get();
  public final static native void BS2Holiday_date_set(long jarg1, BS2Holiday jarg1_, long jarg2);
  public final static native long BS2Holiday_date_get(long jarg1, BS2Holiday jarg1_);
  public final static native void BS2Holiday_recurrence_set(long jarg1, BS2Holiday jarg1_, short jarg2);
  public final static native short BS2Holiday_recurrence_get(long jarg1, BS2Holiday jarg1_);
  public final static native long new_BS2Holiday();
  public final static native void delete_BS2Holiday(long jarg1);
  public final static native void BS2HolidayGroup_id_set(long jarg1, BS2HolidayGroup jarg1_, long jarg2);
  public final static native long BS2HolidayGroup_id_get(long jarg1, BS2HolidayGroup jarg1_);
  public final static native void BS2HolidayGroup_name_set(long jarg1, BS2HolidayGroup jarg1_, String jarg2);
  public final static native String BS2HolidayGroup_name_get(long jarg1, BS2HolidayGroup jarg1_);
  public final static native void BS2HolidayGroup_numHolidays_set(long jarg1, BS2HolidayGroup jarg1_, short jarg2);
  public final static native short BS2HolidayGroup_numHolidays_get(long jarg1, BS2HolidayGroup jarg1_);
  public final static native void BS2HolidayGroup_reserved_set(long jarg1, BS2HolidayGroup jarg1_, long jarg2);
  public final static native long BS2HolidayGroup_reserved_get(long jarg1, BS2HolidayGroup jarg1_);
  public final static native void BS2HolidayGroup_holidays_set(long jarg1, BS2HolidayGroup jarg1_, long jarg2, BS2Holiday jarg2_);
  public final static native long BS2HolidayGroup_holidays_get(long jarg1, BS2HolidayGroup jarg1_);
  public final static native long new_BS2HolidayGroup();
  public final static native void delete_BS2HolidayGroup(long jarg1);
  public final static native int BS2_MAX_INPUTS_IN_INTERLOCK_ZONE_get();
  public final static native int BS2_MAX_OUTPUTS_IN_INTERLOCK_ZONE_get();
  public final static native int BS2_MAX_DOORS_IN_INTERLOCK_ZONE_get();
  public final static native int INTERLOCK_ZONE_INPUT_SENSOR_OPERATION_MASK_NONE_get();
  public final static native int INTERLOCK_ZONE_INPUT_SENSOR_OPERATION_MASK_ENRTY_get();
  public final static native int INTERLOCK_ZONE_INPUT_SENSOR_OPERATION_MASK_EXIT_get();
  public final static native int INTERLOCK_ZONE_INPUT_SENSOR_OPERATION_MASK_ALL_get();
  public final static native void BS2InterlockZoneInput_deviceID_set(long jarg1, BS2InterlockZoneInput jarg1_, long jarg2);
  public final static native long BS2InterlockZoneInput_deviceID_get(long jarg1, BS2InterlockZoneInput jarg1_);
  public final static native void BS2InterlockZoneInput_port_set(long jarg1, BS2InterlockZoneInput jarg1_, short jarg2);
  public final static native short BS2InterlockZoneInput_port_get(long jarg1, BS2InterlockZoneInput jarg1_);
  public final static native void BS2InterlockZoneInput_switchType_set(long jarg1, BS2InterlockZoneInput jarg1_, short jarg2);
  public final static native short BS2InterlockZoneInput_switchType_get(long jarg1, BS2InterlockZoneInput jarg1_);
  public final static native void BS2InterlockZoneInput_duration_set(long jarg1, BS2InterlockZoneInput jarg1_, int jarg2);
  public final static native int BS2InterlockZoneInput_duration_get(long jarg1, BS2InterlockZoneInput jarg1_);
  public final static native void BS2InterlockZoneInput_operationType_set(long jarg1, BS2InterlockZoneInput jarg1_, short jarg2);
  public final static native short BS2InterlockZoneInput_operationType_get(long jarg1, BS2InterlockZoneInput jarg1_);
  public final static native void BS2InterlockZoneInput_reserved_set(long jarg1, BS2InterlockZoneInput jarg1_, long jarg2);
  public final static native long BS2InterlockZoneInput_reserved_get(long jarg1, BS2InterlockZoneInput jarg1_);
  public final static native long new_BS2InterlockZoneInput();
  public final static native void delete_BS2InterlockZoneInput(long jarg1);
  public final static native void BS2InterlockZoneOutput_event_set(long jarg1, BS2InterlockZoneOutput jarg1_, int jarg2);
  public final static native int BS2InterlockZoneOutput_event_get(long jarg1, BS2InterlockZoneOutput jarg1_);
  public final static native void BS2InterlockZoneOutput_reserved_set(long jarg1, BS2InterlockZoneOutput jarg1_, long jarg2);
  public final static native long BS2InterlockZoneOutput_reserved_get(long jarg1, BS2InterlockZoneOutput jarg1_);
  public final static native void BS2InterlockZoneOutput_action_set(long jarg1, BS2InterlockZoneOutput jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2InterlockZoneOutput_action_get(long jarg1, BS2InterlockZoneOutput jarg1_);
  public final static native long new_BS2InterlockZoneOutput();
  public final static native void delete_BS2InterlockZoneOutput(long jarg1);
  public final static native void BS2InterlockZone_zoneID_set(long jarg1, BS2InterlockZone jarg1_, long jarg2);
  public final static native long BS2InterlockZone_zoneID_get(long jarg1, BS2InterlockZone jarg1_);
  public final static native void BS2InterlockZone_name_set(long jarg1, BS2InterlockZone jarg1_, String jarg2);
  public final static native String BS2InterlockZone_name_get(long jarg1, BS2InterlockZone jarg1_);
  public final static native void BS2InterlockZone_disabled_set(long jarg1, BS2InterlockZone jarg1_, boolean jarg2);
  public final static native boolean BS2InterlockZone_disabled_get(long jarg1, BS2InterlockZone jarg1_);
  public final static native void BS2InterlockZone_numInputs_set(long jarg1, BS2InterlockZone jarg1_, short jarg2);
  public final static native short BS2InterlockZone_numInputs_get(long jarg1, BS2InterlockZone jarg1_);
  public final static native void BS2InterlockZone_numOutputs_set(long jarg1, BS2InterlockZone jarg1_, short jarg2);
  public final static native short BS2InterlockZone_numOutputs_get(long jarg1, BS2InterlockZone jarg1_);
  public final static native void BS2InterlockZone_numDoors_set(long jarg1, BS2InterlockZone jarg1_, short jarg2);
  public final static native short BS2InterlockZone_numDoors_get(long jarg1, BS2InterlockZone jarg1_);
  public final static native void BS2InterlockZone_reserved_set(long jarg1, BS2InterlockZone jarg1_, long jarg2);
  public final static native long BS2InterlockZone_reserved_get(long jarg1, BS2InterlockZone jarg1_);
  public final static native long new_BS2InterlockZone();
  public final static native void delete_BS2InterlockZone(long jarg1);
  public final static native int BS2_MAX_READERS_IN_INTRUSION_ALARM_ZONE_get();
  public final static native int BS2_MAX_INPUTS_IN_INTRUSION_ALARM_ZONE_get();
  public final static native int BS2_MAX_OUTPUTS_IN_INTRUSION_ALARM_ZONE_get();
  public final static native int BS2_MAX_CARDS_IN_INTRUSION_ALARM_ZONE_get();
  public final static native int BS2_MAX_DOORS_IN_INTRUSION_ALARM_ZONE_get();
  public final static native int BS2_MAX_GROUPS_IN_INTRUSION_ALARM_ZONE_get();
  public final static native int INTRUSION_ALARM_ZONE_INPUT_MASK_NONE_get();
  public final static native int INTRUSION_ALARM_ZONE_INPUT_MASK_CARD_get();
  public final static native int INTRUSION_ALARM_ZONE_INPUT_MASK_KEY_get();
  public final static native int INTRUSION_ALARM_ZONE_INPUT_MASK_ALL_get();
  public final static native int INTRUSION_ALARM_ZONE_OPERATION_MASK_NONE_get();
  public final static native int INTRUSION_ALARM_ZONE_OPERATION_MASK_ARM_get();
  public final static native int INTRUSION_ALARM_ZONE_OPERATION_MASK_DISARM_get();
  public final static native int INTRUSION_ALARM_ZONE_OPERATION_MASK_TOGGLE_get();
  public final static native int INTRUSION_ALARM_ZONE_OPERATION_MASK_ALARM_get();
  public final static native int INTRUSION_ALARM_ZONE_OPERATION_MASK_ALARM_CLEAR_get();
  public final static native void BS2AlarmZoneMember_deviceID_set(long jarg1, BS2AlarmZoneMember jarg1_, long jarg2);
  public final static native long BS2AlarmZoneMember_deviceID_get(long jarg1, BS2AlarmZoneMember jarg1_);
  public final static native void BS2AlarmZoneMember_inputType_set(long jarg1, BS2AlarmZoneMember jarg1_, short jarg2);
  public final static native short BS2AlarmZoneMember_inputType_get(long jarg1, BS2AlarmZoneMember jarg1_);
  public final static native void BS2AlarmZoneMember_operationType_set(long jarg1, BS2AlarmZoneMember jarg1_, short jarg2);
  public final static native short BS2AlarmZoneMember_operationType_get(long jarg1, BS2AlarmZoneMember jarg1_);
  public final static native void BS2AlarmZoneMember_reserved_set(long jarg1, BS2AlarmZoneMember jarg1_, long jarg2);
  public final static native long BS2AlarmZoneMember_reserved_get(long jarg1, BS2AlarmZoneMember jarg1_);
  public final static native long new_BS2AlarmZoneMember();
  public final static native void delete_BS2AlarmZoneMember(long jarg1);
  public final static native void BS2AlarmZoneInput_deviceID_set(long jarg1, BS2AlarmZoneInput jarg1_, long jarg2);
  public final static native long BS2AlarmZoneInput_deviceID_get(long jarg1, BS2AlarmZoneInput jarg1_);
  public final static native void BS2AlarmZoneInput_port_set(long jarg1, BS2AlarmZoneInput jarg1_, short jarg2);
  public final static native short BS2AlarmZoneInput_port_get(long jarg1, BS2AlarmZoneInput jarg1_);
  public final static native void BS2AlarmZoneInput_switchType_set(long jarg1, BS2AlarmZoneInput jarg1_, short jarg2);
  public final static native short BS2AlarmZoneInput_switchType_get(long jarg1, BS2AlarmZoneInput jarg1_);
  public final static native void BS2AlarmZoneInput_duration_set(long jarg1, BS2AlarmZoneInput jarg1_, int jarg2);
  public final static native int BS2AlarmZoneInput_duration_get(long jarg1, BS2AlarmZoneInput jarg1_);
  public final static native void BS2AlarmZoneInput_operationType_set(long jarg1, BS2AlarmZoneInput jarg1_, short jarg2);
  public final static native short BS2AlarmZoneInput_operationType_get(long jarg1, BS2AlarmZoneInput jarg1_);
  public final static native void BS2AlarmZoneInput_reserved_set(long jarg1, BS2AlarmZoneInput jarg1_, long jarg2);
  public final static native long BS2AlarmZoneInput_reserved_get(long jarg1, BS2AlarmZoneInput jarg1_);
  public final static native long new_BS2AlarmZoneInput();
  public final static native void delete_BS2AlarmZoneInput(long jarg1);
  public final static native void BS2AlarmZoneOutput_event_set(long jarg1, BS2AlarmZoneOutput jarg1_, int jarg2);
  public final static native int BS2AlarmZoneOutput_event_get(long jarg1, BS2AlarmZoneOutput jarg1_);
  public final static native void BS2AlarmZoneOutput_reserved_set(long jarg1, BS2AlarmZoneOutput jarg1_, long jarg2);
  public final static native long BS2AlarmZoneOutput_reserved_get(long jarg1, BS2AlarmZoneOutput jarg1_);
  public final static native void BS2AlarmZoneOutput_action_set(long jarg1, BS2AlarmZoneOutput jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2AlarmZoneOutput_action_get(long jarg1, BS2AlarmZoneOutput jarg1_);
  public final static native long new_BS2AlarmZoneOutput();
  public final static native void delete_BS2AlarmZoneOutput(long jarg1);
  public final static native void BS2IntrusionAlarmZone_zoneID_set(long jarg1, BS2IntrusionAlarmZone jarg1_, long jarg2);
  public final static native long BS2IntrusionAlarmZone_zoneID_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_name_set(long jarg1, BS2IntrusionAlarmZone jarg1_, String jarg2);
  public final static native String BS2IntrusionAlarmZone_name_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_armDelay_set(long jarg1, BS2IntrusionAlarmZone jarg1_, short jarg2);
  public final static native short BS2IntrusionAlarmZone_armDelay_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_alarmDelay_set(long jarg1, BS2IntrusionAlarmZone jarg1_, short jarg2);
  public final static native short BS2IntrusionAlarmZone_alarmDelay_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_disabled_set(long jarg1, BS2IntrusionAlarmZone jarg1_, boolean jarg2);
  public final static native boolean BS2IntrusionAlarmZone_disabled_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_reserved_set(long jarg1, BS2IntrusionAlarmZone jarg1_, long jarg2);
  public final static native long BS2IntrusionAlarmZone_reserved_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_numReaders_set(long jarg1, BS2IntrusionAlarmZone jarg1_, short jarg2);
  public final static native short BS2IntrusionAlarmZone_numReaders_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_numInputs_set(long jarg1, BS2IntrusionAlarmZone jarg1_, short jarg2);
  public final static native short BS2IntrusionAlarmZone_numInputs_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_numOutputs_set(long jarg1, BS2IntrusionAlarmZone jarg1_, short jarg2);
  public final static native short BS2IntrusionAlarmZone_numOutputs_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_numCards_set(long jarg1, BS2IntrusionAlarmZone jarg1_, short jarg2);
  public final static native short BS2IntrusionAlarmZone_numCards_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_numDoors_set(long jarg1, BS2IntrusionAlarmZone jarg1_, short jarg2);
  public final static native short BS2IntrusionAlarmZone_numDoors_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_numGroups_set(long jarg1, BS2IntrusionAlarmZone jarg1_, short jarg2);
  public final static native short BS2IntrusionAlarmZone_numGroups_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native void BS2IntrusionAlarmZone_reserved2_set(long jarg1, BS2IntrusionAlarmZone jarg1_, long jarg2);
  public final static native long BS2IntrusionAlarmZone_reserved2_get(long jarg1, BS2IntrusionAlarmZone jarg1_);
  public final static native long new_BS2IntrusionAlarmZone();
  public final static native void delete_BS2IntrusionAlarmZone(long jarg1);
  public final static native int BS2_MAX_LIFT_NAME_LEN_get();
  public final static native int BS2_MAX_DEVICES_ON_LIFT_get();
  public final static native int BS2_MAX_FLOORS_ON_LIFT_get();
  public final static native int BS2_MAX_ALARMS_ON_LIFT_get();
  public final static native int BS2_MAX_DUAL_AUTH_APPROVAL_GROUP_ON_LIFT_get();
  public final static native int BS2_DEFAULT_ACTIVATE_TIMEOUT_ON_LIFT_get();
  public final static native int BS2_DEFAULT_DUAL_AUTH_TIMEOUT_ON_LIFT_get();
  public final static native int BS2_INVALID_LIFT_ID_get();
  public final static native int BS2_DUAL_AUTH_APPROVAL_NONE_ON_LIFT_get();
  public final static native int BS2_DUAL_AUTH_APPROVAL_LAST_ON_LIFT_get();
  public final static native int BS2_FLOOR_FLAG_NONE_get();
  public final static native int BS2_FLOOR_FLAG_SCHEDULE_get();
  public final static native int BS2_FLOOR_FLAG_OPERATOR_get();
  public final static native int BS2_FLOOR_FLAG_EMERGENCY_get();
  public final static native void BS2FloorStatus_activated_set(long jarg1, BS2FloorStatus jarg1_, boolean jarg2);
  public final static native boolean BS2FloorStatus_activated_get(long jarg1, BS2FloorStatus jarg1_);
  public final static native void BS2FloorStatus_activateFlags_set(long jarg1, BS2FloorStatus jarg1_, short jarg2);
  public final static native short BS2FloorStatus_activateFlags_get(long jarg1, BS2FloorStatus jarg1_);
  public final static native void BS2FloorStatus_deactivateFlags_set(long jarg1, BS2FloorStatus jarg1_, short jarg2);
  public final static native short BS2FloorStatus_deactivateFlags_get(long jarg1, BS2FloorStatus jarg1_);
  public final static native long new_BS2FloorStatus();
  public final static native void delete_BS2FloorStatus(long jarg1);
  public final static native void BS2LiftFloor_deviceID_set(long jarg1, BS2LiftFloor jarg1_, long jarg2);
  public final static native long BS2LiftFloor_deviceID_get(long jarg1, BS2LiftFloor jarg1_);
  public final static native void BS2LiftFloor_port_set(long jarg1, BS2LiftFloor jarg1_, short jarg2);
  public final static native short BS2LiftFloor_port_get(long jarg1, BS2LiftFloor jarg1_);
  public final static native void BS2LiftFloor_status_set(long jarg1, BS2LiftFloor jarg1_, long jarg2, BS2FloorStatus jarg2_);
  public final static native long BS2LiftFloor_status_get(long jarg1, BS2LiftFloor jarg1_);
  public final static native long new_BS2LiftFloor();
  public final static native void delete_BS2LiftFloor(long jarg1);
  public final static native void BS2LiftSensor_deviceID_set(long jarg1, BS2LiftSensor jarg1_, long jarg2);
  public final static native long BS2LiftSensor_deviceID_get(long jarg1, BS2LiftSensor jarg1_);
  public final static native void BS2LiftSensor_port_set(long jarg1, BS2LiftSensor jarg1_, short jarg2);
  public final static native short BS2LiftSensor_port_get(long jarg1, BS2LiftSensor jarg1_);
  public final static native void BS2LiftSensor_switchType_set(long jarg1, BS2LiftSensor jarg1_, short jarg2);
  public final static native short BS2LiftSensor_switchType_get(long jarg1, BS2LiftSensor jarg1_);
  public final static native void BS2LiftSensor_duration_set(long jarg1, BS2LiftSensor jarg1_, int jarg2);
  public final static native int BS2LiftSensor_duration_get(long jarg1, BS2LiftSensor jarg1_);
  public final static native void BS2LiftSensor_scheduleID_set(long jarg1, BS2LiftSensor jarg1_, long jarg2);
  public final static native long BS2LiftSensor_scheduleID_get(long jarg1, BS2LiftSensor jarg1_);
  public final static native long new_BS2LiftSensor();
  public final static native void delete_BS2LiftSensor(long jarg1);
  public final static native void BS2LiftAlarm_sensor_set(long jarg1, BS2LiftAlarm jarg1_, long jarg2, BS2LiftSensor jarg2_);
  public final static native long BS2LiftAlarm_sensor_get(long jarg1, BS2LiftAlarm jarg1_);
  public final static native void BS2LiftAlarm_action_set(long jarg1, BS2LiftAlarm jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2LiftAlarm_action_get(long jarg1, BS2LiftAlarm jarg1_);
  public final static native long new_BS2LiftAlarm();
  public final static native void delete_BS2LiftAlarm(long jarg1);
  public final static native int BS2_LIFT_ALARM_FLAG_NONE_get();
  public final static native int BS2_LIFT_ALARM_FLAG_FIRST_get();
  public final static native int BS2_LIFT_ALARM_FLAG_SECOND_get();
  public final static native int BS2_LIFT_ALARM_FLAG_TAMPER_get();
  public final static native void BS2LiftStatus_liftID_set(long jarg1, BS2LiftStatus jarg1_, long jarg2);
  public final static native long BS2LiftStatus_liftID_get(long jarg1, BS2LiftStatus jarg1_);
  public final static native void BS2LiftStatus_numFloors_set(long jarg1, BS2LiftStatus jarg1_, int jarg2);
  public final static native int BS2LiftStatus_numFloors_get(long jarg1, BS2LiftStatus jarg1_);
  public final static native void BS2LiftStatus_alarmFlags_set(long jarg1, BS2LiftStatus jarg1_, short jarg2);
  public final static native short BS2LiftStatus_alarmFlags_get(long jarg1, BS2LiftStatus jarg1_);
  public final static native void BS2LiftStatus_tamperOn_set(long jarg1, BS2LiftStatus jarg1_, boolean jarg2);
  public final static native boolean BS2LiftStatus_tamperOn_get(long jarg1, BS2LiftStatus jarg1_);
  public final static native void BS2LiftStatus_floors_set(long jarg1, BS2LiftStatus jarg1_, long jarg2, BS2FloorStatus jarg2_);
  public final static native long BS2LiftStatus_floors_get(long jarg1, BS2LiftStatus jarg1_);
  public final static native long new_BS2LiftStatus();
  public final static native void delete_BS2LiftStatus(long jarg1);
  public final static native void BS2Lift_liftID_set(long jarg1, BS2Lift jarg1_, long jarg2);
  public final static native long BS2Lift_liftID_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_name_set(long jarg1, BS2Lift jarg1_, String jarg2);
  public final static native String BS2Lift_name_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_deviceID_set(long jarg1, BS2Lift jarg1_, long jarg2);
  public final static native long BS2Lift_deviceID_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_activateTimeout_set(long jarg1, BS2Lift jarg1_, long jarg2);
  public final static native long BS2Lift_activateTimeout_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_dualAuthTimeout_set(long jarg1, BS2Lift jarg1_, long jarg2);
  public final static native long BS2Lift_dualAuthTimeout_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_numFloors_set(long jarg1, BS2Lift jarg1_, short jarg2);
  public final static native short BS2Lift_numFloors_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_numDualAuthApprovalGroups_set(long jarg1, BS2Lift jarg1_, short jarg2);
  public final static native short BS2Lift_numDualAuthApprovalGroups_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_dualAuthApprovalType_set(long jarg1, BS2Lift jarg1_, short jarg2);
  public final static native short BS2Lift_dualAuthApprovalType_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_tamperOn_set(long jarg1, BS2Lift jarg1_, boolean jarg2);
  public final static native boolean BS2Lift_tamperOn_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_dualAuthRequired_set(long jarg1, BS2Lift jarg1_, long jarg2);
  public final static native long BS2Lift_dualAuthRequired_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_dualAuthScheduleID_set(long jarg1, BS2Lift jarg1_, long jarg2);
  public final static native long BS2Lift_dualAuthScheduleID_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_floor_set(long jarg1, BS2Lift jarg1_, long jarg2, BS2LiftFloor jarg2_);
  public final static native long BS2Lift_floor_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_dualAuthApprovalGroupID_set(long jarg1, BS2Lift jarg1_, long jarg2);
  public final static native long BS2Lift_dualAuthApprovalGroupID_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_alarm_set(long jarg1, BS2Lift jarg1_, long jarg2, BS2LiftAlarm jarg2_);
  public final static native long BS2Lift_alarm_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_tamper_set(long jarg1, BS2Lift jarg1_, long jarg2, BS2LiftAlarm jarg2_);
  public final static native long BS2Lift_tamper_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_alarmFlags_set(long jarg1, BS2Lift jarg1_, short jarg2);
  public final static native short BS2Lift_alarmFlags_get(long jarg1, BS2Lift jarg1_);
  public final static native void BS2Lift_reserved_set(long jarg1, BS2Lift jarg1_, long jarg2);
  public final static native long BS2Lift_reserved_get(long jarg1, BS2Lift jarg1_);
  public final static native long new_BS2Lift();
  public final static native void delete_BS2Lift(long jarg1);
  public final static native int BS2_RESOURCE_TYPE_UI_get();
  public final static native int BS2_RESOURCE_TYPE_NOTICE_get();
  public final static native int BS2_RESOURCE_TYPE_IMAGE_get();
  public final static native int BS2_RESOURCE_TYPE_SLIDE_get();
  public final static native int BS2_RESOURCE_TYPE_SOUND_get();
  public final static native int BS2_RESOURCE_TYPE_BLE_get();
  public final static native int BS2_RESOURCE_TYPE_FIRMWARE_get();
  public final static native int BS2_SOUND_INDEX_WELCOME_get();
  public final static native int BS2_SOUND_INDEX_AUTH_SUCCESS_get();
  public final static native int BS2_SOUND_INDEX_AUTH_FAIL_get();
  public final static native int BS2_SOUND_INDEX_ALARM_1_get();
  public final static native int BS2_SOUND_INDEX_ALARM_2_get();
  public final static native void BS2ResourceHeader_index_set(long jarg1, BS2ResourceHeader jarg1_, long jarg2);
  public final static native long BS2ResourceHeader_index_get(long jarg1, BS2ResourceHeader jarg1_);
  public final static native void BS2ResourceHeader_type_set(long jarg1, BS2ResourceHeader jarg1_, long jarg2);
  public final static native long BS2ResourceHeader_type_get(long jarg1, BS2ResourceHeader jarg1_);
  public final static native void BS2ResourceHeader_size_set(long jarg1, BS2ResourceHeader jarg1_, long jarg2);
  public final static native long BS2ResourceHeader_size_get(long jarg1, BS2ResourceHeader jarg1_);
  public final static native long new_BS2ResourceHeader();
  public final static native void delete_BS2ResourceHeader(long jarg1);
  public final static native int BS2_RS485_MAX_SLAVES_PER_CHANNEL_get();
  public final static native int BS2_RS485_INVALID_BAUD_RATE_get();
  public final static native void BS2Rs485SlaveDeviceEX_deviceID_set(long jarg1, BS2Rs485SlaveDeviceEX jarg1_, long jarg2);
  public final static native long BS2Rs485SlaveDeviceEX_deviceID_get(long jarg1, BS2Rs485SlaveDeviceEX jarg1_);
  public final static native void BS2Rs485SlaveDeviceEX_deviceType_set(long jarg1, BS2Rs485SlaveDeviceEX jarg1_, int jarg2);
  public final static native int BS2Rs485SlaveDeviceEX_deviceType_get(long jarg1, BS2Rs485SlaveDeviceEX jarg1_);
  public final static native void BS2Rs485SlaveDeviceEX_enableOSDP_set(long jarg1, BS2Rs485SlaveDeviceEX jarg1_, boolean jarg2);
  public final static native boolean BS2Rs485SlaveDeviceEX_enableOSDP_get(long jarg1, BS2Rs485SlaveDeviceEX jarg1_);
  public final static native void BS2Rs485SlaveDeviceEX_connected_set(long jarg1, BS2Rs485SlaveDeviceEX jarg1_, boolean jarg2);
  public final static native boolean BS2Rs485SlaveDeviceEX_connected_get(long jarg1, BS2Rs485SlaveDeviceEX jarg1_);
  public final static native void BS2Rs485SlaveDeviceEX_channelInfo_set(long jarg1, BS2Rs485SlaveDeviceEX jarg1_, short jarg2);
  public final static native short BS2Rs485SlaveDeviceEX_channelInfo_get(long jarg1, BS2Rs485SlaveDeviceEX jarg1_);
  public final static native void BS2Rs485SlaveDeviceEX_reserved_set(long jarg1, BS2Rs485SlaveDeviceEX jarg1_, long jarg2);
  public final static native long BS2Rs485SlaveDeviceEX_reserved_get(long jarg1, BS2Rs485SlaveDeviceEX jarg1_);
  public final static native long new_BS2Rs485SlaveDeviceEX();
  public final static native void delete_BS2Rs485SlaveDeviceEX(long jarg1);
  public final static native void BS2Rs485ChannelEX_baudRate_set(long jarg1, BS2Rs485ChannelEX jarg1_, long jarg2);
  public final static native long BS2Rs485ChannelEX_baudRate_get(long jarg1, BS2Rs485ChannelEX jarg1_);
  public final static native void BS2Rs485ChannelEX_channelIndex_set(long jarg1, BS2Rs485ChannelEX jarg1_, short jarg2);
  public final static native short BS2Rs485ChannelEX_channelIndex_get(long jarg1, BS2Rs485ChannelEX jarg1_);
  public final static native void BS2Rs485ChannelEX_useRegistance_set(long jarg1, BS2Rs485ChannelEX jarg1_, short jarg2);
  public final static native short BS2Rs485ChannelEX_useRegistance_get(long jarg1, BS2Rs485ChannelEX jarg1_);
  public final static native void BS2Rs485ChannelEX_numOfDevices_set(long jarg1, BS2Rs485ChannelEX jarg1_, short jarg2);
  public final static native short BS2Rs485ChannelEX_numOfDevices_get(long jarg1, BS2Rs485ChannelEX jarg1_);
  public final static native void BS2Rs485ChannelEX_reserved_set(long jarg1, BS2Rs485ChannelEX jarg1_, long jarg2);
  public final static native long BS2Rs485ChannelEX_reserved_get(long jarg1, BS2Rs485ChannelEX jarg1_);
  public final static native void BS2Rs485ChannelEX_slaveDevices_set(long jarg1, BS2Rs485ChannelEX jarg1_, long jarg2, BS2Rs485SlaveDeviceEX jarg2_);
  public final static native long BS2Rs485ChannelEX_slaveDevices_get(long jarg1, BS2Rs485ChannelEX jarg1_);
  public final static native long new_BS2Rs485ChannelEX();
  public final static native void delete_BS2Rs485ChannelEX(long jarg1);
  public final static native void BS2Rs485SlaveDevice_deviceID_set(long jarg1, BS2Rs485SlaveDevice jarg1_, long jarg2);
  public final static native long BS2Rs485SlaveDevice_deviceID_get(long jarg1, BS2Rs485SlaveDevice jarg1_);
  public final static native void BS2Rs485SlaveDevice_deviceType_set(long jarg1, BS2Rs485SlaveDevice jarg1_, int jarg2);
  public final static native int BS2Rs485SlaveDevice_deviceType_get(long jarg1, BS2Rs485SlaveDevice jarg1_);
  public final static native void BS2Rs485SlaveDevice_enableOSDP_set(long jarg1, BS2Rs485SlaveDevice jarg1_, boolean jarg2);
  public final static native boolean BS2Rs485SlaveDevice_enableOSDP_get(long jarg1, BS2Rs485SlaveDevice jarg1_);
  public final static native void BS2Rs485SlaveDevice_connected_set(long jarg1, BS2Rs485SlaveDevice jarg1_, boolean jarg2);
  public final static native boolean BS2Rs485SlaveDevice_connected_get(long jarg1, BS2Rs485SlaveDevice jarg1_);
  public final static native long new_BS2Rs485SlaveDevice();
  public final static native void delete_BS2Rs485SlaveDevice(long jarg1);
  public final static native void BS2Rs485Channel_baudRate_set(long jarg1, BS2Rs485Channel jarg1_, long jarg2);
  public final static native long BS2Rs485Channel_baudRate_get(long jarg1, BS2Rs485Channel jarg1_);
  public final static native void BS2Rs485Channel_channelIndex_set(long jarg1, BS2Rs485Channel jarg1_, short jarg2);
  public final static native short BS2Rs485Channel_channelIndex_get(long jarg1, BS2Rs485Channel jarg1_);
  public final static native void BS2Rs485Channel_useRegistance_set(long jarg1, BS2Rs485Channel jarg1_, short jarg2);
  public final static native short BS2Rs485Channel_useRegistance_get(long jarg1, BS2Rs485Channel jarg1_);
  public final static native void BS2Rs485Channel_numOfDevices_set(long jarg1, BS2Rs485Channel jarg1_, short jarg2);
  public final static native short BS2Rs485Channel_numOfDevices_get(long jarg1, BS2Rs485Channel jarg1_);
  public final static native void BS2Rs485Channel_reserved_set(long jarg1, BS2Rs485Channel jarg1_, long jarg2);
  public final static native long BS2Rs485Channel_reserved_get(long jarg1, BS2Rs485Channel jarg1_);
  public final static native void BS2Rs485Channel_slaveDevices_set(long jarg1, BS2Rs485Channel jarg1_, long jarg2, BS2Rs485SlaveDevice jarg2_);
  public final static native long BS2Rs485Channel_slaveDevices_get(long jarg1, BS2Rs485Channel jarg1_);
  public final static native long new_BS2Rs485Channel();
  public final static native void delete_BS2Rs485Channel(long jarg1);
  public final static native void BS2Rs485SlaveDeviceSetting_deviceID_set(long jarg1, BS2Rs485SlaveDeviceSetting jarg1_, long jarg2);
  public final static native long BS2Rs485SlaveDeviceSetting_deviceID_get(long jarg1, BS2Rs485SlaveDeviceSetting jarg1_);
  public final static native void BS2Rs485SlaveDeviceSetting_deviceType_set(long jarg1, BS2Rs485SlaveDeviceSetting jarg1_, int jarg2);
  public final static native int BS2Rs485SlaveDeviceSetting_deviceType_get(long jarg1, BS2Rs485SlaveDeviceSetting jarg1_);
  public final static native void BS2Rs485SlaveDeviceSetting_reserved_set(long jarg1, BS2Rs485SlaveDeviceSetting jarg1_, long jarg2);
  public final static native long BS2Rs485SlaveDeviceSetting_reserved_get(long jarg1, BS2Rs485SlaveDeviceSetting jarg1_);
  public final static native long new_BS2Rs485SlaveDeviceSetting();
  public final static native void delete_BS2Rs485SlaveDeviceSetting(long jarg1);
  public final static native int BS2_MAX_HOLIDAY_GROUPS_PER_SCHEDULE_get();
  public final static native int BS2_MAX_DAYS_PER_DAILY_SCHEDULE_get();
  public final static native int BS2_MAX_SCHEDULE_NAME_LEN_get();
  public final static native int BS2_INVALID_SCHEDULE_ID_get();
  public final static native int BS2_SCHEDULE_NEVER_ID_get();
  public final static native int BS2_SCHEDULE_ALWAYS_ID_get();
  public final static native void BS2WeeklySchedule_schedule_set(long jarg1, BS2WeeklySchedule jarg1_, long jarg2, BS2DaySchedule jarg2_);
  public final static native long BS2WeeklySchedule_schedule_get(long jarg1, BS2WeeklySchedule jarg1_);
  public final static native long new_BS2WeeklySchedule();
  public final static native void delete_BS2WeeklySchedule(long jarg1);
  public final static native void BS2DailySchedule_startDate_set(long jarg1, BS2DailySchedule jarg1_, long jarg2);
  public final static native long BS2DailySchedule_startDate_get(long jarg1, BS2DailySchedule jarg1_);
  public final static native void BS2DailySchedule_numDays_set(long jarg1, BS2DailySchedule jarg1_, short jarg2);
  public final static native short BS2DailySchedule_numDays_get(long jarg1, BS2DailySchedule jarg1_);
  public final static native void BS2DailySchedule_reserved_set(long jarg1, BS2DailySchedule jarg1_, long jarg2);
  public final static native long BS2DailySchedule_reserved_get(long jarg1, BS2DailySchedule jarg1_);
  public final static native void BS2DailySchedule_schedule_set(long jarg1, BS2DailySchedule jarg1_, long jarg2, BS2DaySchedule jarg2_);
  public final static native long BS2DailySchedule_schedule_get(long jarg1, BS2DailySchedule jarg1_);
  public final static native long new_BS2DailySchedule();
  public final static native void delete_BS2DailySchedule(long jarg1);
  public final static native void BS2HolidaySchedule_id_set(long jarg1, BS2HolidaySchedule jarg1_, long jarg2);
  public final static native long BS2HolidaySchedule_id_get(long jarg1, BS2HolidaySchedule jarg1_);
  public final static native void BS2HolidaySchedule_schedules_set(long jarg1, BS2HolidaySchedule jarg1_, long jarg2, BS2DaySchedule jarg2_);
  public final static native long BS2HolidaySchedule_schedules_get(long jarg1, BS2HolidaySchedule jarg1_);
  public final static native long new_BS2HolidaySchedule();
  public final static native void delete_BS2HolidaySchedule(long jarg1);
  public final static native void BS2Schedule_id_set(long jarg1, BS2Schedule jarg1_, long jarg2);
  public final static native long BS2Schedule_id_get(long jarg1, BS2Schedule jarg1_);
  public final static native void BS2Schedule_name_set(long jarg1, BS2Schedule jarg1_, String jarg2);
  public final static native String BS2Schedule_name_get(long jarg1, BS2Schedule jarg1_);
  public final static native void BS2Schedule_isDaily_set(long jarg1, BS2Schedule jarg1_, boolean jarg2);
  public final static native boolean BS2Schedule_isDaily_get(long jarg1, BS2Schedule jarg1_);
  public final static native void BS2Schedule_numHolidaySchedules_set(long jarg1, BS2Schedule jarg1_, short jarg2);
  public final static native short BS2Schedule_numHolidaySchedules_get(long jarg1, BS2Schedule jarg1_);
  public final static native void BS2Schedule_reserved_set(long jarg1, BS2Schedule jarg1_, long jarg2);
  public final static native long BS2Schedule_reserved_get(long jarg1, BS2Schedule jarg1_);
  public final static native void BS2Schedule_holidaySchedules_set(long jarg1, BS2Schedule jarg1_, long jarg2, BS2HolidaySchedule jarg2_);
  public final static native long BS2Schedule_holidaySchedules_get(long jarg1, BS2Schedule jarg1_);
  public final static native long new_BS2Schedule();
  public final static native void delete_BS2Schedule(long jarg1);
  public final static native int BS2_MAX_SCHEDULED_LOCK_UNLOCK_ALARM_ACTION_get();
  public final static native int BS2_MAX_DOORS_IN_SCHEDULED_LOCK_UNLOCK_ZONE_get();
  public final static native int BS2_MAX_BYPASS_GROUPS_IN_SCHEDULED_LOCK_UNLOCK_ZONE_get();
  public final static native int BS2_MAX_UNLOCK_GROUPS_IN_SCHEDULED_LOCK_UNLOCK_ZONE_get();
  public final static native void BS2ScheduledLockUnlockZone_zoneID_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, long jarg2);
  public final static native long BS2ScheduledLockUnlockZone_zoneID_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_name_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, String jarg2);
  public final static native String BS2ScheduledLockUnlockZone_name_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_lockScheduleID_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, long jarg2);
  public final static native long BS2ScheduledLockUnlockZone_lockScheduleID_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_unlockScheduleID_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, long jarg2);
  public final static native long BS2ScheduledLockUnlockZone_unlockScheduleID_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_numDoors_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, short jarg2);
  public final static native short BS2ScheduledLockUnlockZone_numDoors_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_numBypassGroups_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, short jarg2);
  public final static native short BS2ScheduledLockUnlockZone_numBypassGroups_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_numUnlockGroups_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, short jarg2);
  public final static native short BS2ScheduledLockUnlockZone_numUnlockGroups_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_bidirectionalLock_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, boolean jarg2);
  public final static native boolean BS2ScheduledLockUnlockZone_bidirectionalLock_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_disabled_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, boolean jarg2);
  public final static native boolean BS2ScheduledLockUnlockZone_disabled_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_alarmed_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, boolean jarg2);
  public final static native boolean BS2ScheduledLockUnlockZone_alarmed_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_reserved_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, long jarg2);
  public final static native long BS2ScheduledLockUnlockZone_reserved_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_alarm_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2ScheduledLockUnlockZone_alarm_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_reserved2_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, long jarg2);
  public final static native long BS2ScheduledLockUnlockZone_reserved2_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_doorIDs_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, long jarg2);
  public final static native long BS2ScheduledLockUnlockZone_doorIDs_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_bypassGroupIDs_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, long jarg2);
  public final static native long BS2ScheduledLockUnlockZone_bypassGroupIDs_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZone_unlockGroupIDs_set(long jarg1, BS2ScheduledLockUnlockZone jarg1_, long jarg2);
  public final static native long BS2ScheduledLockUnlockZone_unlockGroupIDs_get(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native long new_BS2ScheduledLockUnlockZone();
  public final static native void delete_BS2ScheduledLockUnlockZone(long jarg1);
  public final static native int MAX_SMART_CARD_DATA_SIZE_get();
  public final static native int BS2_SMART_CARD_MAX_TEMPLATE_COUNT_get();
  public final static native int BS2_SMART_CARD_MIN_TEMPLATE_SIZE_get();
  public final static native int BS2_SMART_CARD_MAX_ACCESS_GROUP_COUNT_get();
  public final static native void BS2SmartCardHeader_hdrCRC_set(long jarg1, BS2SmartCardHeader jarg1_, int jarg2);
  public final static native int BS2SmartCardHeader_hdrCRC_get(long jarg1, BS2SmartCardHeader jarg1_);
  public final static native void BS2SmartCardHeader_cardCRC_set(long jarg1, BS2SmartCardHeader jarg1_, int jarg2);
  public final static native int BS2SmartCardHeader_cardCRC_get(long jarg1, BS2SmartCardHeader jarg1_);
  public final static native void BS2SmartCardHeader_cardType_set(long jarg1, BS2SmartCardHeader jarg1_, short jarg2);
  public final static native short BS2SmartCardHeader_cardType_get(long jarg1, BS2SmartCardHeader jarg1_);
  public final static native void BS2SmartCardHeader_numOfTemplate_set(long jarg1, BS2SmartCardHeader jarg1_, short jarg2);
  public final static native short BS2SmartCardHeader_numOfTemplate_get(long jarg1, BS2SmartCardHeader jarg1_);
  public final static native void BS2SmartCardHeader_templateSize_set(long jarg1, BS2SmartCardHeader jarg1_, int jarg2);
  public final static native int BS2SmartCardHeader_templateSize_get(long jarg1, BS2SmartCardHeader jarg1_);
  public final static native void BS2SmartCardHeader_issueCount_set(long jarg1, BS2SmartCardHeader jarg1_, int jarg2);
  public final static native int BS2SmartCardHeader_issueCount_get(long jarg1, BS2SmartCardHeader jarg1_);
  public final static native void BS2SmartCardHeader_duressMask_set(long jarg1, BS2SmartCardHeader jarg1_, short jarg2);
  public final static native short BS2SmartCardHeader_duressMask_get(long jarg1, BS2SmartCardHeader jarg1_);
  public final static native void BS2SmartCardHeader_cardAuthMode_set(long jarg1, BS2SmartCardHeader jarg1_, short jarg2);
  public final static native short BS2SmartCardHeader_cardAuthMode_get(long jarg1, BS2SmartCardHeader jarg1_);
  public final static native void BS2SmartCardHeader_useAlphanumericID_set(long jarg1, BS2SmartCardHeader jarg1_, short jarg2);
  public final static native short BS2SmartCardHeader_useAlphanumericID_get(long jarg1, BS2SmartCardHeader jarg1_);
  public final static native void BS2SmartCardHeader_reserved_set(long jarg1, BS2SmartCardHeader jarg1_, long jarg2);
  public final static native long BS2SmartCardHeader_reserved_get(long jarg1, BS2SmartCardHeader jarg1_);
  public final static native long new_BS2SmartCardHeader();
  public final static native void delete_BS2SmartCardHeader(long jarg1);
  public final static native void BS2SmartCardCredentials_pin_set(long jarg1, BS2SmartCardCredentials jarg1_, long jarg2);
  public final static native long BS2SmartCardCredentials_pin_get(long jarg1, BS2SmartCardCredentials jarg1_);
  public final static native void BS2SmartCardCredentials_templateData_set(long jarg1, BS2SmartCardCredentials jarg1_, long jarg2);
  public final static native long BS2SmartCardCredentials_templateData_get(long jarg1, BS2SmartCardCredentials jarg1_);
  public final static native long new_BS2SmartCardCredentials();
  public final static native void delete_BS2SmartCardCredentials(long jarg1);
  public final static native void BS2AccessOnCardData_accessGroupID_set(long jarg1, BS2AccessOnCardData jarg1_, long jarg2);
  public final static native long BS2AccessOnCardData_accessGroupID_get(long jarg1, BS2AccessOnCardData jarg1_);
  public final static native void BS2AccessOnCardData_startTime_set(long jarg1, BS2AccessOnCardData jarg1_, long jarg2);
  public final static native long BS2AccessOnCardData_startTime_get(long jarg1, BS2AccessOnCardData jarg1_);
  public final static native void BS2AccessOnCardData_endTime_set(long jarg1, BS2AccessOnCardData jarg1_, long jarg2);
  public final static native long BS2AccessOnCardData_endTime_get(long jarg1, BS2AccessOnCardData jarg1_);
  public final static native long new_BS2AccessOnCardData();
  public final static native void delete_BS2AccessOnCardData(long jarg1);
  public final static native void BS2SmartCardData_header_set(long jarg1, BS2SmartCardData jarg1_, long jarg2, BS2SmartCardHeader jarg2_);
  public final static native long BS2SmartCardData_header_get(long jarg1, BS2SmartCardData jarg1_);
  public final static native void BS2SmartCardData_cardID_set(long jarg1, BS2SmartCardData jarg1_, long jarg2);
  public final static native long BS2SmartCardData_cardID_get(long jarg1, BS2SmartCardData jarg1_);
  public final static native void BS2SmartCardData_credentials_set(long jarg1, BS2SmartCardData jarg1_, long jarg2, BS2SmartCardCredentials jarg2_);
  public final static native long BS2SmartCardData_credentials_get(long jarg1, BS2SmartCardData jarg1_);
  public final static native void BS2SmartCardData_accessOnData_set(long jarg1, BS2SmartCardData jarg1_, long jarg2, BS2AccessOnCardData jarg2_);
  public final static native long BS2SmartCardData_accessOnData_get(long jarg1, BS2SmartCardData jarg1_);
  public final static native long new_BS2SmartCardData();
  public final static native void delete_BS2SmartCardData(long jarg1);
  public final static native int BS2_MAX_READERS_PER_TIMED_APB_ZONE_get();
  public final static native int BS2_MAX_BYPASS_GROUPS_PER_TIMED_APB_ZONE_get();
  public final static native int BS2_MAX_TIMED_APB_ALARM_ACTION_get();
  public final static native int BS2_TIMED_APB_ZONE_HARD_get();
  public final static native int BS2_TIMED_APB_ZONE_SOFT_get();
  public final static native void BS2TimedApbMember_deviceID_set(long jarg1, BS2TimedApbMember jarg1_, long jarg2);
  public final static native long BS2TimedApbMember_deviceID_get(long jarg1, BS2TimedApbMember jarg1_);
  public final static native void BS2TimedApbMember_reserved_set(long jarg1, BS2TimedApbMember jarg1_, long jarg2);
  public final static native long BS2TimedApbMember_reserved_get(long jarg1, BS2TimedApbMember jarg1_);
  public final static native long new_BS2TimedApbMember();
  public final static native void delete_BS2TimedApbMember(long jarg1);
  public final static native void BS2TimedAntiPassbackZone_zoneID_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, long jarg2);
  public final static native long BS2TimedAntiPassbackZone_zoneID_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_name_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, String jarg2);
  public final static native String BS2TimedAntiPassbackZone_name_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_type_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, short jarg2);
  public final static native short BS2TimedAntiPassbackZone_type_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_numReaders_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, short jarg2);
  public final static native short BS2TimedAntiPassbackZone_numReaders_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_numBypassGroups_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, short jarg2);
  public final static native short BS2TimedAntiPassbackZone_numBypassGroups_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_disabled_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, boolean jarg2);
  public final static native boolean BS2TimedAntiPassbackZone_disabled_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_alarmed_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, boolean jarg2);
  public final static native boolean BS2TimedAntiPassbackZone_alarmed_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_reserved_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, long jarg2);
  public final static native long BS2TimedAntiPassbackZone_reserved_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_resetDuration_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, long jarg2);
  public final static native long BS2TimedAntiPassbackZone_resetDuration_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_alarm_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2TimedAntiPassbackZone_alarm_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_readers_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, long jarg2, BS2TimedApbMember jarg2_);
  public final static native long BS2TimedAntiPassbackZone_readers_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_reserved2_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, long jarg2);
  public final static native long BS2TimedAntiPassbackZone_reserved2_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZone_bypassGroupIDs_set(long jarg1, BS2TimedAntiPassbackZone jarg1_, long jarg2);
  public final static native long BS2TimedAntiPassbackZone_bypassGroupIDs_get(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native long new_BS2TimedAntiPassbackZone();
  public final static native void delete_BS2TimedAntiPassbackZone(long jarg1);
  public final static native int BS2_TRIGGER_NONE_get();
  public final static native int BS2_TRIGGER_EVENT_get();
  public final static native int BS2_TRIGGER_INPUT_get();
  public final static native int BS2_TRIGGER_SCHEDULE_get();
  public final static native void BS2EventTrigger_code_set(long jarg1, BS2EventTrigger jarg1_, int jarg2);
  public final static native int BS2EventTrigger_code_get(long jarg1, BS2EventTrigger jarg1_);
  public final static native void BS2EventTrigger_reserved_set(long jarg1, BS2EventTrigger jarg1_, long jarg2);
  public final static native long BS2EventTrigger_reserved_get(long jarg1, BS2EventTrigger jarg1_);
  public final static native long new_BS2EventTrigger();
  public final static native void delete_BS2EventTrigger(long jarg1);
  public final static native void BS2InputTrigger_port_set(long jarg1, BS2InputTrigger jarg1_, short jarg2);
  public final static native short BS2InputTrigger_port_get(long jarg1, BS2InputTrigger jarg1_);
  public final static native void BS2InputTrigger_switchType_set(long jarg1, BS2InputTrigger jarg1_, short jarg2);
  public final static native short BS2InputTrigger_switchType_get(long jarg1, BS2InputTrigger jarg1_);
  public final static native void BS2InputTrigger_duration_set(long jarg1, BS2InputTrigger jarg1_, int jarg2);
  public final static native int BS2InputTrigger_duration_get(long jarg1, BS2InputTrigger jarg1_);
  public final static native void BS2InputTrigger_scheduleID_set(long jarg1, BS2InputTrigger jarg1_, long jarg2);
  public final static native long BS2InputTrigger_scheduleID_get(long jarg1, BS2InputTrigger jarg1_);
  public final static native long new_BS2InputTrigger();
  public final static native void delete_BS2InputTrigger(long jarg1);
  public final static native int BS2_SCHEDULE_TRIGGER_ON_START_get();
  public final static native int BS2_SCHEDULE_TRIGGER_ON_END_get();
  public final static native void BS2ScheduleTrigger_type_set(long jarg1, BS2ScheduleTrigger jarg1_, long jarg2);
  public final static native long BS2ScheduleTrigger_type_get(long jarg1, BS2ScheduleTrigger jarg1_);
  public final static native void BS2ScheduleTrigger_scheduleID_set(long jarg1, BS2ScheduleTrigger jarg1_, long jarg2);
  public final static native long BS2ScheduleTrigger_scheduleID_get(long jarg1, BS2ScheduleTrigger jarg1_);
  public final static native long new_BS2ScheduleTrigger();
  public final static native void delete_BS2ScheduleTrigger(long jarg1);
  public final static native void BS2Trigger_deviceID_set(long jarg1, BS2Trigger jarg1_, long jarg2);
  public final static native long BS2Trigger_deviceID_get(long jarg1, BS2Trigger jarg1_);
  public final static native void BS2Trigger_type_set(long jarg1, BS2Trigger jarg1_, short jarg2);
  public final static native short BS2Trigger_type_get(long jarg1, BS2Trigger jarg1_);
  public final static native void BS2Trigger_reserved_set(long jarg1, BS2Trigger jarg1_, long jarg2);
  public final static native long BS2Trigger_reserved_get(long jarg1, BS2Trigger jarg1_);
  public final static native void BS2Trigger_event_set(long jarg1, BS2Trigger jarg1_, long jarg2, BS2EventTrigger jarg2_);
  public final static native long BS2Trigger_event_get(long jarg1, BS2Trigger jarg1_);
  public final static native void BS2Trigger_input_set(long jarg1, BS2Trigger jarg1_, long jarg2, BS2InputTrigger jarg2_);
  public final static native long BS2Trigger_input_get(long jarg1, BS2Trigger jarg1_);
  public final static native void BS2Trigger_schedule_set(long jarg1, BS2Trigger jarg1_, long jarg2, BS2ScheduleTrigger jarg2_);
  public final static native long BS2Trigger_schedule_get(long jarg1, BS2Trigger jarg1_);
  public final static native long new_BS2Trigger();
  public final static native void delete_BS2Trigger(long jarg1);
  public final static native int BS2_USER_MASK_ID_ONLY_get();
  public final static native int BS2_USER_MASK_DATA_get();
  public final static native int BS2_USER_MASK_SETTING_get();
  public final static native int BS2_USER_MASK_NAME_get();
  public final static native int BS2_USER_MASK_PHOTO_get();
  public final static native int BS2_USER_MASK_PIN_get();
  public final static native int BS2_USER_MASK_CARD_get();
  public final static native int BS2_USER_MASK_FINGER_get();
  public final static native int BS2_USER_MASK_FACE_get();
  public final static native int BS2_USER_MASK_ACCESS_GROUP_get();
  public final static native int BS2_USER_MASK_JOB_get();
  public final static native int BS2_USER_MASK_PHRASE_get();
  public final static native int BS2_USER_MASK_ALL_get();
  public final static native int BS2_USER_PIN_SIZE_get();
  public final static native int BS2_USER_NAME_SIZE_get();
  public final static native int BS2_USER_PHOTO_SIZE_get();
  public final static native int BS2_MAX_JOB_SIZE_get();
  public final static native int BS2_MAX_JOBLABEL_LEN_get();
  public final static native int BS2_USER_PHRASE_SIZE_get();
  public final static native int BS2_INVALID_USER_ID_get();
  public final static native void BS2UserPhoto_size_set(long jarg1, BS2UserPhoto jarg1_, long jarg2);
  public final static native long BS2UserPhoto_size_get(long jarg1, BS2UserPhoto jarg1_);
  public final static native void BS2UserPhoto_data_set(long jarg1, BS2UserPhoto jarg1_, long jarg2);
  public final static native long BS2UserPhoto_data_get(long jarg1, BS2UserPhoto jarg1_);
  public final static native long new_BS2UserPhoto();
  public final static native void delete_BS2UserPhoto(long jarg1);
  public final static native int BS2_USER_FLAG_NONE_get();
  public final static native int BS2_USER_FLAG_CREATED_get();
  public final static native int BS2_USER_FLAG_UPDATED_get();
  public final static native int BS2_USER_FLAG_DELETED_get();
  public final static native int BS2_USER_FLAG_DISABLED_get();
  public final static native int BS2_USER_FLAG_ALL_get();
  public final static native int BS2_USER_SECURITY_LEVEL_DEFAULT_get();
  public final static native int BS2_USER_SECURITY_LEVEL_LOWER_get();
  public final static native int BS2_USER_SECURITY_LEVEL_LOW_get();
  public final static native int BS2_USER_SECURITY_LEVEL_NORMAL_get();
  public final static native int BS2_USER_SECURITY_LEVEL_HIGH_get();
  public final static native int BS2_USER_SECURITY_LEVEL_HIGHER_get();
  public final static native int BS2_JOB_CODE_UNSPECIFIED_get();
  public final static native int BS2_MAX_JOB_CODE_get();
  public final static native void BS2Job_numJobs_set(long jarg1, BS2Job jarg1_, short jarg2);
  public final static native short BS2Job_numJobs_get(long jarg1, BS2Job jarg1_);
  public final static native void BS2Job_reserved_set(long jarg1, BS2Job jarg1_, long jarg2);
  public final static native long BS2Job_reserved_get(long jarg1, BS2Job jarg1_);
  public final static native long new_BS2Job();
  public final static native void delete_BS2Job(long jarg1);
  public final static native void BS2User_userID_set(long jarg1, BS2User jarg1_, String jarg2);
  public final static native String BS2User_userID_get(long jarg1, BS2User jarg1_);
  public final static native void BS2User_formatVersion_set(long jarg1, BS2User jarg1_, short jarg2);
  public final static native short BS2User_formatVersion_get(long jarg1, BS2User jarg1_);
  public final static native void BS2User_flag_set(long jarg1, BS2User jarg1_, short jarg2);
  public final static native short BS2User_flag_get(long jarg1, BS2User jarg1_);
  public final static native void BS2User_version_set(long jarg1, BS2User jarg1_, int jarg2);
  public final static native int BS2User_version_get(long jarg1, BS2User jarg1_);
  public final static native void BS2User_numCards_set(long jarg1, BS2User jarg1_, short jarg2);
  public final static native short BS2User_numCards_get(long jarg1, BS2User jarg1_);
  public final static native void BS2User_numFingers_set(long jarg1, BS2User jarg1_, short jarg2);
  public final static native short BS2User_numFingers_get(long jarg1, BS2User jarg1_);
  public final static native void BS2User_numFaces_set(long jarg1, BS2User jarg1_, short jarg2);
  public final static native short BS2User_numFaces_get(long jarg1, BS2User jarg1_);
  public final static native void BS2User_reserved2_set(long jarg1, BS2User jarg1_, long jarg2);
  public final static native long BS2User_reserved2_get(long jarg1, BS2User jarg1_);
  public final static native void BS2User_authGroupID_set(long jarg1, BS2User jarg1_, long jarg2);
  public final static native long BS2User_authGroupID_get(long jarg1, BS2User jarg1_);
  public final static native void BS2User_faceChecksum_set(long jarg1, BS2User jarg1_, long jarg2);
  public final static native long BS2User_faceChecksum_get(long jarg1, BS2User jarg1_);
  public final static native long new_BS2User();
  public final static native void delete_BS2User(long jarg1);
  public final static native void BS2UserSetting_startTime_set(long jarg1, BS2UserSetting jarg1_, long jarg2);
  public final static native long BS2UserSetting_startTime_get(long jarg1, BS2UserSetting jarg1_);
  public final static native void BS2UserSetting_endTime_set(long jarg1, BS2UserSetting jarg1_, long jarg2);
  public final static native long BS2UserSetting_endTime_get(long jarg1, BS2UserSetting jarg1_);
  public final static native void BS2UserSetting_fingerAuthMode_set(long jarg1, BS2UserSetting jarg1_, short jarg2);
  public final static native short BS2UserSetting_fingerAuthMode_get(long jarg1, BS2UserSetting jarg1_);
  public final static native void BS2UserSetting_cardAuthMode_set(long jarg1, BS2UserSetting jarg1_, short jarg2);
  public final static native short BS2UserSetting_cardAuthMode_get(long jarg1, BS2UserSetting jarg1_);
  public final static native void BS2UserSetting_idAuthMode_set(long jarg1, BS2UserSetting jarg1_, short jarg2);
  public final static native short BS2UserSetting_idAuthMode_get(long jarg1, BS2UserSetting jarg1_);
  public final static native void BS2UserSetting_securityLevel_set(long jarg1, BS2UserSetting jarg1_, short jarg2);
  public final static native short BS2UserSetting_securityLevel_get(long jarg1, BS2UserSetting jarg1_);
  public final static native long new_BS2UserSetting();
  public final static native void delete_BS2UserSetting(long jarg1);
  public final static native int BS2_MAX_ZONE_NAME_LEN_get();
  public final static native int BS2_INVALID_ZONE_ID_get();
  public final static native int BS2_ZONE_APB_get();
  public final static native int BS2_ZONE_TIMED_APB_get();
  public final static native int BS2_ZONE_FIRE_ALARM_get();
  public final static native int BS2_ZONE_SCHEDULED_LOCK_UNLOCK_get();
  public final static native int BS2_ZONE_INTRUSION_ALARM_get();
  public final static native int BS2_ZONE_INTERLOCK_ALARM_get();
  public final static native int BS2_ZONE_STATUS_NORMAL_get();
  public final static native int BS2_ZONE_STATUS_ALARM_get();
  public final static native int BS2_ZONE_STATUS_SCHEDULED_LOCKED_get();
  public final static native int BS2_ZONE_STATUS_SCHEDULED_UNLOCKED_get();
  public final static native int BS2_ZONE_STATUS_ARM_get();
  public final static native int BS2_ZONE_STATUS_DISARM_get();
  public final static native void BS2ZoneStatus_id_set(long jarg1, BS2ZoneStatus jarg1_, long jarg2);
  public final static native long BS2ZoneStatus_id_get(long jarg1, BS2ZoneStatus jarg1_);
  public final static native void BS2ZoneStatus_status_set(long jarg1, BS2ZoneStatus jarg1_, short jarg2);
  public final static native short BS2ZoneStatus_status_get(long jarg1, BS2ZoneStatus jarg1_);
  public final static native void BS2ZoneStatus_disabled_set(long jarg1, BS2ZoneStatus jarg1_, boolean jarg2);
  public final static native boolean BS2ZoneStatus_disabled_get(long jarg1, BS2ZoneStatus jarg1_);
  public final static native void BS2ZoneStatus_reserved_set(long jarg1, BS2ZoneStatus jarg1_, long jarg2);
  public final static native long BS2ZoneStatus_reserved_get(long jarg1, BS2ZoneStatus jarg1_);
  public final static native long new_BS2ZoneStatus();
  public final static native void delete_BS2ZoneStatus(long jarg1);
  public final static native void BS2PayloadHeader_value1_set(long jarg1, BS2PayloadHeader jarg1_, long jarg2);
  public final static native long BS2PayloadHeader_value1_get(long jarg1, BS2PayloadHeader jarg1_);
  public final static native void BS2PayloadHeader_value2_set(long jarg1, BS2PayloadHeader jarg1_, long jarg2);
  public final static native long BS2PayloadHeader_value2_get(long jarg1, BS2PayloadHeader jarg1_);
  public final static native long new_BS2PayloadHeader();
  public final static native void delete_BS2PayloadHeader(long jarg1);
  public final static native int BS2_SSL_METHOD_MASK_NONE_get();
  public final static native int BS2_SSL_METHOD_MASK_SSL2_get();
  public final static native int BS2_SSL_METHOD_MASK_SSL3_get();
  public final static native int BS2_SSL_METHOD_MASK_TLS1_get();
  public final static native int BS2_SSL_METHOD_MASK_TLS1_1_get();
  public final static native int BS2_SSL_METHOD_MASK_TLS1_2_get();
  public final static native int BS2_SSL_METHOD_MASK_ALL_get();
  public final static native int BS2_SYSTEM_INFO_MASK_NONE_get();
  public final static native int BS2_SYSTEM_INFO_MASK_DEVICE_get();
  public final static native int BS2_SYSTEM_INFO_MASK_SSL_get();
  public final static native int BS2_SYSTEM_INFO_MASK_CREDENTIAL_get();
  public final static native int BS2_SYSTEM_INFO_MASK_ALL_get();
  public final static native long new_BS2AccessGroupHandler();
  public final static native long copy_BS2AccessGroupHandler(long jarg1, BS2AccessGroup jarg1_);
  public final static native void delete_BS2AccessGroupHandler(long jarg1, BS2AccessGroup jarg1_);
  public final static native void BS2AccessGroupHandler_assign(long jarg1, BS2AccessGroup jarg1_, long jarg2, BS2AccessGroup jarg2_);
  public final static native long BS2AccessGroupHandler_value(long jarg1, BS2AccessGroup jarg1_);
  public final static native long new_BS2AccessLevelHandler();
  public final static native long copy_BS2AccessLevelHandler(long jarg1, BS2AccessLevel jarg1_);
  public final static native void delete_BS2AccessLevelHandler(long jarg1, BS2AccessLevel jarg1_);
  public final static native void BS2AccessLevelHandler_assign(long jarg1, BS2AccessLevel jarg1_, long jarg2, BS2AccessLevel jarg2_);
  public final static native long BS2AccessLevelHandler_value(long jarg1, BS2AccessLevel jarg1_);
  public final static native long new_BS2AntiPassbackZoneHandler();
  public final static native long copy_BS2AntiPassbackZoneHandler(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void delete_BS2AntiPassbackZoneHandler(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native void BS2AntiPassbackZoneHandler_assign(long jarg1, BS2AntiPassbackZone jarg1_, long jarg2, BS2AntiPassbackZone jarg2_);
  public final static native long BS2AntiPassbackZoneHandler_value(long jarg1, BS2AntiPassbackZone jarg1_);
  public final static native long new_BS2AuthGroupHandler();
  public final static native long copy_BS2AuthGroupHandler(long jarg1, BS2AuthGroup jarg1_);
  public final static native void delete_BS2AuthGroupHandler(long jarg1, BS2AuthGroup jarg1_);
  public final static native void BS2AuthGroupHandler_assign(long jarg1, BS2AuthGroup jarg1_, long jarg2, BS2AuthGroup jarg2_);
  public final static native long BS2AuthGroupHandler_value(long jarg1, BS2AuthGroup jarg1_);
  public final static native long new_BS2BlackListHandler();
  public final static native long copy_BS2BlackListHandler(long jarg1, BS2BlackList jarg1_);
  public final static native void delete_BS2BlackListHandler(long jarg1, BS2BlackList jarg1_);
  public final static native void BS2BlackListHandler_assign(long jarg1, BS2BlackList jarg1_, long jarg2, BS2BlackList jarg2_);
  public final static native long BS2BlackListHandler_value(long jarg1, BS2BlackList jarg1_);
  public final static native long new_BS2DeviceNodeHandler();
  public final static native long copy_BS2DeviceNodeHandler(long jarg1, BS2DeviceNode jarg1_);
  public final static native void delete_BS2DeviceNodeHandler(long jarg1, BS2DeviceNode jarg1_);
  public final static native void BS2DeviceNodeHandler_assign(long jarg1, BS2DeviceNode jarg1_, long jarg2, BS2DeviceNode jarg2_);
  public final static native long BS2DeviceNodeHandler_value(long jarg1, BS2DeviceNode jarg1_);
  public final static native long new_BS2DeviceZoneHandler();
  public final static native long copy_BS2DeviceZoneHandler(long jarg1, BS2DeviceZone jarg1_);
  public final static native void delete_BS2DeviceZoneHandler(long jarg1, BS2DeviceZone jarg1_);
  public final static native void BS2DeviceZoneHandler_assign(long jarg1, BS2DeviceZone jarg1_, long jarg2, BS2DeviceZone jarg2_);
  public final static native long BS2DeviceZoneHandler_value(long jarg1, BS2DeviceZone jarg1_);
  public final static native long new_BS2DeviceZoneAGEntranceLimitHandler();
  public final static native long copy_BS2DeviceZoneAGEntranceLimitHandler(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native void delete_BS2DeviceZoneAGEntranceLimitHandler(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native void BS2DeviceZoneAGEntranceLimitHandler_assign(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_, long jarg2, BS2DeviceZoneAGEntranceLimit jarg2_);
  public final static native long BS2DeviceZoneAGEntranceLimitHandler_value(long jarg1, BS2DeviceZoneAGEntranceLimit jarg1_);
  public final static native long new_BS2DoorHandler();
  public final static native long copy_BS2DoorHandler(long jarg1, BS2Door jarg1_);
  public final static native void delete_BS2DoorHandler(long jarg1, BS2Door jarg1_);
  public final static native void BS2DoorHandler_assign(long jarg1, BS2Door jarg1_, long jarg2, BS2Door jarg2_);
  public final static native long BS2DoorHandler_value(long jarg1, BS2Door jarg1_);
  public final static native long new_BS2DoorStatusHandler();
  public final static native long copy_BS2DoorStatusHandler(long jarg1, BS2DoorStatus jarg1_);
  public final static native void delete_BS2DoorStatusHandler(long jarg1, BS2DoorStatus jarg1_);
  public final static native void BS2DoorStatusHandler_assign(long jarg1, BS2DoorStatus jarg1_, long jarg2, BS2DoorStatus jarg2_);
  public final static native long BS2DoorStatusHandler_value(long jarg1, BS2DoorStatus jarg1_);
  public final static native long new_BS2EventHandler();
  public final static native long copy_BS2EventHandler(long jarg1, BS2Event jarg1_);
  public final static native void delete_BS2EventHandler(long jarg1, BS2Event jarg1_);
  public final static native void BS2EventHandler_assign(long jarg1, BS2Event jarg1_, long jarg2, BS2Event jarg2_);
  public final static native long BS2EventHandler_value(long jarg1, BS2Event jarg1_);
  public final static native long new_BS2EventBlobHandler();
  public final static native long copy_BS2EventBlobHandler(long jarg1, BS2EventBlob jarg1_);
  public final static native void delete_BS2EventBlobHandler(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlobHandler_assign(long jarg1, BS2EventBlob jarg1_, long jarg2, BS2EventBlob jarg2_);
  public final static native long BS2EventBlobHandler_value(long jarg1, BS2EventBlob jarg1_);
  public final static native long new_BS2FireAlarmZoneHandler();
  public final static native long copy_BS2FireAlarmZoneHandler(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void delete_BS2FireAlarmZoneHandler(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native void BS2FireAlarmZoneHandler_assign(long jarg1, BS2FireAlarmZone jarg1_, long jarg2, BS2FireAlarmZone jarg2_);
  public final static native long BS2FireAlarmZoneHandler_value(long jarg1, BS2FireAlarmZone jarg1_);
  public final static native long new_BS2FloorLevelHandler();
  public final static native long copy_BS2FloorLevelHandler(long jarg1, BS2FloorLevel jarg1_);
  public final static native void delete_BS2FloorLevelHandler(long jarg1, BS2FloorLevel jarg1_);
  public final static native void BS2FloorLevelHandler_assign(long jarg1, BS2FloorLevel jarg1_, long jarg2, BS2FloorLevel jarg2_);
  public final static native long BS2FloorLevelHandler_value(long jarg1, BS2FloorLevel jarg1_);
  public final static native long new_BS2HolidayGroupHandler();
  public final static native long copy_BS2HolidayGroupHandler(long jarg1, BS2HolidayGroup jarg1_);
  public final static native void delete_BS2HolidayGroupHandler(long jarg1, BS2HolidayGroup jarg1_);
  public final static native void BS2HolidayGroupHandler_assign(long jarg1, BS2HolidayGroup jarg1_, long jarg2, BS2HolidayGroup jarg2_);
  public final static native long BS2HolidayGroupHandler_value(long jarg1, BS2HolidayGroup jarg1_);
  public final static native long new_BS2LiftHandler();
  public final static native long copy_BS2LiftHandler(long jarg1, BS2Lift jarg1_);
  public final static native void delete_BS2LiftHandler(long jarg1, BS2Lift jarg1_);
  public final static native void BS2LiftHandler_assign(long jarg1, BS2Lift jarg1_, long jarg2, BS2Lift jarg2_);
  public final static native long BS2LiftHandler_value(long jarg1, BS2Lift jarg1_);
  public final static native long new_BS2LiftStatusHandler();
  public final static native long copy_BS2LiftStatusHandler(long jarg1, BS2LiftStatus jarg1_);
  public final static native void delete_BS2LiftStatusHandler(long jarg1, BS2LiftStatus jarg1_);
  public final static native void BS2LiftStatusHandler_assign(long jarg1, BS2LiftStatus jarg1_, long jarg2, BS2LiftStatus jarg2_);
  public final static native long BS2LiftStatusHandler_value(long jarg1, BS2LiftStatus jarg1_);
  public final static native long new_BS2Rs485SlaveDeviceHandler();
  public final static native long copy_BS2Rs485SlaveDeviceHandler(long jarg1, BS2Rs485SlaveDevice jarg1_);
  public final static native void delete_BS2Rs485SlaveDeviceHandler(long jarg1, BS2Rs485SlaveDevice jarg1_);
  public final static native void BS2Rs485SlaveDeviceHandler_assign(long jarg1, BS2Rs485SlaveDevice jarg1_, long jarg2, BS2Rs485SlaveDevice jarg2_);
  public final static native long BS2Rs485SlaveDeviceHandler_value(long jarg1, BS2Rs485SlaveDevice jarg1_);
  public final static native long new_BS2Rs485SlaveDeviceEXHandler();
  public final static native long copy_BS2Rs485SlaveDeviceEXHandler(long jarg1, BS2Rs485SlaveDeviceEX jarg1_);
  public final static native void delete_BS2Rs485SlaveDeviceEXHandler(long jarg1, BS2Rs485SlaveDeviceEX jarg1_);
  public final static native void BS2Rs485SlaveDeviceEXHandler_assign(long jarg1, BS2Rs485SlaveDeviceEX jarg1_, long jarg2, BS2Rs485SlaveDeviceEX jarg2_);
  public final static native long BS2Rs485SlaveDeviceEXHandler_value(long jarg1, BS2Rs485SlaveDeviceEX jarg1_);
  public final static native long new_BS2ScheduleHandler();
  public final static native long copy_BS2ScheduleHandler(long jarg1, BS2Schedule jarg1_);
  public final static native void delete_BS2ScheduleHandler(long jarg1, BS2Schedule jarg1_);
  public final static native void BS2ScheduleHandler_assign(long jarg1, BS2Schedule jarg1_, long jarg2, BS2Schedule jarg2_);
  public final static native long BS2ScheduleHandler_value(long jarg1, BS2Schedule jarg1_);
  public final static native long new_BS2ScheduledLockUnlockZoneHandler();
  public final static native long copy_BS2ScheduledLockUnlockZoneHandler(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void delete_BS2ScheduledLockUnlockZoneHandler(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native void BS2ScheduledLockUnlockZoneHandler_assign(long jarg1, BS2ScheduledLockUnlockZone jarg1_, long jarg2, BS2ScheduledLockUnlockZone jarg2_);
  public final static native long BS2ScheduledLockUnlockZoneHandler_value(long jarg1, BS2ScheduledLockUnlockZone jarg1_);
  public final static native long new_BS2TimedAntiPassbackZoneHandler();
  public final static native long copy_BS2TimedAntiPassbackZoneHandler(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void delete_BS2TimedAntiPassbackZoneHandler(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native void BS2TimedAntiPassbackZoneHandler_assign(long jarg1, BS2TimedAntiPassbackZone jarg1_, long jarg2, BS2TimedAntiPassbackZone jarg2_);
  public final static native long BS2TimedAntiPassbackZoneHandler_value(long jarg1, BS2TimedAntiPassbackZone jarg1_);
  public final static native long new_BS2ZoneStatusHandler();
  public final static native long copy_BS2ZoneStatusHandler(long jarg1, BS2ZoneStatus jarg1_);
  public final static native void delete_BS2ZoneStatusHandler(long jarg1, BS2ZoneStatus jarg1_);
  public final static native void BS2ZoneStatusHandler_assign(long jarg1, BS2ZoneStatus jarg1_, long jarg2, BS2ZoneStatus jarg2_);
  public final static native long BS2ZoneStatusHandler_value(long jarg1, BS2ZoneStatus jarg1_);
  public final static native long new_BS2DeviceZoneConfigHandler();
  public final static native long copy_BS2DeviceZoneConfigHandler(long jarg1, BS2DeviceZoneConfig jarg1_);
  public final static native void delete_BS2DeviceZoneConfigHandler(long jarg1, BS2DeviceZoneConfig jarg1_);
  public final static native void BS2DeviceZoneConfigHandler_assign(long jarg1, BS2DeviceZoneConfig jarg1_, long jarg2, BS2DeviceZoneConfig jarg2_);
  public final static native long BS2DeviceZoneConfigHandler_value(long jarg1, BS2DeviceZoneConfig jarg1_);
  public final static native long new_BS2UserBlobHandler();
  public final static native long copy_BS2UserBlobHandler(long jarg1, BS2UserBlob jarg1_);
  public final static native void delete_BS2UserBlobHandler(long jarg1, BS2UserBlob jarg1_);
  public final static native void BS2UserBlobHandler_assign(long jarg1, BS2UserBlob jarg1_, long jarg2, BS2UserBlob jarg2_);
  public final static native long BS2UserBlobHandler_value(long jarg1, BS2UserBlob jarg1_);
  public final static native long new_BS2UserHandler();
  public final static native long copy_BS2UserHandler(long jarg1, BS2User jarg1_);
  public final static native void delete_BS2UserHandler(long jarg1, BS2User jarg1_);
  public final static native void BS2UserHandler_assign(long jarg1, BS2User jarg1_, long jarg2, BS2User jarg2_);
  public final static native long BS2UserHandler_value(long jarg1, BS2User jarg1_);
  public final static native int BS2_MAX_NUM_OF_CARD_PER_USER_get();
  public final static native int BS2_MAX_NUM_OF_FINGER_PER_USER_get();
  public final static native int BS2_MAX_NUM_OF_FACE_PER_USER_get();
  public final static native int BS2_MAX_NUM_OF_ACCESS_GROUP_PER_USER_get();
  public final static native int BS2_SSL_CONNECT_TIMEOUT_get();
  public final static native void BS2UserBlob_user_set(long jarg1, BS2UserBlob jarg1_, long jarg2, BS2User jarg2_);
  public final static native long BS2UserBlob_user_get(long jarg1, BS2UserBlob jarg1_);
  public final static native void BS2UserBlob_setting_set(long jarg1, BS2UserBlob jarg1_, long jarg2, BS2UserSetting jarg2_);
  public final static native long BS2UserBlob_setting_get(long jarg1, BS2UserBlob jarg1_);
  public final static native void BS2UserBlob_user_name_set(long jarg1, BS2UserBlob jarg1_, short[] jarg2);
  public final static native short[] BS2UserBlob_user_name_get(long jarg1, BS2UserBlob jarg1_);
  public final static native void BS2UserBlob_user_photo_set(long jarg1, BS2UserBlob jarg1_, long jarg2, BS2UserPhoto jarg2_);
  public final static native long BS2UserBlob_user_photo_get(long jarg1, BS2UserBlob jarg1_);
  public final static native void BS2UserBlob_pin_set(long jarg1, BS2UserBlob jarg1_, short[] jarg2);
  public final static native short[] BS2UserBlob_pin_get(long jarg1, BS2UserBlob jarg1_);
  public final static native void BS2UserBlob_cardObjs_set(long jarg1, BS2UserBlob jarg1_, long jarg2, BS2CSNCard jarg2_);
  public final static native long BS2UserBlob_cardObjs_get(long jarg1, BS2UserBlob jarg1_);
  public final static native void BS2UserBlob_fingerObjs_set(long jarg1, BS2UserBlob jarg1_, long jarg2, BS2Fingerprint jarg2_);
  public final static native long BS2UserBlob_fingerObjs_get(long jarg1, BS2UserBlob jarg1_);
  public final static native void BS2UserBlob_faceObjs_set(long jarg1, BS2UserBlob jarg1_, long jarg2, BS2Face jarg2_);
  public final static native long BS2UserBlob_faceObjs_get(long jarg1, BS2UserBlob jarg1_);
  public final static native void BS2UserBlob_accessGroupId_set(long jarg1, BS2UserBlob jarg1_, long[] jarg2);
  public final static native long[] BS2UserBlob_accessGroupId_get(long jarg1, BS2UserBlob jarg1_);
  public final static native long new_BS2UserBlob();
  public final static native void delete_BS2UserBlob(long jarg1);
  public final static native void BS2UserBlobEx_user_set(long jarg1, BS2UserBlobEx jarg1_, long jarg2, BS2User jarg2_);
  public final static native long BS2UserBlobEx_user_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native void BS2UserBlobEx_setting_set(long jarg1, BS2UserBlobEx jarg1_, long jarg2, BS2UserSetting jarg2_);
  public final static native long BS2UserBlobEx_setting_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native void BS2UserBlobEx_user_name_set(long jarg1, BS2UserBlobEx jarg1_, short[] jarg2);
  public final static native short[] BS2UserBlobEx_user_name_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native void BS2UserBlobEx_user_photo_set(long jarg1, BS2UserBlobEx jarg1_, long jarg2, BS2UserPhoto jarg2_);
  public final static native long BS2UserBlobEx_user_photo_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native void BS2UserBlobEx_pin_set(long jarg1, BS2UserBlobEx jarg1_, short[] jarg2);
  public final static native short[] BS2UserBlobEx_pin_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native void BS2UserBlobEx_cardObjs_set(long jarg1, BS2UserBlobEx jarg1_, long jarg2, BS2CSNCard jarg2_);
  public final static native long BS2UserBlobEx_cardObjs_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native void BS2UserBlobEx_fingerObjs_set(long jarg1, BS2UserBlobEx jarg1_, long jarg2, BS2Fingerprint jarg2_);
  public final static native long BS2UserBlobEx_fingerObjs_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native void BS2UserBlobEx_faceObjs_set(long jarg1, BS2UserBlobEx jarg1_, long jarg2, BS2Face jarg2_);
  public final static native long BS2UserBlobEx_faceObjs_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native void BS2UserBlobEx_job_set(long jarg1, BS2UserBlobEx jarg1_, long jarg2, BS2Job jarg2_);
  public final static native long BS2UserBlobEx_job_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native void BS2UserBlobEx_phrase_set(long jarg1, BS2UserBlobEx jarg1_, short[] jarg2);
  public final static native short[] BS2UserBlobEx_phrase_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native void BS2UserBlobEx_accessGroupId_set(long jarg1, BS2UserBlobEx jarg1_, long[] jarg2);
  public final static native long[] BS2UserBlobEx_accessGroupId_get(long jarg1, BS2UserBlobEx jarg1_);
  public final static native long new_BS2UserBlobEx();
  public final static native void delete_BS2UserBlobEx(long jarg1);
  public final static native void BS2EventBlob_eventMask_set(long jarg1, BS2EventBlob jarg1_, int jarg2);
  public final static native int BS2EventBlob_eventMask_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_id_set(long jarg1, BS2EventBlob jarg1_, long jarg2);
  public final static native long BS2EventBlob_id_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_info_set(long jarg1, BS2EventBlob jarg1_, long jarg2, BS2EventExtInfo jarg2_);
  public final static native long BS2EventBlob_info_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_userID_set(long jarg1, BS2EventBlob jarg1_, String jarg2);
  public final static native String BS2EventBlob_userID_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_cardID_set(long jarg1, BS2EventBlob jarg1_, short[] jarg2);
  public final static native short[] BS2EventBlob_cardID_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_doorID_set(long jarg1, BS2EventBlob jarg1_, long jarg2);
  public final static native long BS2EventBlob_doorID_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_zoneID_set(long jarg1, BS2EventBlob jarg1_, long jarg2);
  public final static native long BS2EventBlob_zoneID_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_ioDevice_set(long jarg1, BS2EventBlob jarg1_, long jarg2, BS2EventExtIoDevice jarg2_);
  public final static native long BS2EventBlob_ioDevice_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_tnaKey_set(long jarg1, BS2EventBlob jarg1_, short jarg2);
  public final static native short BS2EventBlob_tnaKey_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_jobCode_set(long jarg1, BS2EventBlob jarg1_, long jarg2);
  public final static native long BS2EventBlob_jobCode_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_imageSize_set(long jarg1, BS2EventBlob jarg1_, int jarg2);
  public final static native int BS2EventBlob_imageSize_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_image_set(long jarg1, BS2EventBlob jarg1_, short[] jarg2);
  public final static native short[] BS2EventBlob_image_get(long jarg1, BS2EventBlob jarg1_);
  public final static native void BS2EventBlob_reserved_set(long jarg1, BS2EventBlob jarg1_, short jarg2);
  public final static native short BS2EventBlob_reserved_get(long jarg1, BS2EventBlob jarg1_);
  public final static native long new_BS2EventBlob();
  public final static native void delete_BS2EventBlob(long jarg1);
  public final static native void BS2SimpleDeviceInfo_id_set(long jarg1, BS2SimpleDeviceInfo jarg1_, long jarg2);
  public final static native long BS2SimpleDeviceInfo_id_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_type_set(long jarg1, BS2SimpleDeviceInfo jarg1_, int jarg2);
  public final static native int BS2SimpleDeviceInfo_type_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_connectionMode_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_connectionMode_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_ipv4Address_set(long jarg1, BS2SimpleDeviceInfo jarg1_, long jarg2);
  public final static native long BS2SimpleDeviceInfo_ipv4Address_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_port_set(long jarg1, BS2SimpleDeviceInfo jarg1_, int jarg2);
  public final static native int BS2SimpleDeviceInfo_port_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_maxNumOfUser_set(long jarg1, BS2SimpleDeviceInfo jarg1_, long jarg2);
  public final static native long BS2SimpleDeviceInfo_maxNumOfUser_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_userNameSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_userNameSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_userPhotoSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_userPhotoSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_pinSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_pinSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_cardSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_cardSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_fingerSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_fingerSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_faceSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_faceSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_wlanSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_wlanSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_tnaSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_tnaSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_triggerActionSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_triggerActionSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_wiegandSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_wiegandSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_imageLogSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_imageLogSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_dnsSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_dnsSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_jobCodeSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_jobCodeSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_wiegandMultiSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_wiegandMultiSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_rs485Mode_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_rs485Mode_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_sslSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_sslSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_rootCertExist_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_rootCertExist_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_dualIDSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_dualIDSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_useAlphanumericID_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_useAlphanumericID_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_connectedIP_set(long jarg1, BS2SimpleDeviceInfo jarg1_, long jarg2);
  public final static native long BS2SimpleDeviceInfo_connectedIP_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_phraseSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_phraseSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_card1xSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_card1xSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_systemExtSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_systemExtSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_voipSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_voipSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_rs485ExSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_rs485ExSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native void BS2SimpleDeviceInfo_cardExSupported_set(long jarg1, BS2SimpleDeviceInfo jarg1_, short jarg2);
  public final static native short BS2SimpleDeviceInfo_cardExSupported_get(long jarg1, BS2SimpleDeviceInfo jarg1_);
  public final static native long new_BS2SimpleDeviceInfo();
  public final static native void delete_BS2SimpleDeviceInfo(long jarg1);
  public final static native int BS2SimpleDeviceInfoEx_BS2_SUPPORT_RS485EX_get();
  public final static native int BS2SimpleDeviceInfoEx_BS2_SUPPORT_CARDEX_get();
  public final static native int BS2SimpleDeviceInfoEx_BS2_SUPPORT_DST_get();
  public final static native int BS2SimpleDeviceInfoEx_BS2_SUPPORT_ALL_get();
  public final static native void BS2SimpleDeviceInfoEx_supported_set(long jarg1, BS2SimpleDeviceInfoEx jarg1_, long jarg2);
  public final static native long BS2SimpleDeviceInfoEx_supported_get(long jarg1, BS2SimpleDeviceInfoEx jarg1_);
  public final static native void BS2SimpleDeviceInfoEx_reserved_set(long jarg1, BS2SimpleDeviceInfoEx jarg1_, short[] jarg2);
  public final static native short[] BS2SimpleDeviceInfoEx_reserved_get(long jarg1, BS2SimpleDeviceInfoEx jarg1_);
  public final static native long new_BS2SimpleDeviceInfoEx();
  public final static native void delete_BS2SimpleDeviceInfoEx(long jarg1);
  public final static native void BS2Configs_configMask_set(long jarg1, BS2Configs jarg1_, long jarg2);
  public final static native long BS2Configs_configMask_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_factoryConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2FactoryConfig jarg2_);
  public final static native long BS2Configs_factoryConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_systemConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2SystemConfig jarg2_);
  public final static native long BS2Configs_systemConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_authConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2AuthConfig jarg2_);
  public final static native long BS2Configs_authConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_statusConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2StatusConfig jarg2_);
  public final static native long BS2Configs_statusConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_displayConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2DisplayConfig jarg2_);
  public final static native long BS2Configs_displayConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_ipConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2IpConfig jarg2_);
  public final static native long BS2Configs_ipConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_ipConfigExt_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2IpConfigExt jarg2_);
  public final static native long BS2Configs_ipConfigExt_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_tnaConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2TNAConfig jarg2_);
  public final static native long BS2Configs_tnaConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_cardConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2CardConfig jarg2_);
  public final static native long BS2Configs_cardConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_fingerprintConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2FingerprintConfig jarg2_);
  public final static native long BS2Configs_fingerprintConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_rs485Config_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2Rs485Config jarg2_);
  public final static native long BS2Configs_rs485Config_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_wiegandConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2WiegandConfig jarg2_);
  public final static native long BS2Configs_wiegandConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_wiegandDeviceConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2WiegandDeviceConfig jarg2_);
  public final static native long BS2Configs_wiegandDeviceConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_inputConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2InputConfig jarg2_);
  public final static native long BS2Configs_inputConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_wlanConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2WlanConfig jarg2_);
  public final static native long BS2Configs_wlanConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_triggerActionConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2TriggerActionConfig jarg2_);
  public final static native long BS2Configs_triggerActionConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_eventConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2EventConfig jarg2_);
  public final static native long BS2Configs_eventConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_wiegandMultiConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2WiegandMultiConfig jarg2_);
  public final static native long BS2Configs_wiegandMultiConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_card1xConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS1CardConfig jarg2_);
  public final static native long BS2Configs_card1xConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_systemExtConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2SystemConfigExt jarg2_);
  public final static native long BS2Configs_systemExtConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_voipConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2VoipConfig jarg2_);
  public final static native long BS2Configs_voipConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native void BS2Configs_faceConfig_set(long jarg1, BS2Configs jarg1_, long jarg2, BS2FaceConfig jarg2_);
  public final static native long BS2Configs_faceConfig_get(long jarg1, BS2Configs jarg1_);
  public final static native long new_BS2Configs();
  public final static native void delete_BS2Configs(long jarg1);
  public final static native void BS2ResourceElement_type_set(long jarg1, BS2ResourceElement jarg1_, short jarg2);
  public final static native short BS2ResourceElement_type_get(long jarg1, BS2ResourceElement jarg1_);
  public final static native void BS2ResourceElement_numResData_set(long jarg1, BS2ResourceElement jarg1_, long jarg2);
  public final static native long BS2ResourceElement_numResData_get(long jarg1, BS2ResourceElement jarg1_);
  public final static native long new_BS2ResourceElement();
  public final static native void delete_BS2ResourceElement(long jarg1);
  public final static native void BS2Card_isSmartCard_set(long jarg1, BS2Card jarg1_, short jarg2);
  public final static native short BS2Card_isSmartCard_get(long jarg1, BS2Card jarg1_);
  public final static native void BS2Card_card_set(long jarg1, BS2Card jarg1_, long jarg2, BS2CSNCard jarg2_);
  public final static native long BS2Card_card_get(long jarg1, BS2Card jarg1_);
  public final static native void BS2Card_smartCard_set(long jarg1, BS2Card jarg1_, long jarg2, BS2SmartCardData jarg2_);
  public final static native long BS2Card_smartCard_get(long jarg1, BS2Card jarg1_);
  public final static native long new_BS2Card();
  public final static native void delete_BS2Card(long jarg1);
  public final static native void BS2DeviceNode_parentDeviceID_set(long jarg1, BS2DeviceNode jarg1_, long jarg2);
  public final static native long BS2DeviceNode_parentDeviceID_get(long jarg1, BS2DeviceNode jarg1_);
  public final static native void BS2DeviceNode_deviceID_set(long jarg1, BS2DeviceNode jarg1_, long jarg2);
  public final static native long BS2DeviceNode_deviceID_get(long jarg1, BS2DeviceNode jarg1_);
  public final static native void BS2DeviceNode_deviceType_set(long jarg1, BS2DeviceNode jarg1_, int jarg2);
  public final static native int BS2DeviceNode_deviceType_get(long jarg1, BS2DeviceNode jarg1_);
  public final static native long new_BS2DeviceNode();
  public final static native void delete_BS2DeviceNode(long jarg1);
  public final static native void BS2FireAlarmZoneProperty_numSensors_set(long jarg1, BS2FireAlarmZoneProperty jarg1_, int jarg2);
  public final static native int BS2FireAlarmZoneProperty_numSensors_get(long jarg1, BS2FireAlarmZoneProperty jarg1_);
  public final static native void BS2FireAlarmZoneProperty_sensor_set(long jarg1, BS2FireAlarmZoneProperty jarg1_, long jarg2, BS2FireSensor jarg2_);
  public final static native long BS2FireAlarmZoneProperty_sensor_get(long jarg1, BS2FireAlarmZoneProperty jarg1_);
  public final static native void BS2FireAlarmZoneProperty_action_set(long jarg1, BS2FireAlarmZoneProperty jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2FireAlarmZoneProperty_action_get(long jarg1, BS2FireAlarmZoneProperty jarg1_);
  public final static native long new_BS2FireAlarmZoneProperty();
  public final static native void delete_BS2FireAlarmZoneProperty(long jarg1);
  public final static native void BS2APBZoneProperty_action_set(long jarg1, BS2APBZoneProperty jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2APBZoneProperty_action_get(long jarg1, BS2APBZoneProperty jarg1_);
  public final static native long new_BS2APBZoneProperty();
  public final static native void delete_BS2APBZoneProperty(long jarg1);
  public final static native void BS2ZoneEx_zoneId_set(long jarg1, BS2ZoneEx jarg1_, int jarg2);
  public final static native int BS2ZoneEx_zoneId_get(long jarg1, BS2ZoneEx jarg1_);
  public final static native void BS2ZoneEx_zoneType_set(long jarg1, BS2ZoneEx jarg1_, int jarg2);
  public final static native int BS2ZoneEx_zoneType_get(long jarg1, BS2ZoneEx jarg1_);
  public final static native void BS2ZoneEx_apbProperty_set(long jarg1, BS2ZoneEx jarg1_, long jarg2, BS2APBZoneProperty jarg2_);
  public final static native long BS2ZoneEx_apbProperty_get(long jarg1, BS2ZoneEx jarg1_);
  public final static native void BS2ZoneEx_fireAlarmProperty_set(long jarg1, BS2ZoneEx jarg1_, long jarg2, BS2FireAlarmZoneProperty jarg2_);
  public final static native long BS2ZoneEx_fireAlarmProperty_get(long jarg1, BS2ZoneEx jarg1_);
  public final static native long new_BS2ZoneEx();
  public final static native void delete_BS2ZoneEx(long jarg1);
  public final static native void BS2APBZoneConfig_zoneID_set(long jarg1, BS2APBZoneConfig jarg1_, long jarg2);
  public final static native long BS2APBZoneConfig_zoneID_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_name_set(long jarg1, BS2APBZoneConfig jarg1_, String jarg2);
  public final static native String BS2APBZoneConfig_name_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_type_set(long jarg1, BS2APBZoneConfig jarg1_, short jarg2);
  public final static native short BS2APBZoneConfig_type_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_numReaders_set(long jarg1, BS2APBZoneConfig jarg1_, short jarg2);
  public final static native short BS2APBZoneConfig_numReaders_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_numBypassGroups_set(long jarg1, BS2APBZoneConfig jarg1_, short jarg2);
  public final static native short BS2APBZoneConfig_numBypassGroups_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_disabled_set(long jarg1, BS2APBZoneConfig jarg1_, boolean jarg2);
  public final static native boolean BS2APBZoneConfig_disabled_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_alarmed_set(long jarg1, BS2APBZoneConfig jarg1_, boolean jarg2);
  public final static native boolean BS2APBZoneConfig_alarmed_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_reserved_set(long jarg1, BS2APBZoneConfig jarg1_, short[] jarg2);
  public final static native short[] BS2APBZoneConfig_reserved_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_resetDuration_set(long jarg1, BS2APBZoneConfig jarg1_, long jarg2);
  public final static native long BS2APBZoneConfig_resetDuration_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_alarm_set(long jarg1, BS2APBZoneConfig jarg1_, long jarg2, BS2Action jarg2_);
  public final static native long BS2APBZoneConfig_alarm_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_readers_set(long jarg1, BS2APBZoneConfig jarg1_, long jarg2, BS2ApbMember jarg2_);
  public final static native long BS2APBZoneConfig_readers_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_reserved2_set(long jarg1, BS2APBZoneConfig jarg1_, short[] jarg2);
  public final static native short[] BS2APBZoneConfig_reserved2_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native void BS2APBZoneConfig_bypassGroupIDs_set(long jarg1, BS2APBZoneConfig jarg1_, long[] jarg2);
  public final static native long[] BS2APBZoneConfig_bypassGroupIDs_get(long jarg1, BS2APBZoneConfig jarg1_);
  public final static native long new_BS2APBZoneConfig();
  public final static native void delete_BS2APBZoneConfig(long jarg1);
  public final static native void BS2AuthUserBlob_authGroupID_set(long jarg1, BS2AuthUserBlob jarg1_, long jarg2);
  public final static native long BS2AuthUserBlob_authGroupID_get(long jarg1, BS2AuthUserBlob jarg1_);
  public final static native void BS2AuthUserBlob_numUsers_set(long jarg1, BS2AuthUserBlob jarg1_, long jarg2);
  public final static native long BS2AuthUserBlob_numUsers_get(long jarg1, BS2AuthUserBlob jarg1_);
  public final static native void BS2AuthUserBlob_userObjs_set(long jarg1, BS2AuthUserBlob jarg1_, long jarg2);
  public final static native long BS2AuthUserBlob_userObjs_get(long jarg1, BS2AuthUserBlob jarg1_);
  public final static native long new_BS2AuthUserBlob();
  public final static native void delete_BS2AuthUserBlob(long jarg1);
  public final static native void BS2IntrusionAlarmZoneBlob_IntrusionAlarmZone_set(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_, long jarg2, BS2IntrusionAlarmZone jarg2_);
  public final static native long BS2IntrusionAlarmZoneBlob_IntrusionAlarmZone_get(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_);
  public final static native void BS2IntrusionAlarmZoneBlob_memberObjs_set(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_, long jarg2, BS2AlarmZoneMember jarg2_);
  public final static native long BS2IntrusionAlarmZoneBlob_memberObjs_get(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_);
  public final static native void BS2IntrusionAlarmZoneBlob_inputObjs_set(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_, long jarg2, BS2AlarmZoneInput jarg2_);
  public final static native long BS2IntrusionAlarmZoneBlob_inputObjs_get(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_);
  public final static native void BS2IntrusionAlarmZoneBlob_outputObjs_set(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_, long jarg2, BS2AlarmZoneOutput jarg2_);
  public final static native long BS2IntrusionAlarmZoneBlob_outputObjs_get(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_);
  public final static native void BS2IntrusionAlarmZoneBlob_cardObjs_set(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_, long jarg2, BS2CSNCard jarg2_);
  public final static native long BS2IntrusionAlarmZoneBlob_cardObjs_get(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_);
  public final static native void BS2IntrusionAlarmZoneBlob_doorIDs_set(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_, long jarg2);
  public final static native long BS2IntrusionAlarmZoneBlob_doorIDs_get(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_);
  public final static native void BS2IntrusionAlarmZoneBlob_groupIDs_set(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_, long jarg2);
  public final static native long BS2IntrusionAlarmZoneBlob_groupIDs_get(long jarg1, BS2IntrusionAlarmZoneBlob jarg1_);
  public final static native long new_BS2IntrusionAlarmZoneBlob();
  public final static native void delete_BS2IntrusionAlarmZoneBlob(long jarg1);
  public final static native void BS2InterlockZoneBlob_InterlockZone_set(long jarg1, BS2InterlockZoneBlob jarg1_, long jarg2, BS2InterlockZone jarg2_);
  public final static native long BS2InterlockZoneBlob_InterlockZone_get(long jarg1, BS2InterlockZoneBlob jarg1_);
  public final static native void BS2InterlockZoneBlob_inputObjs_set(long jarg1, BS2InterlockZoneBlob jarg1_, long jarg2, BS2InterlockZoneInput jarg2_);
  public final static native long BS2InterlockZoneBlob_inputObjs_get(long jarg1, BS2InterlockZoneBlob jarg1_);
  public final static native void BS2InterlockZoneBlob_outputObjs_set(long jarg1, BS2InterlockZoneBlob jarg1_, long jarg2, BS2InterlockZoneOutput jarg2_);
  public final static native long BS2InterlockZoneBlob_outputObjs_get(long jarg1, BS2InterlockZoneBlob jarg1_);
  public final static native void BS2InterlockZoneBlob_doorIDs_set(long jarg1, BS2InterlockZoneBlob jarg1_, long jarg2);
  public final static native long BS2InterlockZoneBlob_doorIDs_get(long jarg1, BS2InterlockZoneBlob jarg1_);
  public final static native long new_BS2InterlockZoneBlob();
  public final static native void delete_BS2InterlockZoneBlob(long jarg1);
  public final static native int BS2_ENC_KEY_SIZE_get();
  public final static native void BS2EncryptKey_key_set(long jarg1, BS2EncryptKey jarg1_, short[] jarg2);
  public final static native short[] BS2EncryptKey_key_get(long jarg1, BS2EncryptKey jarg1_);
  public final static native void BS2EncryptKey_reserved_set(long jarg1, BS2EncryptKey jarg1_, short[] jarg2);
  public final static native short[] BS2EncryptKey_reserved_get(long jarg1, BS2EncryptKey jarg1_);
  public final static native long new_BS2EncryptKey();
  public final static native void delete_BS2EncryptKey(long jarg1);
  public final static native int DEBUG_KEEP_ALIVE_get();
  public final static native int DEBUG_SOCKET_MANAGER_get();
  public final static native int DEBUG_SOCKETBASE_HANDLER_get();
  public final static native int DEBUG_DEVICE_get();
  public final static native int DEBUG_DEVICE_MANAGER_get();
  public final static native int DEBUG_EVENT_DISPATCHER_get();
  public final static native int DEBUG_API_get();
  public final static native int DEBUG_ALL_get();
  public final static native int DEBUG_MODULE_KEEP_ALIVE_get();
  public final static native int DEBUG_MODULE_SOCKET_MANAGER_get();
  public final static native int DEBUG_MODULE_SOCKET_HANDLER_get();
  public final static native int DEBUG_MODULE_DEVICE_get();
  public final static native int DEBUG_MODULE_DEVICE_MANAGER_get();
  public final static native int DEBUG_MODULE_EVENT_DISPATCHER_get();
  public final static native int DEBUG_MODULE_API_get();
  public final static native int DEBUG_MODULE_MISC_get();
  public final static native int DEBUG_MODULE_ALL_get();
  public final static native int DEBUG_LOG_FATAL_get();
  public final static native int DEBUG_LOG_ERROR_get();
  public final static native int DEBUG_LOG_WARN_get();
  public final static native int DEBUG_LOG_INFO_get();
  public final static native int DEBUG_LOG_TRACE_get();
  public final static native int DEBUG_LOG_ALL_get();
  public final static native int BS2_SetDebugLevel(long jarg1, long jarg2);
  public final static native int BS2_SetDebugExCallback(long jarg1, long jarg2, long jarg3);
  public final static native String BS2_Version();
  public final static native long BS2_AllocateContext();
  public final static native void BS2_ReleaseContext(long jarg1);
  public final static native int BS2_Initialize(long jarg1);
  public final static native void BS2_ReleaseObject(long jarg1);
  public final static native int BS2_SetDeviceSearchingTimeout(long jarg1, long jarg2);
  public final static native int BS2_SetMaxThreadCount(long jarg1, long jarg2);
  public final static native int BS2_SetMaxConnectThreadCount(long jarg1, long jarg2);
  public final static native int BS2_IsAutoConnection(long jarg1, long jarg2);
  public final static native int BS2_SetAutoConnection(long jarg1, int jarg2);
  public final static native int BS2_SetDeviceEventListener(long jarg1, Callback jarg2, Callback jarg3, Callback jarg4, Callback jarg5);
  public final static native int BS2_SetNotificationListener(long jarg1, Callback jarg2, Callback jarg3, Callback jarg4);
  public final static native int BS2_SetServerPort(long jarg1, int jarg2);
  public final static native int BS2_SearchDevices(long jarg1);
  public final static native int BS2_SearchDevicesEx(long jarg1, String jarg2);
  public final static native int BS2_GetDevices(long jarg1, long[] jarg2);
  public final static native int BS2_GetDeviceInfo(long jarg1, long jarg2, long jarg3, BS2SimpleDeviceInfo jarg3_);
  public final static native int BS2_GetDeviceInfoEx(long jarg1, long jarg2, long jarg3, BS2SimpleDeviceInfo jarg3_, long jarg4, BS2SimpleDeviceInfoEx jarg4_);
  public final static native int BS2_ConnectDevice(long jarg1, long jarg2);
  public final static native int BS2_ConnectDeviceViaIP(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native int BS2_DisconnectDevice(long jarg1, long jarg2);
  public final static native int BS2_GetDeviceTopology(long jarg1, long jarg2, BS2DeviceNode[] jarg3);
  public final static native int BS2_SetDeviceTopology(long jarg1, long jarg2, long jarg3, BS2DeviceNode jarg3_, long jarg4);
  public final static native int BS2_IsConnected(long jarg1, long jarg2, long jarg3);
  public final static native int BS2_SetSSLServerPort(long jarg1, int jarg2);
  public final static native int BS2_SetSSLHandler(long jarg1, Callback jarg2, Callback jarg3, Callback jarg4, Callback jarg5, Callback jarg6, Callback jarg7);
  public final static native int BS2_SetDeviceSSLEventListener(long jarg1, Callback jarg2);
  public final static native int BS2_DisableSSL(long jarg1, long jarg2);
  public final static native int BS2_GetAccessGroup(long jarg1, long jarg2, long[] jarg3, BS2AccessGroup[] jarg5);
  public final static native int BS2_GetAllAccessGroup(long jarg1, long jarg2, BS2AccessGroup[] jarg3);
  public final static native int BS2_SetAccessGroup(long jarg1, long jarg2, long jarg3, BS2AccessGroup jarg3_, long jarg4);
  public final static native int BS2_RemoveAccessGroup(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllAccessGroup(long jarg1, long jarg2);
  public final static native int BS2_GetAccessLevel(long jarg1, long jarg2, long[] jarg3, BS2AccessLevel[] jarg5);
  public final static native int BS2_GetAllAccessLevel(long jarg1, long jarg2, BS2AccessLevel[] jarg3);
  public final static native int BS2_SetAccessLevel(long jarg1, long jarg2, long jarg3, BS2AccessLevel jarg3_, long jarg4);
  public final static native int BS2_RemoveAccessLevel(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllAccessLevel(long jarg1, long jarg2);
  public final static native int BS2_GetAccessSchedule(long jarg1, long jarg2, long[] jarg3, BS2Schedule[] jarg5);
  public final static native int BS2_GetAllAccessSchedule(long jarg1, long jarg2, BS2Schedule[] jarg3);
  public final static native int BS2_SetAccessSchedule(long jarg1, long jarg2, long jarg3, BS2Schedule jarg3_, long jarg4);
  public final static native int BS2_RemoveAccessSchedule(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllAccessSchedule(long jarg1, long jarg2);
  public final static native int BS2_GetHolidayGroup(long jarg1, long jarg2, long[] jarg3, BS2HolidayGroup[] jarg5);
  public final static native int BS2_GetAllHolidayGroup(long jarg1, long jarg2, BS2HolidayGroup[] jarg3);
  public final static native int BS2_SetHolidayGroup(long jarg1, long jarg2, long jarg3, BS2HolidayGroup jarg3_, long jarg4);
  public final static native int BS2_RemoveHolidayGroup(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllHolidayGroup(long jarg1, long jarg2);
  public final static native int BS2_GetBlackList(long jarg1, long jarg2, long jarg3, BS2BlackList jarg3_, long jarg4, BS2BlackList[] jarg5);
  public final static native int BS2_GetAllBlackList(long jarg1, long jarg2, BS2BlackList[] jarg3);
  public final static native int BS2_SetBlackList(long jarg1, long jarg2, long jarg3, BS2BlackList jarg3_, long jarg4);
  public final static native int BS2_RemoveBlackList(long jarg1, long jarg2, long jarg3, BS2BlackList jarg3_, long jarg4);
  public final static native int BS2_RemoveAllBlackList(long jarg1, long jarg2);
  public final static native int BS2_ScanCard(long jarg1, long jarg2, long jarg3, BS2Card jarg3_, long jarg4);
  public final static native int BS2_WriteCard(long jarg1, long jarg2, long jarg3, BS2SmartCardData jarg3_);
  public final static native int BS2_EraseCard(long jarg1, long jarg2);
  public final static native int BS2_ClearDatabase(long jarg1, long jarg2);
  public final static native int BS2_ResetConfig(long jarg1, long jarg2, short jarg3);
  public final static native int BS2_ResetConfigExceptNetInfo(long jarg1, long jarg2, short jarg3);
  public final static native int BS2_GetConfig(long jarg1, long jarg2, long jarg3, BS2Configs jarg3_);
  public final static native int BS2_SetConfig(long jarg1, long jarg2, long jarg3, BS2Configs jarg3_);
  public final static native int BS2_GetFactoryConfig(long jarg1, long jarg2, long jarg3, BS2FactoryConfig jarg3_);
  public final static native int BS2_GetSystemConfig(long jarg1, long jarg2, long jarg3, BS2SystemConfig jarg3_);
  public final static native int BS2_SetSystemConfig(long jarg1, long jarg2, long jarg3, BS2SystemConfig jarg3_);
  public final static native int BS2_GetAuthConfig(long jarg1, long jarg2, long jarg3, BS2AuthConfig jarg3_);
  public final static native int BS2_SetAuthConfig(long jarg1, long jarg2, long jarg3, BS2AuthConfig jarg3_);
  public final static native int BS2_GetStatusConfig(long jarg1, long jarg2, long jarg3, BS2StatusConfig jarg3_);
  public final static native int BS2_SetStatusConfig(long jarg1, long jarg2, long jarg3, BS2StatusConfig jarg3_);
  public final static native int BS2_GetDisplayConfig(long jarg1, long jarg2, long jarg3, BS2DisplayConfig jarg3_);
  public final static native int BS2_SetDisplayConfig(long jarg1, long jarg2, long jarg3, BS2DisplayConfig jarg3_);
  public final static native int BS2_GetIPConfig(long jarg1, long jarg2, long jarg3, BS2IpConfig jarg3_);
  public final static native int BS2_GetIPConfigExt(long jarg1, long jarg2, long jarg3, BS2IpConfigExt jarg3_);
  public final static native int BS2_GetIPConfigViaUDP(long jarg1, long jarg2, long jarg3, BS2IpConfig jarg3_);
  public final static native int BS2_SetIPConfig(long jarg1, long jarg2, long jarg3, BS2IpConfig jarg3_);
  public final static native int BS2_SetIPConfigExt(long jarg1, long jarg2, long jarg3, BS2IpConfigExt jarg3_);
  public final static native int BS2_SetIPConfigViaUDP(long jarg1, long jarg2, long jarg3, BS2IpConfig jarg3_);
  public final static native int BS2_GetTNAConfig(long jarg1, long jarg2, long jarg3, BS2TNAConfig jarg3_);
  public final static native int BS2_SetTNAConfig(long jarg1, long jarg2, long jarg3, BS2TNAConfig jarg3_);
  public final static native int BS2_GetCardConfig(long jarg1, long jarg2, long jarg3, BS2CardConfig jarg3_);
  public final static native int BS2_SetCardConfig(long jarg1, long jarg2, long jarg3, BS2CardConfig jarg3_);
  public final static native int BS2_GetFingerprintConfig(long jarg1, long jarg2, long jarg3, BS2FingerprintConfig jarg3_);
  public final static native int BS2_SetFingerprintConfig(long jarg1, long jarg2, long jarg3, BS2FingerprintConfig jarg3_);
  public final static native int BS2_GetRS485Config(long jarg1, long jarg2, long jarg3, BS2Rs485Config jarg3_);
  public final static native int BS2_SetRS485Config(long jarg1, long jarg2, long jarg3, BS2Rs485Config jarg3_);
  public final static native int BS2_GetWiegandConfig(long jarg1, long jarg2, long jarg3, BS2WiegandConfig jarg3_);
  public final static native int BS2_SetWiegandConfig(long jarg1, long jarg2, long jarg3, BS2WiegandConfig jarg3_);
  public final static native int BS2_GetWiegandDeviceConfig(long jarg1, long jarg2, long jarg3, BS2WiegandDeviceConfig jarg3_);
  public final static native int BS2_SetWiegandDeviceConfig(long jarg1, long jarg2, long jarg3, BS2WiegandDeviceConfig jarg3_);
  public final static native int BS2_GetInputConfig(long jarg1, long jarg2, long jarg3, BS2InputConfig jarg3_);
  public final static native int BS2_SetInputConfig(long jarg1, long jarg2, long jarg3, BS2InputConfig jarg3_);
  public final static native int BS2_GetWlanConfig(long jarg1, long jarg2, long jarg3, BS2WlanConfig jarg3_);
  public final static native int BS2_SetWlanConfig(long jarg1, long jarg2, long jarg3, BS2WlanConfig jarg3_);
  public final static native int BS2_GetTriggerActionConfig(long jarg1, long jarg2, long jarg3, BS2TriggerActionConfig jarg3_);
  public final static native int BS2_SetTriggerActionConfig(long jarg1, long jarg2, long jarg3, BS2TriggerActionConfig jarg3_);
  public final static native int BS2_GetEventConfig(long jarg1, long jarg2, long jarg3, BS2EventConfig jarg3_);
  public final static native int BS2_SetEventConfig(long jarg1, long jarg2, long jarg3, BS2EventConfig jarg3_);
  public final static native int BS2_GetWiegandMultiConfig(long jarg1, long jarg2, long jarg3, BS2WiegandMultiConfig jarg3_);
  public final static native int BS2_SetWiegandMultiConfig(long jarg1, long jarg2, long jarg3, BS2WiegandMultiConfig jarg3_);
  public final static native int BS2_GetCard1xConfig(long jarg1, long jarg2, long jarg3, BS1CardConfig jarg3_);
  public final static native int BS2_SetCard1xConfig(long jarg1, long jarg2, long jarg3, BS1CardConfig jarg3_);
  public final static native int BS2_GetSystemExtConfig(long jarg1, long jarg2, long jarg3, BS2SystemConfigExt jarg3_);
  public final static native int BS2_SetSystemExtConfig(long jarg1, long jarg2, long jarg3, BS2SystemConfigExt jarg3_);
  public final static native int BS2_GetVoipConfig(long jarg1, long jarg2, long jarg3, BS2VoipConfig jarg3_);
  public final static native int BS2_SetVoipConfig(long jarg1, long jarg2, long jarg3, BS2VoipConfig jarg3_);
  public final static native int BS2_GetFaceConfig(long jarg1, long jarg2, long jarg3, BS2FaceConfig jarg3_);
  public final static native int BS2_SetFaceConfig(long jarg1, long jarg2, long jarg3, BS2FaceConfig jarg3_);
  public final static native int BS2_GetCardConfigEx(long jarg1, long jarg2, long jarg3, BS2CardConfigEx jarg3_);
  public final static native int BS2_SetCardConfigEx(long jarg1, long jarg2, long jarg3, BS2CardConfigEx jarg3_);
  public final static native int BS2_GetRS485ConfigEx(long jarg1, long jarg2, long jarg3, BS2Rs485ConfigEX jarg3_);
  public final static native int BS2_SetRS485ConfigEx(long jarg1, long jarg2, long jarg3, BS2Rs485ConfigEX jarg3_);
  public final static native int BS2_GetSupportedConfigMask(long jarg1, long jarg2, long jarg3);
  public final static native int BS2_GetDstConfig(long jarg1, long jarg2, long jarg3, BS2DstConfig jarg3_);
  public final static native int BS2_SetDstConfig(long jarg1, long jarg2, long jarg3, BS2DstConfig jarg3_);
  public final static native int BS2_GetDoor(long jarg1, long jarg2, long[] jarg3, BS2Door[] jarg5);
  public final static native int BS2_GetAllDoor(long jarg1, long jarg2, BS2Door[] jarg3);
  public final static native int BS2_GetDoorStatus(long jarg1, long jarg2, long[] jarg3, BS2DoorStatus[] jarg5);
  public final static native int BS2_GetAllDoorStatus(long jarg1, long jarg2, BS2DoorStatus[] jarg3);
  public final static native int BS2_SetDoor(long jarg1, long jarg2, long jarg3, BS2Door jarg3_, long jarg4);
  public final static native int BS2_SetDoorAlarm(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_RemoveDoor(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllDoor(long jarg1, long jarg2);
  public final static native int BS2_ReleaseDoor(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_LockDoor(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_UnlockDoor(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_GetLift(long jarg1, long jarg2, long[] jarg3, BS2Lift[] jarg5);
  public final static native int BS2_GetAllLift(long jarg1, long jarg2, BS2Lift[] jarg3);
  public final static native int BS2_GetLiftStatus(long jarg1, long jarg2, long[] jarg3, BS2LiftStatus[] jarg5);
  public final static native int BS2_GetAllLiftStatus(long jarg1, long jarg2, BS2LiftStatus[] jarg3);
  public final static native int BS2_SetLift(long jarg1, long jarg2, long jarg3, BS2Lift jarg3_, long jarg4);
  public final static native int BS2_SetLiftAlarm(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_RemoveLift(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllLift(long jarg1, long jarg2);
  public final static native int BS2_ReleaseFloor(long jarg1, long jarg2, short jarg3, long jarg4, long jarg5, short jarg6);
  public final static native int BS2_ActivateFloor(long jarg1, long jarg2, short jarg3, long jarg4, long jarg5, short jarg6);
  public final static native int BS2_DeActivateFloor(long jarg1, long jarg2, short jarg3, long jarg4, long jarg5, short jarg6);
  public final static native int BS2_GetLastFingerprintImage(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int BS2_ScanFingerprint(long jarg1, long jarg2, long jarg3, BS2Fingerprint jarg3_, long jarg4, long jarg5, short jarg6, long jarg7);
  public final static native int BS2_ScanFingerprintEx(long jarg1, long jarg2, long jarg3, BS2Fingerprint jarg3_, long jarg4, long jarg5, short jarg6, long jarg7, long jarg8);
  public final static native int BS2_ScanFingerprintImage(long jarg1, long jarg2, long jarg3, long jarg4, short jarg5, long jarg6, long jarg7);
  public final static native int BS2_VerifyFingerprint(long jarg1, long jarg2, long jarg3, BS2Fingerprint jarg3_);
  public final static native int BS2_GetLog(long jarg1, long jarg2, long jarg3, long jarg4, BS2Event[] jarg5);
  public final static native int BS2_GetLogBlob(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, BS2EventBlob[] jarg6);
  public final static native int BS2_GetFilteredLog(long jarg1, long jarg2, String jarg3, int jarg4, long jarg5, long jarg6, short jarg7, BS2Event[] jarg8);
  public final static native int BS2_GetFilteredLogSinceEventId(long jarg1, long jarg2, String jarg3, int jarg4, long jarg5, long jarg6, short jarg7, long jarg8, long jarg9, BS2Event[] jarg10);
  public final static native int BS2_GetImageLog(long jarg1, long jarg2, long jarg3, byte[] jarg4);
  public final static native int BS2_ClearLog(long jarg1, long jarg2);
  public final static native int BS2_StartMonitoringLog(long jarg1, long jarg2, Callback jarg3);
  public final static native int BS2_StopMonitoringLog(long jarg1, long jarg2);
  public final static native int BS2_FactoryReset(long jarg1, long jarg2);
  public final static native int BS2_RebootDevice(long jarg1, long jarg2);
  public final static native int BS2_LockDevice(long jarg1, long jarg2);
  public final static native int BS2_UnlockDevice(long jarg1, long jarg2);
  public final static native int BS2_GetDeviceTime(long jarg1, long jarg2, long jarg3);
  public final static native int BS2_SetDeviceTime(long jarg1, long jarg2, long jarg3);
  public final static native int BS2_UpgradeFirmware(long jarg1, long jarg2, long jarg3, long jarg4, short jarg5, Callback jarg6);
  public final static native int BS2_UpdateResource(long jarg1, long jarg2, long jarg3, BS2ResourceElement jarg3_, short jarg4, Callback jarg5);
  public final static native int BS2_SetKeepAliveTimeout(long jarg1, int jarg2);
  public final static native int BS2_MakePinCode(long jarg1, String jarg2, long jarg3);
  public final static native int BS2_ComputeCRC16CCITT(long jarg1, long jarg2, long jarg3);
  public final static native int BS2_GetCardModel(String jarg1, long jarg2);
  public final static native int BS2_GetSlaveDevice(long jarg1, long jarg2, BS2Rs485SlaveDevice[] jarg3);
  public final static native int BS2_SetSlaveDevice(long jarg1, long jarg2, long jarg3, BS2Rs485SlaveDevice jarg3_, long jarg4);
  public final static native int BS2_RemoveSlaveDevice(long jarg1, long jarg2);
  public final static native int BS2_SetServerMatchingHandler(long jarg1, Callback jarg2, Callback jarg3);
  public final static native int BS2_VerifyUser(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, BS2UserBlob jarg5_);
  public final static native int BS2_IdentifyUser(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, BS2UserBlob jarg5_);
  public final static native int BS2_GetUserDatabaseInfo(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, Callback jarg7);
  public final static native int BS2_GetUserList(long jarg1, long jarg2, long jarg3, long jarg4, Callback jarg5);
  public final static native int BS2_GetUserInfos(long jarg1, long jarg2, String[] jarg3, long jarg5, BS2UserBlob jarg5_);
  public final static native int BS2_GetUserDatas(long jarg1, long jarg2, String[] jarg3, long jarg5, BS2UserBlob jarg5_, long jarg6);
  public final static native int BS2_EnrolUser(long jarg1, long jarg2, BS2UserBlob[] jarg3, short jarg5);
  public final static native int BS2_RemoveUser(long jarg1, long jarg2, String[] jarg3);
  public final static native int BS2_RemoveAllUser(long jarg1, long jarg2);
  public final static native int BS2_GetSupportedUserMask(long jarg1, long jarg2, long jarg3);
  public final static native int BS2_SearchWiegandDevices(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int BS2_GetWiegandDevices(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int BS2_AddWiegandDevices(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int BS2_RemoveWiegandDevices(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int BS2_GetAntiPassbackZone(long jarg1, long jarg2, long[] jarg3, BS2AntiPassbackZone[] jarg5);
  public final static native int BS2_GetAllAntiPassbackZone(long jarg1, long jarg2, BS2AntiPassbackZone[] jarg3);
  public final static native int BS2_GetAntiPassbackZoneStatus(long jarg1, long jarg2, long[] jarg3, BS2ZoneStatus[] jarg5);
  public final static native int BS2_GetAllAntiPassbackZoneStatus(long jarg1, long jarg2, BS2ZoneStatus[] jarg3);
  public final static native int BS2_SetAntiPassbackZone(long jarg1, long jarg2, long jarg3, BS2AntiPassbackZone jarg3_, long jarg4);
  public final static native int BS2_SetAntiPassbackZoneAlarm(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_RemoveAntiPassbackZone(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllAntiPassbackZone(long jarg1, long jarg2);
  public final static native int BS2_ClearAntiPassbackZoneStatus(long jarg1, long jarg2, long jarg3, String[] jarg4);
  public final static native int BS2_ClearAllAntiPassbackZoneStatus(long jarg1, long jarg2, long jarg3);
  public final static native int BS2_GetTimedAntiPassbackZone(long jarg1, long jarg2, long[] jarg3, BS2TimedAntiPassbackZone[] jarg5);
  public final static native int BS2_GetAllTimedAntiPassbackZone(long jarg1, long jarg2, BS2TimedAntiPassbackZone[] jarg3);
  public final static native int BS2_GetTimedAntiPassbackZoneStatus(long jarg1, long jarg2, long[] jarg3, BS2ZoneStatus[] jarg5);
  public final static native int BS2_GetAllTimedAntiPassbackZoneStatus(long jarg1, long jarg2, BS2ZoneStatus[] jarg3);
  public final static native int BS2_SetTimedAntiPassbackZone(long jarg1, long jarg2, long jarg3, BS2TimedAntiPassbackZone jarg3_, long jarg4);
  public final static native int BS2_SetTimedAntiPassbackZoneAlarm(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_RemoveTimedAntiPassbackZone(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllTimedAntiPassbackZone(long jarg1, long jarg2);
  public final static native int BS2_ClearTimedAntiPassbackZoneStatus(long jarg1, long jarg2, long jarg3, String[] jarg4);
  public final static native int BS2_ClearAllTimedAntiPassbackZoneStatus(long jarg1, long jarg2, long jarg3);
  public final static native int BS2_GetFireAlarmZone(long jarg1, long jarg2, long[] jarg3, BS2FireAlarmZone[] jarg5);
  public final static native int BS2_GetAllFireAlarmZone(long jarg1, long jarg2, BS2FireAlarmZone[] jarg3);
  public final static native int BS2_GetFireAlarmZoneStatus(long jarg1, long jarg2, long[] jarg3, BS2ZoneStatus[] jarg5);
  public final static native int BS2_GetAllFireAlarmZoneStatus(long jarg1, long jarg2, BS2ZoneStatus[] jarg3);
  public final static native int BS2_SetFireAlarmZone(long jarg1, long jarg2, long jarg3, BS2FireAlarmZone jarg3_, long jarg4);
  public final static native int BS2_SetFireAlarmZoneAlarm(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_RemoveFireAlarmZone(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllFireAlarmZone(long jarg1, long jarg2);
  public final static native int BS2_GetScheduledLockUnlockZone(long jarg1, long jarg2, long[] jarg3, BS2ScheduledLockUnlockZone[] jarg5);
  public final static native int BS2_GetAllScheduledLockUnlockZone(long jarg1, long jarg2, BS2ScheduledLockUnlockZone[] jarg3);
  public final static native int BS2_GetScheduledLockUnlockZoneStatus(long jarg1, long jarg2, long[] jarg3, BS2ZoneStatus[] jarg5);
  public final static native int BS2_GetAllScheduledLockUnlockZoneStatus(long jarg1, long jarg2, BS2ZoneStatus[] jarg3);
  public final static native int BS2_SetScheduledLockUnlockZone(long jarg1, long jarg2, long jarg3, BS2ScheduledLockUnlockZone jarg3_, long jarg4);
  public final static native int BS2_SetScheduledLockUnlockZoneAlarm(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_RemoveScheduledLockUnlockZone(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllScheduledLockUnlockZone(long jarg1, long jarg2);
  public final static native int BS2_GetFloorLevel(long jarg1, long jarg2, long[] jarg3, BS2FloorLevel[] jarg5);
  public final static native int BS2_GetAllFloorLevel(long jarg1, long jarg2, BS2FloorLevel[] jarg3);
  public final static native int BS2_SetFloorLevel(long jarg1, long jarg2, long jarg3, BS2FloorLevel jarg3_, long jarg4);
  public final static native int BS2_RemoveFloorLevel(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllFloorLevel(long jarg1, long jarg2);
  public final static native int BS2_ScanFace(long jarg1, long jarg2, long jarg3, BS2Face jarg3_, short jarg4, long jarg5);
  public final static native int BS2_GetAuthGroup(long jarg1, long jarg2, long[] jarg3, BS2AuthGroup[] jarg5);
  public final static native int BS2_GetAllAuthGroup(long jarg1, long jarg2, BS2AuthGroup[] jarg3);
  public final static native int BS2_SetAuthGroup(long jarg1, long jarg2, long jarg3, BS2AuthGroup jarg3_, long jarg4);
  public final static native int BS2_RemoveAuthGroup(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllAuthGroup(long jarg1, long jarg2);
  public final static native int BS2_VerifyUserEx(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, BS2UserBlobEx jarg5_);
  public final static native int BS2_IdentifyUserEx(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, BS2UserBlobEx jarg5_);
  public final static native int BS2_GetUserInfosEx(long jarg1, long jarg2, String[] jarg3, long jarg5, BS2UserBlobEx jarg5_);
  public final static native int BS2_GetUserDatasEx(long jarg1, long jarg2, String[] jarg3, long jarg5, BS2UserBlobEx jarg5_, long jarg6);
  public final static native int BS2_EnrolUserEx(long jarg1, long jarg2, long jarg3, BS2UserBlobEx jarg3_, long jarg4, short jarg5);
  public final static native long BS2_AllocateUsbContext(String jarg1);
  public final static native void BS2_ReleaseUsbContext(long jarg1);
  public final static native int BS2_GetUserDatabaseInfoFromDir(long jarg1, String jarg2, long jarg3, long jarg4, long jarg5, long jarg6, Callback jarg7);
  public final static native int BS2_GetUserListFromDir(long jarg1, String jarg2, long jarg3, long jarg4, Callback jarg5);
  public final static native int BS2_GetUserInfosFromDir(long jarg1, String jarg2, String[] jarg3, long jarg5, BS2UserBlob jarg5_);
  public final static native int BS2_GetUserDatasFromDir(long jarg1, String jarg2, String[] jarg3, long jarg5, BS2UserBlob jarg5_, long jarg6);
  public final static native int BS2_GetUserInfosExFromDir(long jarg1, String jarg2, String[] jarg3, long jarg5, BS2UserBlobEx jarg5_);
  public final static native int BS2_GetUserDatasExFromDir(long jarg1, String jarg2, String[] jarg3, long jarg5, BS2UserBlobEx jarg5_, long jarg6);
  public final static native int BS2_GetLogFromDir(long jarg1, String jarg2, long jarg3, long jarg4, BS2Event[] jarg5);
  public final static native int BS2_GetLogBlobFromDir(long jarg1, String jarg2, int jarg3, long jarg4, long jarg5, BS2EventBlob[] jarg6);
  public final static native int BS2_GetFilteredLogFromDir(long jarg1, String jarg2, String jarg3, int jarg4, long jarg5, long jarg6, short jarg7, BS2Event[] jarg8);
  public final static native int BS2_GetSlaveExDevice(long jarg1, long jarg2, long jarg3, BS2Rs485SlaveDeviceEX[] jarg4);
  public final static native int BS2_SetSlaveExDevice(long jarg1, long jarg2, long jarg3, long jarg4, BS2Rs485SlaveDeviceEX jarg4_, long jarg5);
  public final static native int BS2_SearchDevicesCoreStation(long jarg1);
  public final static native int BS2_GetDevicesCoreStation(long jarg1, long[] jarg2);
  public final static native int BS2_GetIntrusionAlarmZone(long jarg1, long jarg2, long jarg3, BS2IntrusionAlarmZoneBlob jarg3_, long jarg4);
  public final static native int BS2_GetIntrusionAlarmZoneStatus(long jarg1, long jarg2, long[] jarg3, BS2ZoneStatus[] jarg5);
  public final static native int BS2_GetAllIntrusionAlarmZoneStatus(long jarg1, long jarg2, BS2ZoneStatus[] jarg3);
  public final static native int BS2_SetIntrusionAlarmZone(long jarg1, long jarg2, long jarg3, BS2IntrusionAlarmZoneBlob jarg3_, long jarg4);
  public final static native int BS2_SetIntrusionAlarmZoneAlarm(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_RemoveIntrusionAlarmZone(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllIntrusionAlarmZone(long jarg1, long jarg2);
  public final static native int BS2_SetIntrusionAlarmZoneArm(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_GetInterlockZone(long jarg1, long jarg2, long jarg3, BS2InterlockZoneBlob jarg3_, long jarg4);
  public final static native int BS2_GetInterlockZoneStatus(long jarg1, long jarg2, long[] jarg3, BS2ZoneStatus[] jarg5);
  public final static native int BS2_GetAllInterlockZoneStatus(long jarg1, long jarg2, BS2ZoneStatus[] jarg3);
  public final static native int BS2_SetInterlockZone(long jarg1, long jarg2, long jarg3, BS2InterlockZoneBlob jarg3_, long jarg4);
  public final static native int BS2_SetInterlockZoneAlarm(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_RemoveInterlockZone(long jarg1, long jarg2, long[] jarg3);
  public final static native int BS2_RemoveAllInterlockZone(long jarg1, long jarg2);
  public final static native int BS2_GetDeviceZoneMasterConfig(long jarg1, long jarg2, long jarg3, BS2DeviceZoneMasterConfig jarg3_);
  public final static native int BS2_SetDeviceZoneMasterConfig(long jarg1, long jarg2, long jarg3, BS2DeviceZoneMasterConfig jarg3_);
  public final static native int BS2_RemoveDeviceZoneMasterConfig(long jarg1, long jarg2);
  public final static native int BS2_GetDeviceZone(long jarg1, long jarg2, long jarg3, BS2_DEVICE_ZONE_TABLE_ID jarg3_, long jarg4, BS2DeviceZone[] jarg5);
  public final static native int BS2_GetAllDeviceZone(long jarg1, long jarg2, BS2DeviceZone[] jarg3);
  public final static native int BS2_SetDeviceZone(long jarg1, long jarg2, long jarg3, BS2DeviceZone jarg3_, long jarg4);
  public final static native int BS2_RemoveDeviceZone(long jarg1, long jarg2, long jarg3, BS2_DEVICE_ZONE_TABLE_ID jarg3_, long jarg4);
  public final static native int BS2_RemoveAllDeviceZone(long jarg1, long jarg2);
  public final static native int BS2_GetDeviceZoneConfig(long jarg1, long jarg2, long jarg3, BS2DeviceZoneConfig jarg3_);
  public final static native int BS2_SetDeviceZoneConfig(long jarg1, long jarg2, long jarg3, BS2DeviceZoneConfig jarg3_);
  public final static native int BS2_SetDeviceZoneAlarm(long jarg1, long jarg2, short jarg3, long[] jarg4);
  public final static native int BS2_ClearDeviceZoneAccessRecord(long jarg1, long jarg2, long jarg3, String[] jarg4);
  public final static native int BS2_ClearAllDeviceZoneAccessRecord(long jarg1, long jarg2, long jarg3);
  public final static native int BS2_GetAccessGroupEntranceLimit(long jarg1, long jarg2, long jarg3, long jarg4, BS2DeviceZoneAGEntranceLimit[] jarg5);
  public final static native int BS2_GetAllAccessGroupEntranceLimit(long jarg1, long jarg2, BS2DeviceZoneAGEntranceLimit[] jarg3);
  public final static native int BS2_SetAccessGroupEntranceLimit(long jarg1, long jarg2, long jarg3, BS2DeviceZoneAGEntranceLimit jarg3_, long jarg4);
  public final static native int BS2_RemoveAccessGroupEntranceLimit(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int BS2_RemoveAllAccessGroupEntranceLimit(long jarg1, long jarg2);
  public final static native int BS2_GetDeviceZoneAGEntranceLimit(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native int BS2_GetAllDeviceZoneAGEntranceLimit(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int BS2_SetDeviceZoneAGEntranceLimit(long jarg1, long jarg2, long jarg3, BS2DeviceZoneAGEntranceLimit jarg3_, long jarg4);
  public final static native int BS2_RemoveDeviceZoneAGEntranceLimit(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int BS2_RemoveAllDeviceZoneAGEntranceLimit(long jarg1, long jarg2);
  public final static native int BS2_SetCheckGlobalAPBViolationHandler(long jarg1, Callback jarg2);
  public final static native int BS2_CheckGlobalAPBViolation(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int BS2_GetDataEncryptKey(long jarg1, long jarg2, long jarg3, BS2EncryptKey jarg3_);
  public final static native int BS2_SetDataEncryptKey(long jarg1, long jarg2, long jarg3, BS2EncryptKey jarg3_);
  public final static native int BS2_RemoveDataEncryptKey(long jarg1, long jarg2);
  public final static native void foo(long[] jarg1);
  public final static native void foo1(long jarg1, long[] jarg2);
  public final static native void bar(long[] jarg1);
}
